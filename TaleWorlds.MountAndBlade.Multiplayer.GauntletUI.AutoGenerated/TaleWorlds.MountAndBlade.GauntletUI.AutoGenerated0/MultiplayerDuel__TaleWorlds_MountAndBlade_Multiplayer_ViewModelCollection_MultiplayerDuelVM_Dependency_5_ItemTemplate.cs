using System.ComponentModel;
using System.Numerics;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.GauntletUI.ExtraWidgets;
using TaleWorlds.GauntletUI.Layout;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Mission.NameMarker;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Multiplayer;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Multiplayer.HUD;
using TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection;
using TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.ClassLoadout;

namespace TaleWorlds.MountAndBlade.GauntletUI.AutoGenerated0;

public class MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_5_ItemTemplate : Widget
{
	private Widget _widget;

	private DuelTargetMarkerListPanel _widget_0;

	private BrushWidget _widget_0_0;

	private BrushWidget _widget_0_0_0;

	private ListPanel _widget_0_0_0_0;

	private ListPanel _widget_0_0_0_0_0;

	private BrushWidget _widget_0_0_0_0_0_0;

	private MultiplayerTroopTypeIconWidget _widget_0_0_0_0_0_0_0;

	private Widget _widget_0_0_0_0_0_0_0_0;

	private Widget _widget_0_0_0_0_0_1;

	private ListPanel _widget_0_0_0_0_0_1_0;

	private Widget _widget_0_0_0_0_0_2;

	private DuelArenaFlagVisualBrushWidget _widget_0_0_0_0_0_2_0;

	private DuelArenaFlagVisualBrushWidget _widget_0_0_0_0_0_2_1;

	private ListPanel _widget_0_0_0_0_1;

	private ScrollingRichTextWidget _widget_0_0_0_0_1_0;

	private TextWidget _widget_0_0_0_0_1_1;

	private ListPanel _widget_0_0_0_0_1_2;

	private TextWidget _widget_0_0_0_0_1_2_0;

	private Widget _widget_0_0_0_0_1_2_1;

	private RichTextWidget _widget_1;

	private MissionDuelPeerMarkerVM _datasource_Root;

	private MPTeammateCompassTargetVM _datasource_Root_CompassElement;

	private MBBindingList<MPPerkVM> _datasource_Root_SelectedPerks;

	public MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_5_ItemTemplate(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new DuelTargetMarkerListPanel(base.Context);
		_widget.AddChild(_widget_0);
		_widget_0_0 = new BrushWidget(base.Context);
		_widget_0.AddChild(_widget_0_0);
		_widget_0_0_0 = new BrushWidget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_0);
		_widget_0_0_0_0 = new ListPanel(base.Context);
		_widget_0_0_0.AddChild(_widget_0_0_0_0);
		_widget_0_0_0_0_0 = new ListPanel(base.Context);
		_widget_0_0_0_0.AddChild(_widget_0_0_0_0_0);
		_widget_0_0_0_0_0_0 = new BrushWidget(base.Context);
		_widget_0_0_0_0_0.AddChild(_widget_0_0_0_0_0_0);
		_widget_0_0_0_0_0_0_0 = new MultiplayerTroopTypeIconWidget(base.Context);
		_widget_0_0_0_0_0_0.AddChild(_widget_0_0_0_0_0_0_0);
		_widget_0_0_0_0_0_0_0_0 = new Widget(base.Context);
		_widget_0_0_0_0_0_0_0.AddChild(_widget_0_0_0_0_0_0_0_0);
		_widget_0_0_0_0_0_1 = new Widget(base.Context);
		_widget_0_0_0_0_0.AddChild(_widget_0_0_0_0_0_1);
		_widget_0_0_0_0_0_1_0 = new ListPanel(base.Context);
		_widget_0_0_0_0_0_1.AddChild(_widget_0_0_0_0_0_1_0);
		_widget_0_0_0_0_0_2 = new Widget(base.Context);
		_widget_0_0_0_0_0.AddChild(_widget_0_0_0_0_0_2);
		_widget_0_0_0_0_0_2_0 = new DuelArenaFlagVisualBrushWidget(base.Context);
		_widget_0_0_0_0_0_2.AddChild(_widget_0_0_0_0_0_2_0);
		_widget_0_0_0_0_0_2_1 = new DuelArenaFlagVisualBrushWidget(base.Context);
		_widget_0_0_0_0_0_2.AddChild(_widget_0_0_0_0_0_2_1);
		_widget_0_0_0_0_1 = new ListPanel(base.Context);
		_widget_0_0_0_0.AddChild(_widget_0_0_0_0_1);
		_widget_0_0_0_0_1_0 = new ScrollingRichTextWidget(base.Context);
		_widget_0_0_0_0_1.AddChild(_widget_0_0_0_0_1_0);
		_widget_0_0_0_0_1_1 = new TextWidget(base.Context);
		_widget_0_0_0_0_1.AddChild(_widget_0_0_0_0_1_1);
		_widget_0_0_0_0_1_2 = new ListPanel(base.Context);
		_widget_0_0_0_0_1.AddChild(_widget_0_0_0_0_1_2);
		_widget_0_0_0_0_1_2_0 = new TextWidget(base.Context);
		_widget_0_0_0_0_1_2.AddChild(_widget_0_0_0_0_1_2_0);
		_widget_0_0_0_0_1_2_1 = new Widget(base.Context);
		_widget_0_0_0_0_1_2.AddChild(_widget_0_0_0_0_1_2_1);
		_widget_1 = new RichTextWidget(base.Context);
		_widget.AddChild(_widget_1);
	}

	public void SetIds()
	{
		_widget_0_0.Id = "CardBackground";
		_widget_0_0_0.Id = "CardOutline";
		_widget_0_0_0_0.Id = "CardContentList";
		_widget_0_0_0_0_0.Id = "CardContentListHorizontal";
		_widget_0_0_0_0_0_0.Id = "TroopClassBorder";
		_widget_0_0_0_0_0_0_0.Id = "IconContainer";
		_widget_0_0_0_0_0_0_0_0.Id = "IconForeground";
		_widget_1.Id = "ActionText";
	}

	public void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.CoverChildren;
		base.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		_widget_0.Background = _widget_0_0;
		_widget_0.Border = _widget_0_0_0;
		_widget_0.ActionText = _widget_1;
		_widget_0.TroopClassBorder = _widget_0_0_0_0_0_0;
		_widget_0_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0.SuggestedWidth = 215f;
		_widget_0_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0.Brush = base.Context.GetBrush("MPHUD.Duel.Card.Canvas");
		_widget_0_0.UpdateChildrenStates = true;
		_widget_0_0_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_0.Brush = base.Context.GetBrush("MPHUD.Duel.Card.Frame");
		_widget_0_0_0_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_0_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		_widget_0_0_0_0_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0_0.StackLayout.LayoutMethod = LayoutMethod.HorizontalLeftToRight;
		_widget_0_0_0_0_0_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0_0_0_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0_0_0_0.SuggestedWidth = 50f;
		_widget_0_0_0_0_0_0.SuggestedHeight = 50f;
		_widget_0_0_0_0_0_0.PositionXOffset = -10f;
		_widget_0_0_0_0_0_0.PositionYOffset = -10f;
		_widget_0_0_0_0_0_0.Brush = base.Context.GetBrush("MPHUD.Duel.Card.Class.Outline");
		_widget_0_0_0_0_0_0_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0_0_0_0_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0_0_0_0_0.SuggestedWidth = 100f;
		_widget_0_0_0_0_0_0_0.SuggestedHeight = 100f;
		_widget_0_0_0_0_0_0_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_0_0_0_0_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0_0_0_0_0_0.ForegroundWidget = _widget_0_0_0_0_0_0_0_0;
		_widget_0_0_0_0_0_0_0.AlphaFactor = 0f;
		_widget_0_0_0_0_0_0_0_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_0_0_0_0_0_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_0_0_0_0_0_0.Color = new Color(0.9568628f, 0.882353f, 0.7686275f);
		_widget_0_0_0_0_0_1.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0_0_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0_0_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_0_0_0_1.PositionXOffset = -7f;
		_widget_0_0_0_0_0_1_0.DoNotPassEventsToChildren = true;
		_widget_0_0_0_0_0_1_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0_0_1_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0_0_1_0.StackLayout.LayoutMethod = LayoutMethod.HorizontalLeftToRight;
		_widget_0_0_0_0_0_2.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0_0_2.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0_0_2.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_0_0_0_0_0_2.MarginRight = 5f;
		_widget_0_0_0_0_0_2.MarginTop = 2f;
		_widget_0_0_0_0_0_2_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0_0_0_2_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0_0_0_2_0.SuggestedWidth = 35f;
		_widget_0_0_0_0_0_2_0.SuggestedHeight = 43f;
		_widget_0_0_0_0_0_2_0.Brush = base.Context.GetBrush("MPHUD.Duel.Card.Flag.Background");
		_widget_0_0_0_0_0_2_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0_0_0_2_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0_0_0_2_1.SuggestedWidth = 30f;
		_widget_0_0_0_0_0_2_1.SuggestedHeight = 30f;
		_widget_0_0_0_0_0_2_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_0_0_0_2_1.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0_0_0_0_2_1.PositionYOffset = -3f;
		_widget_0_0_0_0_0_2_1.Brush = base.Context.GetBrush("MPHUD.Duel.Arena.Flag.Foreground");
		_widget_0_0_0_0_1.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_0_0_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_0_0_1.MarginTop = 10f;
		_widget_0_0_0_0_1.MarginBottom = 10f;
		_widget_0_0_0_0_1.MarginLeft = 15f;
		_widget_0_0_0_0_1.MarginRight = 15f;
		_widget_0_0_0_0_1.StackLayout.LayoutMethod = LayoutMethod.HorizontalLeftToRight;
		_widget_0_0_0_0_1_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_0_0_1_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0_1_0.MarginTop = 4f;
		_widget_0_0_0_0_1_0.Brush = base.Context.GetBrush("MPHUD.Duel.Card.NameText");
		_widget_0_0_0_0_1_1.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0_1_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0_1_1.MarginTop = 4f;
		_widget_0_0_0_0_1_1.Brush = base.Context.GetBrush("MPHUD.Duel.Card.NameText");
		_widget_0_0_0_0_1_2.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0_1_2.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0_1_2.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0_0_0_1_2.MarginLeft = 5f;
		_widget_0_0_0_0_1_2_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0_1_2_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_0_0_1_2_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_0_0_1_2_0.Brush = base.Context.GetBrush("MPHUD.Duel.Card.HugeBountyText");
		_widget_0_0_0_0_1_2_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0_0_1_2_1.SuggestedWidth = 26f;
		_widget_0_0_0_0_1_2_1.SuggestedHeight = 26f;
		_widget_0_0_0_0_1_2_1.Sprite = base.Context.SpriteData.GetSprite("General\\Icons\\bounty_icon_Card");
		_widget_0_0_0_0_1_2_1.Color = new Color(1f, 52f / 85f, 0f);
		_widget_0_0_0_0_1_2_1.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0_0_0_1_2_1.MarginLeft = 3f;
		_widget_1.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1.Brush = base.Context.GetBrush("MPHUD.Duel.Card.ActionText");
		_widget_1.MarginTop = 8f;
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_0.PropertyChanged -= PropertyChangedListenerOf_widget_0;
		_widget_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0;
		_widget_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0;
		_widget_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0;
		_widget_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0;
		_widget_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0;
		_widget_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0;
		_widget_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0;
		_widget_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0;
		_widget_0_0_0_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_0;
		_widget_0_0_0_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_0;
		_widget_0_0_0_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_0;
		_widget_0_0_0_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_0;
		_widget_0_0_0_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_0;
		_widget_0_0_0_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_0;
		_widget_0_0_0_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_0;
		_widget_0_0_0_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_0;
		_widget_0_0_0_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_0;
		_widget_0_0_0_0_0_1.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_0_1;
		_widget_0_0_0_0_0_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_0_1;
		_widget_0_0_0_0_0_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_0_1;
		_widget_0_0_0_0_0_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_1;
		_widget_0_0_0_0_0_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_1;
		_widget_0_0_0_0_0_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_0_1;
		_widget_0_0_0_0_0_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_0_1;
		_widget_0_0_0_0_0_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_0_1;
		_widget_0_0_0_0_0_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_0_1;
		_widget_0_0_0_0_0_2.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_0_2;
		_widget_0_0_0_0_0_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_0_2;
		_widget_0_0_0_0_0_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_0_2;
		_widget_0_0_0_0_0_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_2;
		_widget_0_0_0_0_0_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_2;
		_widget_0_0_0_0_0_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_0_2;
		_widget_0_0_0_0_0_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_0_2;
		_widget_0_0_0_0_0_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_0_2;
		_widget_0_0_0_0_0_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_0_2;
		_widget_0_0_0_0_0_2_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
		_widget_0_0_0_0_0_2_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
		_widget_0_0_0_0_0_2_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
		_widget_0_0_0_0_0_2_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
		_widget_0_0_0_0_0_2_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
		_widget_0_0_0_0_0_2_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
		_widget_0_0_0_0_0_2_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
		_widget_0_0_0_0_0_2_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
		_widget_0_0_0_0_0_2_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
		_widget_0_0_0_0_0_2_1.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
		_widget_0_0_0_0_0_2_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
		_widget_0_0_0_0_0_2_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
		_widget_0_0_0_0_0_2_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
		_widget_0_0_0_0_0_2_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
		_widget_0_0_0_0_0_2_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
		_widget_0_0_0_0_0_2_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
		_widget_0_0_0_0_0_2_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
		_widget_0_0_0_0_0_2_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
		_widget_0_0_0_0_1_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_1_0;
		_widget_0_0_0_0_1_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_1_0;
		_widget_0_0_0_0_1_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_1_0;
		_widget_0_0_0_0_1_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_1_0;
		_widget_0_0_0_0_1_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_1_0;
		_widget_0_0_0_0_1_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_1_0;
		_widget_0_0_0_0_1_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_1_0;
		_widget_0_0_0_0_1_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_1_0;
		_widget_0_0_0_0_1_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_1_0;
		_widget_0_0_0_0_1_1.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_1_1;
		_widget_0_0_0_0_1_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_1_1;
		_widget_0_0_0_0_1_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_1_1;
		_widget_0_0_0_0_1_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_1_1;
		_widget_0_0_0_0_1_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_1_1;
		_widget_0_0_0_0_1_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_1_1;
		_widget_0_0_0_0_1_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_1_1;
		_widget_0_0_0_0_1_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_1_1;
		_widget_0_0_0_0_1_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_1_1;
		_widget_0_0_0_0_1_2_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
		_widget_0_0_0_0_1_2_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
		_widget_0_0_0_0_1_2_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
		_widget_0_0_0_0_1_2_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
		_widget_0_0_0_0_1_2_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
		_widget_0_0_0_0_1_2_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
		_widget_0_0_0_0_1_2_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
		_widget_0_0_0_0_1_2_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
		_widget_0_0_0_0_1_2_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
		_widget_1.PropertyChanged -= PropertyChangedListenerOf_widget_1;
		_widget_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1;
		_widget_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1;
		_widget_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1;
		_widget_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1;
		_widget_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1;
		_widget_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_1;
		_widget_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1;
		_widget_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1;
		if (_datasource_Root_CompassElement != null)
		{
			_datasource_Root_CompassElement.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_CompassElement;
			_widget_0_0_0_0_0_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_datasource_Root_CompassElement = null;
		}
		if (_datasource_Root_SelectedPerks != null)
		{
			_datasource_Root_SelectedPerks.ListChanged -= OnList_datasource_Root_SelectedPerksChanged;
			for (int num = _widget_0_0_0_0_0_1_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_0_0_0_0_0_1_0.GetChild(num);
				((MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate)child).OnBeforeRemovedChild(child);
				((MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate)_widget_0_0_0_0_0_1_0.GetChild(num)).DestroyDataSource();
			}
			_datasource_Root_SelectedPerks = null;
		}
		_datasource_Root = null;
	}

	public void SetDataSource(MissionDuelPeerMarkerVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0(string propertyName)
	{
		switch (propertyName)
		{
		case "Position":
			_datasource_Root.ScreenPosition = _widget_0.Position;
			break;
		case "WSign":
			_datasource_Root.WSign = _widget_0.WSign;
			break;
		case "IsAgentInScreenBoundaries":
			_datasource_Root.IsAgentInScreenBoundaries = _widget_0.IsAgentInScreenBoundaries;
			break;
		case "IsTracked":
			_datasource_Root.IsTracked = _widget_0.IsTracked;
			break;
		case "IsAvailable":
			_datasource_Root.IsEnabled = _widget_0.IsAvailable;
			break;
		case "HasTargetSentDuelRequest":
			_datasource_Root.HasDuelRequestForPlayer = _widget_0.HasTargetSentDuelRequest;
			break;
		case "HasPlayerSentDuelRequest":
			_datasource_Root.HasSentDuelRequest = _widget_0.HasPlayerSentDuelRequest;
			break;
		case "IsAgentFocused":
			_datasource_Root.IsFocused = _widget_0.IsAgentFocused;
			break;
		}
	}

	private void PropertyChangedListenerOf_widget_0_0_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_0_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_0_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_0_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_0_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_0_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_0_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_0_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_0_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_0_0_0_0(string propertyName)
	{
		if (propertyName == "IsVisible")
		{
			_datasource_Root.ShouldShowInformation = _widget_0_0_0_0_0.IsVisible;
		}
	}

	private void PropertyChangedListenerOf_widget_0_0_0_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_0_0_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_0_0_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_0_0_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_0_0_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_0_0_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_0_0_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_1(string propertyName)
	{
		if (propertyName == "IsVisible")
		{
			_datasource_Root.ShouldShowInformation = _widget_0_0_0_0_0_1.IsVisible;
		}
	}

	private void PropertyChangedListenerOf_widget_0_0_0_0_0_2(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_0_0_0_0_2(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_0_0_0_0_2(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_0_0_0_0_2(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_0_0_0_0_2(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_0_0_0_0_2(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_0_0_0_0_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2(string propertyName)
	{
		if (propertyName == "IsVisible")
		{
			_datasource_Root.ShouldShowInformation = _widget_0_0_0_0_0_2.IsVisible;
		}
	}

	private void PropertyChangedListenerOf_widget_0_0_0_0_0_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_0_0_0_0_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_0_0_0_0_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_0_0_0_0_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_0_0_0_0_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_0_0_0_0_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_0_0_0_0_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_0(string propertyName)
	{
		if (propertyName == "ArenaType")
		{
			_datasource_Root.PreferredArenaType = _widget_0_0_0_0_0_2_0.ArenaType;
		}
	}

	private void PropertyChangedListenerOf_widget_0_0_0_0_0_2_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_0_0_0_0_2_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_0_0_0_0_2_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_2_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_2_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_0_0_0_0_2_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_0_0_0_0_2_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_0_0_0_0_2_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_0_0_0_0_2_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_2_1(string propertyName)
	{
		if (propertyName == "ArenaType")
		{
			_datasource_Root.PreferredArenaType = _widget_0_0_0_0_0_2_1.ArenaType;
		}
	}

	private void PropertyChangedListenerOf_widget_0_0_0_0_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_0_0_0_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_0_0_0_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_0_0_0_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_0_0_0_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_0_0_0_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_0_0_0_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_0_0_0_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_0_0_0_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_0(string propertyName)
	{
		if (propertyName == "Text")
		{
			_datasource_Root.Name = _widget_0_0_0_0_1_0.Text;
		}
		else if (propertyName == "IsVisible")
		{
			_datasource_Root.IsTracked = _widget_0_0_0_0_1_0.IsVisible;
		}
	}

	private void PropertyChangedListenerOf_widget_0_0_0_0_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_0_0_0_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_0_0_0_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_0_0_0_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_0_0_0_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_0_0_0_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_0_0_0_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_0_0_0_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_0_0_0_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_1(string propertyName)
	{
		if (propertyName == "Text")
		{
			_datasource_Root.Name = _widget_0_0_0_0_1_1.Text;
		}
		else if (propertyName == "IsHidden")
		{
			_datasource_Root.IsTracked = _widget_0_0_0_0_1_1.IsHidden;
		}
	}

	private void PropertyChangedListenerOf_widget_0_0_0_0_1_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_2_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_0_0_0_1_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_2_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_0_0_0_1_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_2_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_0_0_0_1_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_2_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_0_0_0_1_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_2_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_0_0_0_1_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_2_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_0_0_0_1_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_2_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_0_0_0_1_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_2_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_0_0_0_1_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_2_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_0_0_0_1_2_0(string propertyName)
	{
		if (propertyName == "IntText")
		{
			_datasource_Root.Bounty = _widget_0_0_0_0_1_2_0.IntText;
		}
	}

	private void PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_1(string propertyName)
	{
		if (propertyName == "Text")
		{
			_datasource_Root.ActionDescriptionText = _widget_1.Text;
		}
		else if (propertyName == "IsVisible")
		{
			_datasource_Root.IsFocused = _widget_1.IsVisible;
		}
	}

	private void PropertyChangedListenerOf_widget_0_0_0_0_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_0_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_0_0_0_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_0_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_0_0_0_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_0_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_0_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_0_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_0_0_0_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_0_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_0_0_0_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_0_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_0_0_0_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_0_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_0_0_0_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_0_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_0_0_0_0_0_0(string propertyName)
	{
		if (propertyName == "IconSpriteType")
		{
			_datasource_Root_CompassElement.IconType = _widget_0_0_0_0_0_0_0.IconSpriteType;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		switch (propertyName)
		{
		case "CompassElement":
			RefreshDataSource_datasource_Root_CompassElement(_datasource_Root.CompassElement);
			break;
		case "SelectedPerks":
			RefreshDataSource_datasource_Root_SelectedPerks(_datasource_Root.SelectedPerks);
			break;
		case "ScreenPosition":
			_widget_0.Position = _datasource_Root.ScreenPosition;
			break;
		case "WSign":
			_widget_0.WSign = _datasource_Root.WSign;
			break;
		case "IsAgentInScreenBoundaries":
			_widget_0.IsAgentInScreenBoundaries = _datasource_Root.IsAgentInScreenBoundaries;
			break;
		case "IsTracked":
			_widget_0.IsTracked = _datasource_Root.IsTracked;
			_widget_0_0_0_0_1_0.IsVisible = _datasource_Root.IsTracked;
			_widget_0_0_0_0_1_1.IsHidden = _datasource_Root.IsTracked;
			break;
		case "IsEnabled":
			_widget_0.IsAvailable = _datasource_Root.IsEnabled;
			break;
		case "HasDuelRequestForPlayer":
			_widget_0.HasTargetSentDuelRequest = _datasource_Root.HasDuelRequestForPlayer;
			break;
		case "HasSentDuelRequest":
			_widget_0.HasPlayerSentDuelRequest = _datasource_Root.HasSentDuelRequest;
			break;
		case "IsFocused":
			_widget_0.IsAgentFocused = _datasource_Root.IsFocused;
			_widget_1.IsVisible = _datasource_Root.IsFocused;
			break;
		case "ShouldShowInformation":
			_widget_0_0_0_0_0.IsVisible = _datasource_Root.ShouldShowInformation;
			_widget_0_0_0_0_0_1.IsVisible = _datasource_Root.ShouldShowInformation;
			_widget_0_0_0_0_0_2.IsVisible = _datasource_Root.ShouldShowInformation;
			break;
		case "PreferredArenaType":
			_widget_0_0_0_0_0_2_0.ArenaType = _datasource_Root.PreferredArenaType;
			_widget_0_0_0_0_0_2_1.ArenaType = _datasource_Root.PreferredArenaType;
			break;
		case "Name":
			_widget_0_0_0_0_1_0.Text = _datasource_Root.Name;
			_widget_0_0_0_0_1_1.Text = _datasource_Root.Name;
			break;
		case "Bounty":
			_widget_0_0_0_0_1_2_0.IntText = _datasource_Root.Bounty;
			break;
		case "ActionDescriptionText":
			_widget_1.Text = _datasource_Root.ActionDescriptionText;
			break;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root_CompassElement(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_CompassElement(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root_CompassElement(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_CompassElement(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_CompassElement(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_CompassElement(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_CompassElement(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_CompassElement(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_CompassElement(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_CompassElement(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_CompassElement(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_CompassElement(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_CompassElement(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_CompassElement(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_CompassElement(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_CompassElement(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_CompassElement(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_CompassElement(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root_CompassElement(string propertyName)
	{
		if (propertyName == "IconType")
		{
			_widget_0_0_0_0_0_0_0.IconSpriteType = _datasource_Root_CompassElement.IconType;
		}
	}

	public void OnList_datasource_Root_SelectedPerksChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_0_0_0_0_0_1_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_0_0_0_0_0_1_0.GetChild(num);
				((MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_0_0_0_0_0_1_0.GetChild(num);
				((MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate)child4).SetDataSource(null);
				_widget_0_0_0_0_0_1_0.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_SelectedPerks.Count; i++)
			{
				MPPerkVM bindingObject = _datasource_Root_SelectedPerks[i];
				_widget_0_0_0_0_0_1_0.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate = new MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate);
			MPPerkVM dataSource = (MPPerkVM)(generatedWidgetData.Data = _datasource_Root_SelectedPerks[e.NewIndex]);
			multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_0_0_0_0_0_1_0.AddChildAtIndex(multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate, e.NewIndex);
			multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate.CreateWidgets();
			multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate.SetIds();
			multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate.SetAttributes();
			multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_0_0_0_0_0_1_0.GetChild(e.NewIndex);
			((MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_0_0_0_0_0_1_0.GetChild(e.NewIndex);
			((MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate)child).SetDataSource(null);
			_widget_0_0_0_0_0_1_0.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(MissionDuelPeerMarkerVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget_0.PropertyChanged -= PropertyChangedListenerOf_widget_0;
			_widget_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0;
			_widget_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0;
			_widget_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0;
			_widget_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0;
			_widget_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0;
			_widget_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0;
			_widget_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0;
			_widget_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0;
			_widget_0_0_0_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_0;
			_widget_0_0_0_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_0;
			_widget_0_0_0_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_0;
			_widget_0_0_0_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_0;
			_widget_0_0_0_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_0;
			_widget_0_0_0_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_0;
			_widget_0_0_0_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_0;
			_widget_0_0_0_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_0;
			_widget_0_0_0_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_0;
			_widget_0_0_0_0_0_1.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_0_1;
			_widget_0_0_0_0_0_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_0_1;
			_widget_0_0_0_0_0_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_0_1;
			_widget_0_0_0_0_0_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_1;
			_widget_0_0_0_0_0_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_1;
			_widget_0_0_0_0_0_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_0_1;
			_widget_0_0_0_0_0_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_0_1;
			_widget_0_0_0_0_0_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_0_1;
			_widget_0_0_0_0_0_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_0_1;
			_widget_0_0_0_0_0_2.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_0_2;
			_widget_0_0_0_0_0_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_0_2;
			_widget_0_0_0_0_0_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_0_2;
			_widget_0_0_0_0_0_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_2;
			_widget_0_0_0_0_0_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_2;
			_widget_0_0_0_0_0_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_0_2;
			_widget_0_0_0_0_0_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_0_2;
			_widget_0_0_0_0_0_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_0_2;
			_widget_0_0_0_0_0_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_0_2;
			_widget_0_0_0_0_0_2_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
			_widget_0_0_0_0_0_2_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
			_widget_0_0_0_0_0_2_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
			_widget_0_0_0_0_0_2_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
			_widget_0_0_0_0_0_2_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
			_widget_0_0_0_0_0_2_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
			_widget_0_0_0_0_0_2_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
			_widget_0_0_0_0_0_2_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
			_widget_0_0_0_0_0_2_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
			_widget_0_0_0_0_0_2_1.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
			_widget_0_0_0_0_0_2_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
			_widget_0_0_0_0_0_2_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
			_widget_0_0_0_0_0_2_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
			_widget_0_0_0_0_0_2_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
			_widget_0_0_0_0_0_2_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
			_widget_0_0_0_0_0_2_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
			_widget_0_0_0_0_0_2_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
			_widget_0_0_0_0_0_2_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
			_widget_0_0_0_0_1_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_1_0;
			_widget_0_0_0_0_1_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_1_0;
			_widget_0_0_0_0_1_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_1_0;
			_widget_0_0_0_0_1_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_1_0;
			_widget_0_0_0_0_1_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_1_0;
			_widget_0_0_0_0_1_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_1_0;
			_widget_0_0_0_0_1_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_1_0;
			_widget_0_0_0_0_1_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_1_0;
			_widget_0_0_0_0_1_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_1_0;
			_widget_0_0_0_0_1_1.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_1_1;
			_widget_0_0_0_0_1_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_1_1;
			_widget_0_0_0_0_1_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_1_1;
			_widget_0_0_0_0_1_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_1_1;
			_widget_0_0_0_0_1_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_1_1;
			_widget_0_0_0_0_1_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_1_1;
			_widget_0_0_0_0_1_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_1_1;
			_widget_0_0_0_0_1_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_1_1;
			_widget_0_0_0_0_1_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_1_1;
			_widget_0_0_0_0_1_2_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
			_widget_0_0_0_0_1_2_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
			_widget_0_0_0_0_1_2_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
			_widget_0_0_0_0_1_2_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
			_widget_0_0_0_0_1_2_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
			_widget_0_0_0_0_1_2_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
			_widget_0_0_0_0_1_2_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
			_widget_0_0_0_0_1_2_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
			_widget_0_0_0_0_1_2_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
			_widget_1.PropertyChanged -= PropertyChangedListenerOf_widget_1;
			_widget_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1;
			_widget_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1;
			_widget_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1;
			_widget_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1;
			_widget_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1;
			_widget_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_1;
			_widget_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1;
			_widget_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1;
			if (_datasource_Root_CompassElement != null)
			{
				_datasource_Root_CompassElement.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_CompassElement;
				_datasource_Root_CompassElement.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_CompassElement;
				_datasource_Root_CompassElement.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_CompassElement;
				_datasource_Root_CompassElement.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_CompassElement;
				_datasource_Root_CompassElement.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_CompassElement;
				_datasource_Root_CompassElement.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_CompassElement;
				_datasource_Root_CompassElement.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_CompassElement;
				_datasource_Root_CompassElement.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_CompassElement;
				_datasource_Root_CompassElement.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_CompassElement;
				_widget_0_0_0_0_0_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
				_widget_0_0_0_0_0_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
				_widget_0_0_0_0_0_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
				_widget_0_0_0_0_0_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
				_widget_0_0_0_0_0_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
				_widget_0_0_0_0_0_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
				_widget_0_0_0_0_0_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
				_widget_0_0_0_0_0_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
				_widget_0_0_0_0_0_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
				_datasource_Root_CompassElement = null;
			}
			if (_datasource_Root_SelectedPerks != null)
			{
				_datasource_Root_SelectedPerks.ListChanged -= OnList_datasource_Root_SelectedPerksChanged;
				for (int num = _widget_0_0_0_0_0_1_0.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_0_0_0_0_0_1_0.GetChild(num);
					((MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_0_0_0_0_0_1_0.GetChild(num);
					((MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate)child2).SetDataSource(null);
					_widget_0_0_0_0_0_1_0.RemoveChild(child2);
				}
				_datasource_Root_SelectedPerks = null;
			}
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_0.Position = _datasource_Root.ScreenPosition;
		_widget_0.WSign = _datasource_Root.WSign;
		_widget_0.IsAgentInScreenBoundaries = _datasource_Root.IsAgentInScreenBoundaries;
		_widget_0.IsTracked = _datasource_Root.IsTracked;
		_widget_0.IsAvailable = _datasource_Root.IsEnabled;
		_widget_0.HasTargetSentDuelRequest = _datasource_Root.HasDuelRequestForPlayer;
		_widget_0.HasPlayerSentDuelRequest = _datasource_Root.HasSentDuelRequest;
		_widget_0.IsAgentFocused = _datasource_Root.IsFocused;
		_widget_0.PropertyChanged += PropertyChangedListenerOf_widget_0;
		_widget_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0;
		_widget_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0;
		_widget_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0;
		_widget_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0;
		_widget_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0;
		_widget_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0;
		_widget_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0;
		_widget_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0;
		_widget_0_0_0_0_0.IsVisible = _datasource_Root.ShouldShowInformation;
		_widget_0_0_0_0_0.PropertyChanged += PropertyChangedListenerOf_widget_0_0_0_0_0;
		_widget_0_0_0_0_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0_0_0_0;
		_widget_0_0_0_0_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0_0_0_0;
		_widget_0_0_0_0_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0_0_0_0;
		_widget_0_0_0_0_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0_0_0_0;
		_widget_0_0_0_0_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0_0_0_0;
		_widget_0_0_0_0_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0_0_0_0;
		_widget_0_0_0_0_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0_0_0_0;
		_widget_0_0_0_0_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0_0_0_0;
		_widget_0_0_0_0_0_1.IsVisible = _datasource_Root.ShouldShowInformation;
		_widget_0_0_0_0_0_1.PropertyChanged += PropertyChangedListenerOf_widget_0_0_0_0_0_1;
		_widget_0_0_0_0_0_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0_0_0_0_1;
		_widget_0_0_0_0_0_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0_0_0_0_1;
		_widget_0_0_0_0_0_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_1;
		_widget_0_0_0_0_0_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_1;
		_widget_0_0_0_0_0_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0_0_0_0_1;
		_widget_0_0_0_0_0_1.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0_0_0_0_1;
		_widget_0_0_0_0_0_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0_0_0_0_1;
		_widget_0_0_0_0_0_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0_0_0_0_1;
		_widget_0_0_0_0_0_2.IsVisible = _datasource_Root.ShouldShowInformation;
		_widget_0_0_0_0_0_2.PropertyChanged += PropertyChangedListenerOf_widget_0_0_0_0_0_2;
		_widget_0_0_0_0_0_2.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0_0_0_0_2;
		_widget_0_0_0_0_0_2.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0_0_0_0_2;
		_widget_0_0_0_0_0_2.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_2;
		_widget_0_0_0_0_0_2.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_2;
		_widget_0_0_0_0_0_2.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0_0_0_0_2;
		_widget_0_0_0_0_0_2.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0_0_0_0_2;
		_widget_0_0_0_0_0_2.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0_0_0_0_2;
		_widget_0_0_0_0_0_2.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0_0_0_0_2;
		_widget_0_0_0_0_0_2_0.ArenaType = _datasource_Root.PreferredArenaType;
		_widget_0_0_0_0_0_2_0.PropertyChanged += PropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
		_widget_0_0_0_0_0_2_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
		_widget_0_0_0_0_0_2_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
		_widget_0_0_0_0_0_2_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
		_widget_0_0_0_0_0_2_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
		_widget_0_0_0_0_0_2_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
		_widget_0_0_0_0_0_2_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
		_widget_0_0_0_0_0_2_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
		_widget_0_0_0_0_0_2_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0_0_0_0_2_0;
		_widget_0_0_0_0_0_2_1.ArenaType = _datasource_Root.PreferredArenaType;
		_widget_0_0_0_0_0_2_1.PropertyChanged += PropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
		_widget_0_0_0_0_0_2_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
		_widget_0_0_0_0_0_2_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
		_widget_0_0_0_0_0_2_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
		_widget_0_0_0_0_0_2_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
		_widget_0_0_0_0_0_2_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
		_widget_0_0_0_0_0_2_1.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
		_widget_0_0_0_0_0_2_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
		_widget_0_0_0_0_0_2_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0_0_0_0_2_1;
		_widget_0_0_0_0_1_0.Text = _datasource_Root.Name;
		_widget_0_0_0_0_1_0.IsVisible = _datasource_Root.IsTracked;
		_widget_0_0_0_0_1_0.PropertyChanged += PropertyChangedListenerOf_widget_0_0_0_0_1_0;
		_widget_0_0_0_0_1_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0_0_0_1_0;
		_widget_0_0_0_0_1_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0_0_0_1_0;
		_widget_0_0_0_0_1_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0_0_0_1_0;
		_widget_0_0_0_0_1_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0_0_0_1_0;
		_widget_0_0_0_0_1_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0_0_0_1_0;
		_widget_0_0_0_0_1_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0_0_0_1_0;
		_widget_0_0_0_0_1_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0_0_0_1_0;
		_widget_0_0_0_0_1_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0_0_0_1_0;
		_widget_0_0_0_0_1_1.Text = _datasource_Root.Name;
		_widget_0_0_0_0_1_1.IsHidden = _datasource_Root.IsTracked;
		_widget_0_0_0_0_1_1.PropertyChanged += PropertyChangedListenerOf_widget_0_0_0_0_1_1;
		_widget_0_0_0_0_1_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0_0_0_1_1;
		_widget_0_0_0_0_1_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0_0_0_1_1;
		_widget_0_0_0_0_1_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0_0_0_1_1;
		_widget_0_0_0_0_1_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0_0_0_1_1;
		_widget_0_0_0_0_1_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0_0_0_1_1;
		_widget_0_0_0_0_1_1.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0_0_0_1_1;
		_widget_0_0_0_0_1_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0_0_0_1_1;
		_widget_0_0_0_0_1_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0_0_0_1_1;
		_widget_0_0_0_0_1_2_0.IntText = _datasource_Root.Bounty;
		_widget_0_0_0_0_1_2_0.PropertyChanged += PropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
		_widget_0_0_0_0_1_2_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
		_widget_0_0_0_0_1_2_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
		_widget_0_0_0_0_1_2_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
		_widget_0_0_0_0_1_2_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
		_widget_0_0_0_0_1_2_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
		_widget_0_0_0_0_1_2_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
		_widget_0_0_0_0_1_2_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
		_widget_0_0_0_0_1_2_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0_0_0_1_2_0;
		_widget_1.Text = _datasource_Root.ActionDescriptionText;
		_widget_1.IsVisible = _datasource_Root.IsFocused;
		_widget_1.PropertyChanged += PropertyChangedListenerOf_widget_1;
		_widget_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1;
		_widget_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1;
		_widget_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1;
		_widget_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1;
		_widget_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1;
		_widget_1.intPropertyChanged += intPropertyChangedListenerOf_widget_1;
		_widget_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1;
		_widget_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1;
		_datasource_Root_CompassElement = _datasource_Root.CompassElement;
		if (_datasource_Root_CompassElement != null)
		{
			_datasource_Root_CompassElement.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_CompassElement;
			_widget_0_0_0_0_0_0_0.IconSpriteType = _datasource_Root_CompassElement.IconType;
			_widget_0_0_0_0_0_0_0.PropertyChanged += PropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
		}
		_datasource_Root_SelectedPerks = _datasource_Root.SelectedPerks;
		if (_datasource_Root_SelectedPerks != null)
		{
			_datasource_Root_SelectedPerks.ListChanged += OnList_datasource_Root_SelectedPerksChanged;
			for (int i = 0; i < _datasource_Root_SelectedPerks.Count; i++)
			{
				MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate = new MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate);
				MPPerkVM dataSource = (MPPerkVM)(generatedWidgetData.Data = _datasource_Root_SelectedPerks[i]);
				multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0_0_0_0_0_1_0.AddChildAtIndex(multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate, i);
				multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate.CreateWidgets();
				multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate.SetIds();
				multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate.SetAttributes();
				multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_CompassElement(MPTeammateCompassTargetVM newDataSource)
	{
		if (_datasource_Root_CompassElement != null)
		{
			_datasource_Root_CompassElement.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_CompassElement;
			_widget_0_0_0_0_0_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_datasource_Root_CompassElement = null;
		}
		_datasource_Root_CompassElement = newDataSource;
		_datasource_Root_CompassElement = _datasource_Root.CompassElement;
		if (_datasource_Root_CompassElement != null)
		{
			_datasource_Root_CompassElement.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_CompassElement;
			_datasource_Root_CompassElement.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_CompassElement;
			_widget_0_0_0_0_0_0_0.IconSpriteType = _datasource_Root_CompassElement.IconType;
			_widget_0_0_0_0_0_0_0.PropertyChanged += PropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
			_widget_0_0_0_0_0_0_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0_0_0_0_0_0;
		}
	}

	private void RefreshDataSource_datasource_Root_SelectedPerks(MBBindingList<MPPerkVM> newDataSource)
	{
		if (_datasource_Root_SelectedPerks != null)
		{
			_datasource_Root_SelectedPerks.ListChanged -= OnList_datasource_Root_SelectedPerksChanged;
			for (int num = _widget_0_0_0_0_0_1_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_0_0_0_0_0_1_0.GetChild(num);
				((MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_0_0_0_0_0_1_0.GetChild(num);
				((MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate)child2).SetDataSource(null);
				_widget_0_0_0_0_0_1_0.RemoveChild(child2);
			}
			_datasource_Root_SelectedPerks = null;
		}
		_datasource_Root_SelectedPerks = newDataSource;
		_datasource_Root_SelectedPerks = _datasource_Root.SelectedPerks;
		if (_datasource_Root_SelectedPerks != null)
		{
			_datasource_Root_SelectedPerks.ListChanged += OnList_datasource_Root_SelectedPerksChanged;
			for (int i = 0; i < _datasource_Root_SelectedPerks.Count; i++)
			{
				MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate = new MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate);
				MPPerkVM dataSource = (MPPerkVM)(generatedWidgetData.Data = _datasource_Root_SelectedPerks[i]);
				multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0_0_0_0_0_1_0.AddChildAtIndex(multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate, i);
				multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate.CreateWidgets();
				multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate.SetIds();
				multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate.SetAttributes();
				multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM_Dependency_7_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}
}
