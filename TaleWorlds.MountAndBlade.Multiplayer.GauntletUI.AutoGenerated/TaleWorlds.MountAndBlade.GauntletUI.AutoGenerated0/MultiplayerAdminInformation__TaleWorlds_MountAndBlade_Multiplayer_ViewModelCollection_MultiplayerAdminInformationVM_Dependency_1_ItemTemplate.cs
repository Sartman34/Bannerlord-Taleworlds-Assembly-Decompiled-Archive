using System.ComponentModel;
using System.Numerics;
using TaleWorlds.Core.ViewModelCollection.Generic;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Multiplayer.AdminMessage;

namespace TaleWorlds.MountAndBlade.GauntletUI.AutoGenerated0;

public class MultiplayerAdminInformation__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerAdminInformationVM_Dependency_1_ItemTemplate : MultiplayerAdminMessageItemWidget
{
	private MultiplayerAdminMessageItemWidget _widget;

	private Widget _widget_0;

	private Widget _widget_0_0;

	private TextWidget _widget_0_1;

	private Widget _widget_0_2;

	private StringItemWithActionVM _datasource_Root;

	public MultiplayerAdminInformation__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerAdminInformationVM_Dependency_1_ItemTemplate(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new Widget(base.Context);
		_widget.AddChild(_widget_0);
		_widget_0_0 = new Widget(base.Context);
		_widget_0.AddChild(_widget_0_0);
		_widget_0_1 = new TextWidget(base.Context);
		_widget_0.AddChild(_widget_0_1);
		_widget_0_2 = new Widget(base.Context);
		_widget_0.AddChild(_widget_0_2);
	}

	public void SetIds()
	{
	}

	public void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.StretchToParent;
		base.HeightSizePolicy = SizePolicy.CoverChildren;
		base.MarginLeft = 50f;
		base.MarginRight = 50f;
		base.IsVisible = false;
		_widget_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0.SuggestedWidth = 720f;
		_widget_0.SuggestedHeight = 220f;
		_widget_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0.Sprite = base.Context.SpriteData.GetSprite("popup_gradient_background_9");
		_widget_0.Color = new Color(0f, 0f, 0f, 0.8000001f);
		_widget_0_0.DoNotAcceptEvents = true;
		_widget_0_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0.SuggestedHeight = 2f;
		_widget_0_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0.VerticalAlignment = VerticalAlignment.Top;
		_widget_0_0.Sprite = base.Context.SpriteData.GetSprite("MPLobby\\Profile\\horizontal_gradient_divider");
		_widget_0_0.Color = new Color(0.654902f, 0.4117647f, 0.08627451f);
		_widget_0_1.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_1.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_1.Brush = base.Context.GetBrush("MPAdminMessage.Text");
		_widget_0_2.DoNotAcceptEvents = true;
		_widget_0_2.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_2.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_2.SuggestedHeight = 2f;
		_widget_0_2.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_2.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_0_2.Sprite = base.Context.SpriteData.GetSprite("MPLobby\\Profile\\horizontal_gradient_divider");
		_widget_0_2.Color = new Color(0.654902f, 0.4117647f, 0.08627451f);
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.EventFire -= EventListenerOf_widget;
			_widget_0_1.PropertyChanged -= PropertyChangedListenerOf_widget_0_1;
			_widget_0_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_1;
			_widget_0_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_1;
			_widget_0_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_1;
			_widget_0_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_1;
			_datasource_Root = null;
		}
	}

	public void SetDataSource(StringItemWithActionVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void EventListenerOf_widget(Widget widget, string commandName, object[] args)
	{
		if (commandName == "Remove")
		{
			_datasource_Root.ExecuteAction();
		}
	}

	private void PropertyChangedListenerOf_widget_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_1(string propertyName)
	{
		if (propertyName == "Text")
		{
			_datasource_Root.ActionText = _widget_0_1.Text;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		if (propertyName == "ActionText")
		{
			_widget_0_1.Text = _datasource_Root.ActionText;
		}
	}

	private void RefreshDataSource_datasource_Root(StringItemWithActionVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.EventFire -= EventListenerOf_widget;
			_widget_0_1.PropertyChanged -= PropertyChangedListenerOf_widget_0_1;
			_widget_0_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_1;
			_widget_0_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_1;
			_widget_0_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_1;
			_widget_0_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_1;
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.EventFire += EventListenerOf_widget;
			_widget_0_1.Text = _datasource_Root.ActionText;
			_widget_0_1.PropertyChanged += PropertyChangedListenerOf_widget_0_1;
			_widget_0_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_1;
			_widget_0_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_1;
			_widget_0_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_1;
			_widget_0_1.intPropertyChanged += intPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_1;
		}
	}
}
