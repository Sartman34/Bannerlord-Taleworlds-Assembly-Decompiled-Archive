using System.ComponentModel;
using System.Numerics;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.ExtraWidgets;
using TaleWorlds.GauntletUI.Layout;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Mission.FlagMarker;
using TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.FlagMarker.Targets;

namespace TaleWorlds.MountAndBlade.GauntletUI.AutoGenerated0;

public class MPMissionMarkers__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_FlagMarker_MultiplayerMissionMarkerVM_Dependency_5_MPMissionMarkerFlag__InheritedPrefab : MultiplayerMissionMarkerListPanel
{
	private MultiplayerMissionMarkerListPanel _widget;

	private Widget _widget_0;

	private FillBarVerticalClipWidget _widget_0_0;

	private ImageWidget _widget_0_0_0;

	private ImageWidget _widget_0_0_1;

	private Widget _widget_0_0_2;

	private ImageWidget _widget_0_0_2_0;

	private TextWidget _widget_0_1;

	private Widget _widget_0_2;

	private ListPanel _widget_0_3;

	private ValueBasedVisibilityWidget _widget_0_3_0;

	private TextWidget _widget_0_3_0_0;

	private MissionFlagMarkerTargetVM _datasource_Root;

	public MPMissionMarkers__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_FlagMarker_MultiplayerMissionMarkerVM_Dependency_5_MPMissionMarkerFlag__InheritedPrefab(UIContext context)
		: base(context)
	{
	}

	public virtual void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new Widget(base.Context);
		_widget.AddChild(_widget_0);
		_widget_0_0 = new FillBarVerticalClipWidget(base.Context);
		_widget_0.AddChild(_widget_0_0);
		_widget_0_0_0 = new ImageWidget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_0);
		_widget_0_0_1 = new ImageWidget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_1);
		_widget_0_0_2 = new Widget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_2);
		_widget_0_0_2_0 = new ImageWidget(base.Context);
		_widget_0_0_2.AddChild(_widget_0_0_2_0);
		_widget_0_1 = new TextWidget(base.Context);
		_widget_0.AddChild(_widget_0_1);
		_widget_0_2 = new Widget(base.Context);
		_widget_0.AddChild(_widget_0_2);
		_widget_0_3 = new ListPanel(base.Context);
		_widget_0.AddChild(_widget_0_3);
		_widget_0_3_0 = new ValueBasedVisibilityWidget(base.Context);
		_widget_0_3.AddChild(_widget_0_3_0);
		_widget_0_3_0_0 = new TextWidget(base.Context);
		_widget_0_3_0.AddChild(_widget_0_3_0_0);
	}

	public virtual void SetIds()
	{
		_widget_0.Id = "FlagWidget";
		_widget_0_0_2.Id = "ClipWidget";
		_widget_0_0_2_0.Id = "FillWidget";
		_widget_0_1.Id = "NameTextWidget";
		_widget_0_2.Id = "SpawnFlagIconWidget";
		_widget_0_3.Id = "SiegeContainer";
		_widget_0_3_0.Id = "RemovalTimeVisiblityWidget";
	}

	public virtual void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.CoverChildren;
		base.HeightSizePolicy = SizePolicy.CoverChildren;
		base.CloseDistanceCutoff = 25f;
		base.FarAlphaTarget = 0.5f;
		base.FarDistanceCutoff = 250f;
		base.FlagWidget = _widget_0;
		base.SiegeEngineWidget = _widget.FindChild("SiegeEngineWidget");
		base.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		base.PeerWidget = _widget.FindChild("PeerWidget");
		base.SpawnFlagIconWidget = _widget_0_3.FindChild("SpawnFlagIconWidget");
		base.RemovalTimeVisiblityWidget = _widget_0_3_0;
		_widget_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0.SuggestedWidth = 38f;
		_widget_0.SuggestedHeight = 66f;
		_widget_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0.SuggestedWidth = 38f;
		_widget_0_0.SuggestedHeight = 66f;
		_widget_0_0.ClipWidget = _widget_0_0_2;
		_widget_0_0.FillWidget = _widget_0_0_2_0;
		_widget_0_0.IsDirectionUpward = true;
		_widget_0_0.MaxAmountAsFloat = 1f;
		_widget_0_0_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0.SuggestedWidth = 47f;
		_widget_0_0_0.SuggestedHeight = 73f;
		_widget_0_0_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0_0.Brush = base.Context.GetBrush("MPHUD.PowerBar.Flag.Background");
		_widget_0_0_0.Brush.GlobalAlphaFactor = 0.6f;
		_widget_0_0_0.ForcePixelPerfectRenderPlacement = true;
		_widget_0_0_1.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_1.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_1.Brush = base.Context.GetBrush("MPHUD.PowerBar.Flag");
		_widget_0_0_1.Brush.GlobalAlphaFactor = 0f;
		_widget_0_0_1.ForcePixelPerfectRenderPlacement = true;
		_widget_0_0_2.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_2.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_2.SuggestedWidth = 38f;
		_widget_0_0_2.SuggestedHeight = 66f;
		_widget_0_0_2.AlphaFactor = 0f;
		_widget_0_0_2_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_2_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_2_0.SuggestedWidth = 38f;
		_widget_0_0_2_0.SuggestedHeight = 66f;
		_widget_0_0_2_0.Brush = base.Context.GetBrush("MPHUD.PowerBar.Flag");
		_widget_0_0_2_0.ForcePixelPerfectRenderPlacement = true;
		_widget_0_1.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_1.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_1.Brush = base.Context.GetBrush("FlagMarker.TextBrush");
		_widget_0_1.ClipContents = false;
		_widget_0_1.OverrideDefaultStateSwitchingEnabled = true;
		_widget_0_2.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_2.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_2.SuggestedWidth = 40f;
		_widget_0_2.SuggestedHeight = 40f;
		_widget_0_2.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_2.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_0_2.PositionYOffset = 45f;
		_widget_0_3.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_3.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_3.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_3.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		_widget_0_3.PositionYOffset = 75f;
		_widget_0_3_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_3_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_3_0.IndexToBeVisible = -1;
		_widget_0_3_0.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_0_3_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_3_0.WatchType = ValueBasedVisibilityWidget.WatchTypes.BiggerThan;
		_widget_0_3_0.IsVisible = false;
		_widget_0_3_0_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_3_0_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_3_0_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_3_0_0.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_0_3_0_0.Brush = base.Context.GetBrush("MPHUD.Flag.RemovalTime.Text");
	}

	public virtual void DestroyDataSource()
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.PropertyChanged -= PropertyChangedListenerOf_widget;
			_widget.boolPropertyChanged -= boolPropertyChangedListenerOf_widget;
			_widget.floatPropertyChanged -= floatPropertyChangedListenerOf_widget;
			_widget.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget;
			_widget.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget;
			_widget.doublePropertyChanged -= doublePropertyChangedListenerOf_widget;
			_widget.intPropertyChanged -= intPropertyChangedListenerOf_widget;
			_widget.uintPropertyChanged -= uintPropertyChangedListenerOf_widget;
			_widget.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget;
			_widget_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0;
			_widget_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0;
			_widget_0_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_1.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_2_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_1.PropertyChanged -= PropertyChangedListenerOf_widget_0_1;
			_widget_0_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_1;
			_widget_0_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_1;
			_widget_0_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_1;
			_widget_0_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_1;
			_widget_0_3_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_3_0_0;
			_datasource_Root = null;
		}
	}

	public virtual void SetDataSource(MissionFlagMarkerTargetVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void intPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget(string propertyName)
	{
		switch (propertyName)
		{
		case "Distance":
			_datasource_Root.Distance = _widget.Distance;
			break;
		case "IsMarkerEnabled":
			_datasource_Root.IsEnabled = _widget.IsMarkerEnabled;
			break;
		case "MarkerType":
			_datasource_Root.MarkerType = _widget.MarkerType;
			break;
		case "Position":
			_datasource_Root.ScreenPosition = _widget.Position;
			break;
		case "IsSpawnFlag":
			_datasource_Root.IsSpawnAffectorFlag = _widget.IsSpawnFlag;
			break;
		}
	}

	private void PropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_0(string propertyName)
	{
		if (propertyName == "Color")
		{
			_datasource_Root.Color2 = _widget_0_0.Color.ToString();
		}
		else if (propertyName == "InitialAmountAsFloat")
		{
			_datasource_Root.FlagProgress = _widget_0_0.InitialAmountAsFloat;
		}
	}

	private void PropertyChangedListenerOf_widget_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_0_0(string propertyName)
	{
		if (propertyName == "Brush.GlobalColor")
		{
			_datasource_Root.Color2 = _widget_0_0_0.Brush.GlobalColor.ToString();
		}
		else if (propertyName == "IsDisabled")
		{
			_datasource_Root.IsKeepFlag = _widget_0_0_0.IsDisabled;
		}
	}

	private void PropertyChangedListenerOf_widget_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_0_1(string propertyName)
	{
		if (propertyName == "IsDisabled")
		{
			_datasource_Root.IsKeepFlag = _widget_0_0_1.IsDisabled;
		}
		else if (propertyName == "Brush.GlobalColor")
		{
			_datasource_Root.Color2 = _widget_0_0_1.Brush.GlobalColor.ToString();
		}
	}

	private void PropertyChangedListenerOf_widget_0_0_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_2_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_0_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_2_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_0_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_2_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_0_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_2_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_0_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_2_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_0_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_2_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_0_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_2_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_0_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_2_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_0_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_2_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_0_2_0(string propertyName)
	{
		if (propertyName == "Brush.GlobalColor")
		{
			_datasource_Root.Color = _widget_0_0_2_0.Brush.GlobalColor.ToString();
		}
		else if (propertyName == "IsDisabled")
		{
			_datasource_Root.IsKeepFlag = _widget_0_0_2_0.IsDisabled;
		}
	}

	private void PropertyChangedListenerOf_widget_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_1(string propertyName)
	{
		if (propertyName == "Brush.FontColor")
		{
			_datasource_Root.Color2 = _widget_0_1.Brush.FontColor.ToString();
		}
		else if (propertyName == "Text")
		{
			_datasource_Root.Name = _widget_0_1.Text;
		}
	}

	private void PropertyChangedListenerOf_widget_0_3_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_3_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_3_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_3_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_3_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_3_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_3_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_3_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_3_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_3_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_3_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_3_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_3_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_3_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_3_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_3_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_3_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_3_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_3_0(string propertyName)
	{
		if (propertyName == "IndexToWatch")
		{
			_datasource_Root.RemainingRemovalTime = _widget_0_3_0.IndexToWatch;
		}
	}

	private void PropertyChangedListenerOf_widget_0_3_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_3_0_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_3_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_3_0_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_3_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_3_0_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_3_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_3_0_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_3_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_3_0_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_3_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_3_0_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_3_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_3_0_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_3_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_3_0_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_3_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_3_0_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_3_0_0(string propertyName)
	{
		if (propertyName == "IntText")
		{
			_datasource_Root.RemainingRemovalTime = _widget_0_3_0_0.IntText;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		switch (propertyName)
		{
		case "Distance":
			_widget.Distance = _datasource_Root.Distance;
			break;
		case "IsEnabled":
			_widget.IsMarkerEnabled = _datasource_Root.IsEnabled;
			break;
		case "MarkerType":
			_widget.MarkerType = _datasource_Root.MarkerType;
			break;
		case "ScreenPosition":
			_widget.Position = _datasource_Root.ScreenPosition;
			break;
		case "IsSpawnAffectorFlag":
			_widget.IsSpawnFlag = _datasource_Root.IsSpawnAffectorFlag;
			break;
		case "Color2":
			if (_datasource_Root.Color2 != null)
			{
				_widget_0_0.Color = Color.ConvertStringToColor(_datasource_Root.Color2);
			}
			if (_datasource_Root.Color2 != null)
			{
				_widget_0_0_0.Brush.GlobalColor = Color.ConvertStringToColor(_datasource_Root.Color2);
			}
			if (_datasource_Root.Color2 != null)
			{
				_widget_0_0_1.Brush.GlobalColor = Color.ConvertStringToColor(_datasource_Root.Color2);
			}
			if (_datasource_Root.Color2 != null)
			{
				_widget_0_1.Brush.FontColor = Color.ConvertStringToColor(_datasource_Root.Color2);
			}
			break;
		case "FlagProgress":
			_widget_0_0.InitialAmountAsFloat = _datasource_Root.FlagProgress;
			break;
		case "IsKeepFlag":
			_widget_0_0_0.IsDisabled = _datasource_Root.IsKeepFlag;
			_widget_0_0_1.IsDisabled = _datasource_Root.IsKeepFlag;
			_widget_0_0_2_0.IsDisabled = _datasource_Root.IsKeepFlag;
			break;
		case "Color":
			if (_datasource_Root.Color != null)
			{
				_widget_0_0_2_0.Brush.GlobalColor = Color.ConvertStringToColor(_datasource_Root.Color);
			}
			break;
		case "Name":
			_widget_0_1.Text = _datasource_Root.Name;
			break;
		case "RemainingRemovalTime":
			_widget_0_3_0.IndexToWatch = _datasource_Root.RemainingRemovalTime;
			_widget_0_3_0_0.IntText = _datasource_Root.RemainingRemovalTime;
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(MissionFlagMarkerTargetVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.PropertyChanged -= PropertyChangedListenerOf_widget;
			_widget.boolPropertyChanged -= boolPropertyChangedListenerOf_widget;
			_widget.floatPropertyChanged -= floatPropertyChangedListenerOf_widget;
			_widget.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget;
			_widget.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget;
			_widget.doublePropertyChanged -= doublePropertyChangedListenerOf_widget;
			_widget.intPropertyChanged -= intPropertyChangedListenerOf_widget;
			_widget.uintPropertyChanged -= uintPropertyChangedListenerOf_widget;
			_widget.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget;
			_widget_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0;
			_widget_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0;
			_widget_0_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_1.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_2_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_1.PropertyChanged -= PropertyChangedListenerOf_widget_0_1;
			_widget_0_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_1;
			_widget_0_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_1;
			_widget_0_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_1;
			_widget_0_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_1;
			_widget_0_3_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_3_0_0;
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.Distance = _datasource_Root.Distance;
			_widget.IsMarkerEnabled = _datasource_Root.IsEnabled;
			_widget.MarkerType = _datasource_Root.MarkerType;
			_widget.Position = _datasource_Root.ScreenPosition;
			_widget.IsSpawnFlag = _datasource_Root.IsSpawnAffectorFlag;
			_widget.PropertyChanged += PropertyChangedListenerOf_widget;
			_widget.boolPropertyChanged += boolPropertyChangedListenerOf_widget;
			_widget.floatPropertyChanged += floatPropertyChangedListenerOf_widget;
			_widget.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget;
			_widget.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget;
			_widget.doublePropertyChanged += doublePropertyChangedListenerOf_widget;
			_widget.intPropertyChanged += intPropertyChangedListenerOf_widget;
			_widget.uintPropertyChanged += uintPropertyChangedListenerOf_widget;
			_widget.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget;
			if (_datasource_Root.Color2 != null)
			{
				_widget_0_0.Color = Color.ConvertStringToColor(_datasource_Root.Color2);
			}
			_widget_0_0.InitialAmountAsFloat = _datasource_Root.FlagProgress;
			_widget_0_0.PropertyChanged += PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0;
			_widget_0_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0;
			if (_datasource_Root.Color2 != null)
			{
				_widget_0_0_0.Brush.GlobalColor = Color.ConvertStringToColor(_datasource_Root.Color2);
			}
			_widget_0_0_0.IsDisabled = _datasource_Root.IsKeepFlag;
			_widget_0_0_0.PropertyChanged += PropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0_0;
			_widget_0_0_1.IsDisabled = _datasource_Root.IsKeepFlag;
			if (_datasource_Root.Color2 != null)
			{
				_widget_0_0_1.Brush.GlobalColor = Color.ConvertStringToColor(_datasource_Root.Color2);
			}
			_widget_0_0_1.PropertyChanged += PropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0_1;
			_widget_0_0_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0_1;
			if (_datasource_Root.Color != null)
			{
				_widget_0_0_2_0.Brush.GlobalColor = Color.ConvertStringToColor(_datasource_Root.Color);
			}
			_widget_0_0_2_0.IsDisabled = _datasource_Root.IsKeepFlag;
			_widget_0_0_2_0.PropertyChanged += PropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0_2_0;
			_widget_0_0_2_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0_2_0;
			if (_datasource_Root.Color2 != null)
			{
				_widget_0_1.Brush.FontColor = Color.ConvertStringToColor(_datasource_Root.Color2);
			}
			_widget_0_1.Text = _datasource_Root.Name;
			_widget_0_1.PropertyChanged += PropertyChangedListenerOf_widget_0_1;
			_widget_0_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_1;
			_widget_0_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_1;
			_widget_0_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_1;
			_widget_0_1.intPropertyChanged += intPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_1;
			_widget_0_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_1;
			_widget_0_3_0.IndexToWatch = _datasource_Root.RemainingRemovalTime;
			_widget_0_3_0.PropertyChanged += PropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_3_0;
			_widget_0_3_0_0.IntText = _datasource_Root.RemainingRemovalTime;
			_widget_0_3_0_0.PropertyChanged += PropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_3_0_0;
			_widget_0_3_0_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_3_0_0;
		}
	}
}
