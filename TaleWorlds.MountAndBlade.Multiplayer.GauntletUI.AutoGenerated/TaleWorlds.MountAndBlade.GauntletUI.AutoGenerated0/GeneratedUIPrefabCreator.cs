using System.Collections.Generic;
using TaleWorlds.Core.ViewModelCollection.Information;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.GauntletUI.PrefabSystem;
using TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection;
using TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.EndOfRound;
using TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.FlagMarker;
using TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.HUDExtensions;
using TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.Intermission;
using TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.KillFeed;
using TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.Scoreboard;
using TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.TeamSelection;
using TaleWorlds.MountAndBlade.ViewModelCollection.Multiplayer;

namespace TaleWorlds.MountAndBlade.GauntletUI.AutoGenerated0;

public class GeneratedUIPrefabCreator : IGeneratedUIPrefabCreator
{
	public GeneratedPrefabInstantiationResult CreateMultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM(UIContext context, Dictionary<string, object> data)
	{
		MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM = new MultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM(context);
		multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM.CreateWidgets();
		multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM.SetIds();
		multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MultiplayerDuel", multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM);
		object obj = data["DataSource"];
		multiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM.SetDataSource((MultiplayerDuelVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMultiplayerScoreboard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Scoreboard_MissionScoreboardVM(UIContext context, Dictionary<string, object> data)
	{
		MultiplayerScoreboard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Scoreboard_MissionScoreboardVM multiplayerScoreboard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Scoreboard_MissionScoreboardVM = new MultiplayerScoreboard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Scoreboard_MissionScoreboardVM(context);
		multiplayerScoreboard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Scoreboard_MissionScoreboardVM.CreateWidgets();
		multiplayerScoreboard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Scoreboard_MissionScoreboardVM.SetIds();
		multiplayerScoreboard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Scoreboard_MissionScoreboardVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(multiplayerScoreboard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Scoreboard_MissionScoreboardVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MultiplayerScoreboard", multiplayerScoreboard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Scoreboard_MissionScoreboardVM);
		object obj = data["DataSource"];
		multiplayerScoreboard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Scoreboard_MissionScoreboardVM.SetDataSource((MissionScoreboardVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMPMissionMarkers__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_FlagMarker_MultiplayerMissionMarkerVM(UIContext context, Dictionary<string, object> data)
	{
		MPMissionMarkers__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_FlagMarker_MultiplayerMissionMarkerVM mPMissionMarkers__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_FlagMarker_MultiplayerMissionMarkerVM = new MPMissionMarkers__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_FlagMarker_MultiplayerMissionMarkerVM(context);
		mPMissionMarkers__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_FlagMarker_MultiplayerMissionMarkerVM.CreateWidgets();
		mPMissionMarkers__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_FlagMarker_MultiplayerMissionMarkerVM.SetIds();
		mPMissionMarkers__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_FlagMarker_MultiplayerMissionMarkerVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(mPMissionMarkers__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_FlagMarker_MultiplayerMissionMarkerVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MPMissionMarkers", mPMissionMarkers__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_FlagMarker_MultiplayerMissionMarkerVM);
		object obj = data["DataSource"];
		mPMissionMarkers__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_FlagMarker_MultiplayerMissionMarkerVM.SetDataSource((MultiplayerMissionMarkerVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMultiplayerGameNotificationUI__TaleWorlds_Core_ViewModelCollection_Information_GameNotificationVM(UIContext context, Dictionary<string, object> data)
	{
		MultiplayerGameNotificationUI__TaleWorlds_Core_ViewModelCollection_Information_GameNotificationVM multiplayerGameNotificationUI__TaleWorlds_Core_ViewModelCollection_Information_GameNotificationVM = new MultiplayerGameNotificationUI__TaleWorlds_Core_ViewModelCollection_Information_GameNotificationVM(context);
		multiplayerGameNotificationUI__TaleWorlds_Core_ViewModelCollection_Information_GameNotificationVM.CreateWidgets();
		multiplayerGameNotificationUI__TaleWorlds_Core_ViewModelCollection_Information_GameNotificationVM.SetIds();
		multiplayerGameNotificationUI__TaleWorlds_Core_ViewModelCollection_Information_GameNotificationVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(multiplayerGameNotificationUI__TaleWorlds_Core_ViewModelCollection_Information_GameNotificationVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MultiplayerGameNotificationUI", multiplayerGameNotificationUI__TaleWorlds_Core_ViewModelCollection_Information_GameNotificationVM);
		object obj = data["DataSource"];
		multiplayerGameNotificationUI__TaleWorlds_Core_ViewModelCollection_Information_GameNotificationVM.SetDataSource((GameNotificationVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM(UIContext context, Dictionary<string, object> data)
	{
		MPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM mPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM = new MPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM(context);
		mPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM.CreateWidgets();
		mPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM.SetIds();
		mPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(mPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MPChatLog", mPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM);
		object obj = data["DataSource"];
		mPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM.SetDataSource((MPChatVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMultiplayerKillFeed__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_KillFeed_MPKillFeedVM(UIContext context, Dictionary<string, object> data)
	{
		MultiplayerKillFeed__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_KillFeed_MPKillFeedVM multiplayerKillFeed__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_KillFeed_MPKillFeedVM = new MultiplayerKillFeed__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_KillFeed_MPKillFeedVM(context);
		multiplayerKillFeed__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_KillFeed_MPKillFeedVM.CreateWidgets();
		multiplayerKillFeed__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_KillFeed_MPKillFeedVM.SetIds();
		multiplayerKillFeed__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_KillFeed_MPKillFeedVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(multiplayerKillFeed__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_KillFeed_MPKillFeedVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MultiplayerKillFeed", multiplayerKillFeed__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_KillFeed_MPKillFeedVM);
		object obj = data["DataSource"];
		multiplayerKillFeed__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_KillFeed_MPKillFeedVM.SetDataSource((MPKillFeedVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMultiplayerDeathCard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPDeathCardVM(UIContext context, Dictionary<string, object> data)
	{
		MultiplayerDeathCard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPDeathCardVM multiplayerDeathCard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPDeathCardVM = new MultiplayerDeathCard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPDeathCardVM(context);
		multiplayerDeathCard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPDeathCardVM.CreateWidgets();
		multiplayerDeathCard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPDeathCardVM.SetIds();
		multiplayerDeathCard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPDeathCardVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(multiplayerDeathCard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPDeathCardVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MultiplayerDeathCard", multiplayerDeathCard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPDeathCardVM);
		object obj = data["DataSource"];
		multiplayerDeathCard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPDeathCardVM.SetDataSource((MPDeathCardVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMultiplayerPollingProgress__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerPollProgressVM(UIContext context, Dictionary<string, object> data)
	{
		MultiplayerPollingProgress__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerPollProgressVM multiplayerPollingProgress__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerPollProgressVM = new MultiplayerPollingProgress__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerPollProgressVM(context);
		multiplayerPollingProgress__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerPollProgressVM.CreateWidgets();
		multiplayerPollingProgress__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerPollProgressVM.SetIds();
		multiplayerPollingProgress__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerPollProgressVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(multiplayerPollingProgress__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerPollProgressVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MultiplayerPollingProgress", multiplayerPollingProgress__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerPollProgressVM);
		object obj = data["DataSource"];
		multiplayerPollingProgress__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerPollProgressVM.SetDataSource((MultiplayerPollProgressVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMultiplayerEndOfBattle__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerEndOfBattleVM(UIContext context, Dictionary<string, object> data)
	{
		MultiplayerEndOfBattle__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerEndOfBattleVM multiplayerEndOfBattle__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerEndOfBattleVM = new MultiplayerEndOfBattle__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerEndOfBattleVM(context);
		multiplayerEndOfBattle__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerEndOfBattleVM.CreateWidgets();
		multiplayerEndOfBattle__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerEndOfBattleVM.SetIds();
		multiplayerEndOfBattle__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerEndOfBattleVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(multiplayerEndOfBattle__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerEndOfBattleVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MultiplayerEndOfBattle", multiplayerEndOfBattle__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerEndOfBattleVM);
		object obj = data["DataSource"];
		multiplayerEndOfBattle__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerEndOfBattleVM.SetDataSource((MultiplayerEndOfBattleVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMultiplayerEndOfRound__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_EndOfRound_MultiplayerEndOfRoundVM(UIContext context, Dictionary<string, object> data)
	{
		MultiplayerEndOfRound__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_EndOfRound_MultiplayerEndOfRoundVM multiplayerEndOfRound__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_EndOfRound_MultiplayerEndOfRoundVM = new MultiplayerEndOfRound__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_EndOfRound_MultiplayerEndOfRoundVM(context);
		multiplayerEndOfRound__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_EndOfRound_MultiplayerEndOfRoundVM.CreateWidgets();
		multiplayerEndOfRound__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_EndOfRound_MultiplayerEndOfRoundVM.SetIds();
		multiplayerEndOfRound__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_EndOfRound_MultiplayerEndOfRoundVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(multiplayerEndOfRound__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_EndOfRound_MultiplayerEndOfRoundVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MultiplayerEndOfRound", multiplayerEndOfRound__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_EndOfRound_MultiplayerEndOfRoundVM);
		object obj = data["DataSource"];
		multiplayerEndOfRound__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_EndOfRound_MultiplayerEndOfRoundVM.SetDataSource((MultiplayerEndOfRoundVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMultiplayerServerStatus__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerMissionServerStatusVM(UIContext context, Dictionary<string, object> data)
	{
		MultiplayerServerStatus__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerMissionServerStatusVM multiplayerServerStatus__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerMissionServerStatusVM = new MultiplayerServerStatus__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerMissionServerStatusVM(context);
		multiplayerServerStatus__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerMissionServerStatusVM.CreateWidgets();
		multiplayerServerStatus__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerMissionServerStatusVM.SetIds();
		multiplayerServerStatus__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerMissionServerStatusVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(multiplayerServerStatus__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerMissionServerStatusVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MultiplayerServerStatus", multiplayerServerStatus__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerMissionServerStatusVM);
		object obj = data["DataSource"];
		multiplayerServerStatus__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerMissionServerStatusVM.SetDataSource((MultiplayerMissionServerStatusVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMultiplayerEscapeMenu__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPEscapeMenuVM(UIContext context, Dictionary<string, object> data)
	{
		MultiplayerEscapeMenu__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPEscapeMenuVM multiplayerEscapeMenu__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPEscapeMenuVM = new MultiplayerEscapeMenu__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPEscapeMenuVM(context);
		multiplayerEscapeMenu__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPEscapeMenuVM.CreateWidgets();
		multiplayerEscapeMenu__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPEscapeMenuVM.SetIds();
		multiplayerEscapeMenu__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPEscapeMenuVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(multiplayerEscapeMenu__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPEscapeMenuVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MultiplayerEscapeMenu", multiplayerEscapeMenu__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPEscapeMenuVM);
		object obj = data["DataSource"];
		multiplayerEscapeMenu__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPEscapeMenuVM.SetDataSource((MPEscapeMenuVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMultiplayerReportPlayer__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerReportPlayerVM(UIContext context, Dictionary<string, object> data)
	{
		MultiplayerReportPlayer__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerReportPlayerVM multiplayerReportPlayer__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerReportPlayerVM = new MultiplayerReportPlayer__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerReportPlayerVM(context);
		multiplayerReportPlayer__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerReportPlayerVM.CreateWidgets();
		multiplayerReportPlayer__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerReportPlayerVM.SetIds();
		multiplayerReportPlayer__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerReportPlayerVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(multiplayerReportPlayer__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerReportPlayerVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MultiplayerReportPlayer", multiplayerReportPlayer__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerReportPlayerVM);
		object obj = data["DataSource"];
		multiplayerReportPlayer__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerReportPlayerVM.SetDataSource((MultiplayerReportPlayerVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMultiplayerAdminInformation__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerAdminInformationVM(UIContext context, Dictionary<string, object> data)
	{
		MultiplayerAdminInformation__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerAdminInformationVM multiplayerAdminInformation__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerAdminInformationVM = new MultiplayerAdminInformation__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerAdminInformationVM(context);
		multiplayerAdminInformation__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerAdminInformationVM.CreateWidgets();
		multiplayerAdminInformation__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerAdminInformationVM.SetIds();
		multiplayerAdminInformation__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerAdminInformationVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(multiplayerAdminInformation__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerAdminInformationVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MultiplayerAdminInformation", multiplayerAdminInformation__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerAdminInformationVM);
		object obj = data["DataSource"];
		multiplayerAdminInformation__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerAdminInformationVM.SetDataSource((MultiplayerAdminInformationVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMultiplayerTeamSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerTeamSelectVM(UIContext context, Dictionary<string, object> data)
	{
		MultiplayerTeamSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerTeamSelectVM multiplayerTeamSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerTeamSelectVM = new MultiplayerTeamSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerTeamSelectVM(context);
		multiplayerTeamSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerTeamSelectVM.CreateWidgets();
		multiplayerTeamSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerTeamSelectVM.SetIds();
		multiplayerTeamSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerTeamSelectVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(multiplayerTeamSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerTeamSelectVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MultiplayerTeamSelection", multiplayerTeamSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerTeamSelectVM);
		object obj = data["DataSource"];
		multiplayerTeamSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerTeamSelectVM.SetDataSource((MultiplayerTeamSelectVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMultiplayerCultureSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerCultureSelectVM(UIContext context, Dictionary<string, object> data)
	{
		MultiplayerCultureSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerCultureSelectVM multiplayerCultureSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerCultureSelectVM = new MultiplayerCultureSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerCultureSelectVM(context);
		multiplayerCultureSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerCultureSelectVM.CreateWidgets();
		multiplayerCultureSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerCultureSelectVM.SetIds();
		multiplayerCultureSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerCultureSelectVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(multiplayerCultureSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerCultureSelectVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MultiplayerCultureSelection", multiplayerCultureSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerCultureSelectVM);
		object obj = data["DataSource"];
		multiplayerCultureSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerCultureSelectVM.SetDataSource((MultiplayerCultureSelectVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMultiplayerIntermission__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Intermission_MPIntermissionVM(UIContext context, Dictionary<string, object> data)
	{
		MultiplayerIntermission__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Intermission_MPIntermissionVM multiplayerIntermission__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Intermission_MPIntermissionVM = new MultiplayerIntermission__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Intermission_MPIntermissionVM(context);
		multiplayerIntermission__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Intermission_MPIntermissionVM.CreateWidgets();
		multiplayerIntermission__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Intermission_MPIntermissionVM.SetIds();
		multiplayerIntermission__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Intermission_MPIntermissionVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(multiplayerIntermission__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Intermission_MPIntermissionVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MultiplayerIntermission", multiplayerIntermission__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Intermission_MPIntermissionVM);
		object obj = data["DataSource"];
		multiplayerIntermission__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Intermission_MPIntermissionVM.SetDataSource((MPIntermissionVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateHUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM(UIContext context, Dictionary<string, object> data)
	{
		HUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM = new HUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM(context);
		hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM.CreateWidgets();
		hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM.SetIds();
		hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("HUDExtension", hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM);
		object obj = data["DataSource"];
		hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM.SetDataSource((MissionMultiplayerHUDExtensionVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public void CollectGeneratedPrefabDefinitions(GeneratedPrefabContext generatedPrefabContext)
	{
		generatedPrefabContext.AddGeneratedPrefab("MultiplayerDuel", "TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.MultiplayerDuelVM", CreateMultiplayerDuel__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerDuelVM);
		generatedPrefabContext.AddGeneratedPrefab("MultiplayerScoreboard", "TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.Scoreboard.MissionScoreboardVM", CreateMultiplayerScoreboard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Scoreboard_MissionScoreboardVM);
		generatedPrefabContext.AddGeneratedPrefab("MPMissionMarkers", "TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.FlagMarker.MultiplayerMissionMarkerVM", CreateMPMissionMarkers__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_FlagMarker_MultiplayerMissionMarkerVM);
		generatedPrefabContext.AddGeneratedPrefab("MultiplayerGameNotificationUI", "TaleWorlds.Core.ViewModelCollection.Information.GameNotificationVM", CreateMultiplayerGameNotificationUI__TaleWorlds_Core_ViewModelCollection_Information_GameNotificationVM);
		generatedPrefabContext.AddGeneratedPrefab("MPChatLog", "TaleWorlds.MountAndBlade.ViewModelCollection.Multiplayer.MPChatVM", CreateMPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM);
		generatedPrefabContext.AddGeneratedPrefab("MultiplayerKillFeed", "TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.KillFeed.MPKillFeedVM", CreateMultiplayerKillFeed__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_KillFeed_MPKillFeedVM);
		generatedPrefabContext.AddGeneratedPrefab("MultiplayerDeathCard", "TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.MPDeathCardVM", CreateMultiplayerDeathCard__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPDeathCardVM);
		generatedPrefabContext.AddGeneratedPrefab("MultiplayerPollingProgress", "TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.MultiplayerPollProgressVM", CreateMultiplayerPollingProgress__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerPollProgressVM);
		generatedPrefabContext.AddGeneratedPrefab("MultiplayerEndOfBattle", "TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.MultiplayerEndOfBattleVM", CreateMultiplayerEndOfBattle__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerEndOfBattleVM);
		generatedPrefabContext.AddGeneratedPrefab("MultiplayerEndOfRound", "TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.EndOfRound.MultiplayerEndOfRoundVM", CreateMultiplayerEndOfRound__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_EndOfRound_MultiplayerEndOfRoundVM);
		generatedPrefabContext.AddGeneratedPrefab("MultiplayerServerStatus", "TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.MultiplayerMissionServerStatusVM", CreateMultiplayerServerStatus__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerMissionServerStatusVM);
		generatedPrefabContext.AddGeneratedPrefab("MultiplayerEscapeMenu", "TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.MPEscapeMenuVM", CreateMultiplayerEscapeMenu__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MPEscapeMenuVM);
		generatedPrefabContext.AddGeneratedPrefab("MultiplayerReportPlayer", "TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.MultiplayerReportPlayerVM", CreateMultiplayerReportPlayer__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerReportPlayerVM);
		generatedPrefabContext.AddGeneratedPrefab("MultiplayerAdminInformation", "TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.MultiplayerAdminInformationVM", CreateMultiplayerAdminInformation__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_MultiplayerAdminInformationVM);
		generatedPrefabContext.AddGeneratedPrefab("MultiplayerTeamSelection", "TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.TeamSelection.MultiplayerTeamSelectVM", CreateMultiplayerTeamSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerTeamSelectVM);
		generatedPrefabContext.AddGeneratedPrefab("MultiplayerCultureSelection", "TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.TeamSelection.MultiplayerCultureSelectVM", CreateMultiplayerCultureSelection__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_TeamSelection_MultiplayerCultureSelectVM);
		generatedPrefabContext.AddGeneratedPrefab("MultiplayerIntermission", "TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.Intermission.MPIntermissionVM", CreateMultiplayerIntermission__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Intermission_MPIntermissionVM);
		generatedPrefabContext.AddGeneratedPrefab("HUDExtension", "TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.HUDExtensions.MissionMultiplayerHUDExtensionVM", CreateHUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM);
	}
}
