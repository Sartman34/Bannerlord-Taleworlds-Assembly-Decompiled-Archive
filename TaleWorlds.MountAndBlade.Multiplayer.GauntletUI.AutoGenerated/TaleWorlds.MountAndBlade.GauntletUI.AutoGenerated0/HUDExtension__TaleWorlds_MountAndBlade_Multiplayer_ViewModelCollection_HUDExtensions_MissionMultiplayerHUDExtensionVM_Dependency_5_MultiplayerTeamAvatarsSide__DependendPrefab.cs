using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection;

namespace TaleWorlds.MountAndBlade.GauntletUI.AutoGenerated0;

public class HUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_5_MultiplayerTeamAvatarsSide__DependendPrefab : ListPanel
{
	private ListPanel _widget;

	private MBBindingList<MPPlayerVM> _datasource_Root;

	public HUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_5_MultiplayerTeamAvatarsSide__DependendPrefab(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
	}

	public void SetIds()
	{
	}

	public void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.CoverChildren;
		base.HeightSizePolicy = SizePolicy.CoverChildren;
		base.VerticalAlignment = VerticalAlignment.Top;
		base.MarginTop = 15f;
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.ListChanged -= OnList_datasource_RootChanged;
			for (int num = _widget.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget.GetChild(num);
				((HUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate)child).OnBeforeRemovedChild(child);
				((HUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate)_widget.GetChild(num)).DestroyDataSource();
			}
			_datasource_Root = null;
		}
	}

	public void SetDataSource(MBBindingList<MPPlayerVM> dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	public void OnList_datasource_RootChanged(object sender, ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case ListChangedType.Reset:
		{
			for (int num = _widget.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget.GetChild(num);
				((HUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget.GetChild(num);
				((HUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate)child4).SetDataSource(null);
				_widget.RemoveChild(child4);
			}
			break;
		}
		case ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root.Count; i++)
			{
				MPPlayerVM bindingObject = _datasource_Root[i];
				_widget.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case ListChangedType.ItemAdded:
		{
			HUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate = new HUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate);
			MPPlayerVM dataSource = (MPPlayerVM)(generatedWidgetData.Data = _datasource_Root[e.NewIndex]);
			hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate.AddComponent(generatedWidgetData);
			_widget.AddChildAtIndex(hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate, e.NewIndex);
			hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate.CreateWidgets();
			hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate.SetIds();
			hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate.SetAttributes();
			hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget.GetChild(e.NewIndex);
			((HUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case ListChangedType.ItemDeleted:
		{
			Widget child = _widget.GetChild(e.NewIndex);
			((HUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate)child).SetDataSource(null);
			_widget.RemoveChild(child);
			break;
		}
		case ListChangedType.ItemChanged:
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(MBBindingList<MPPlayerVM> newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.ListChanged -= OnList_datasource_RootChanged;
			for (int num = _widget.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget.GetChild(num);
				((HUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget.GetChild(num);
				((HUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate)child2).SetDataSource(null);
				_widget.RemoveChild(child2);
			}
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root != null)
		{
			_datasource_Root.ListChanged += OnList_datasource_RootChanged;
			for (int i = 0; i < _datasource_Root.Count; i++)
			{
				HUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate = new HUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate);
				MPPlayerVM dataSource = (MPPlayerVM)(generatedWidgetData.Data = _datasource_Root[i]);
				hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate.AddComponent(generatedWidgetData);
				_widget.AddChildAtIndex(hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate, i);
				hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate.CreateWidgets();
				hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate.SetIds();
				hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate.SetAttributes();
				hUDExtension__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_HUDExtensions_MissionMultiplayerHUDExtensionVM_Dependency_9_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}
}
