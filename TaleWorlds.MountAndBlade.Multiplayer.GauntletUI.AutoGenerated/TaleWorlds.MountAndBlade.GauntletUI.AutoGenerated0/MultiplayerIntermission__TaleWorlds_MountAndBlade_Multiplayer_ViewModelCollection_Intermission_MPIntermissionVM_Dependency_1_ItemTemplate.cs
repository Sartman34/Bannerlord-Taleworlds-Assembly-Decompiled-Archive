using System.ComponentModel;
using System.Numerics;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Layout;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Multiplayer;
using TaleWorlds.MountAndBlade.Multiplayer.ViewModelCollection.Intermission;

namespace TaleWorlds.MountAndBlade.GauntletUI.AutoGenerated0;

public class MultiplayerIntermission__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Intermission_MPIntermissionVM_Dependency_1_ItemTemplate : ListPanel
{
	private ListPanel _widget;

	private NavigationTargetSwitcher _widget_0;

	private TextWidget _widget_1;

	private ButtonWidget _widget_2;

	private MultiplayerIntermissionNextMapImageWidget _widget_2_0;

	private ListPanel _widget_3;

	private Widget _widget_3_0;

	private TextWidget _widget_3_1;

	private MPIntermissionMapItemVM _datasource_Root;

	public MultiplayerIntermission__TaleWorlds_MountAndBlade_Multiplayer_ViewModelCollection_Intermission_MPIntermissionVM_Dependency_1_ItemTemplate(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new NavigationTargetSwitcher(base.Context);
		_widget.AddChild(_widget_0);
		_widget_1 = new TextWidget(base.Context);
		_widget.AddChild(_widget_1);
		_widget_2 = new ButtonWidget(base.Context);
		_widget.AddChild(_widget_2);
		_widget_2_0 = new MultiplayerIntermissionNextMapImageWidget(base.Context);
		_widget_2.AddChild(_widget_2_0);
		_widget_3 = new ListPanel(base.Context);
		_widget.AddChild(_widget_3);
		_widget_3_0 = new Widget(base.Context);
		_widget_3.AddChild(_widget_3_0);
		_widget_3_1 = new TextWidget(base.Context);
		_widget_3.AddChild(_widget_3_1);
	}

	public void SetIds()
	{
		_widget_2.Id = "SelectButton";
	}

	public void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.Fixed;
		base.HeightSizePolicy = SizePolicy.CoverChildren;
		base.SuggestedWidth = 320f;
		base.MarginLeft = 15f;
		base.MarginRight = 15f;
		base.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		_widget_0.FromTarget = _widget;
		_widget_0.ToTarget = _widget_2;
		_widget_1.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_1.MarginTop = 10f;
		_widget_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1.Brush = base.Context.GetBrush("MPIntermission.Voting.Title.Text");
		_widget_1.Brush.FontColor = new Color(0.9568628f, 0.882353f, 0.7686275f);
		_widget_1.Brush.FontSize = 28;
		_widget_2.DoNotPassEventsToChildren = true;
		_widget_2.ButtonType = ButtonType.Radio;
		_widget_2.WidthSizePolicy = SizePolicy.Fixed;
		_widget_2.HeightSizePolicy = SizePolicy.Fixed;
		_widget_2.SuggestedWidth = 320f;
		_widget_2.SuggestedHeight = 180f;
		_widget_2.VerticalAlignment = VerticalAlignment.Center;
		_widget_2.MarginTop = 5f;
		_widget_2.Brush = base.Context.GetBrush("MPIntermission.Map.Button");
		_widget_2.UpdateChildrenStates = true;
		_widget_2_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_2_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_2_0.MarginLeft = 3f;
		_widget_2_0.MarginRight = 3f;
		_widget_2_0.MarginTop = 3f;
		_widget_2_0.MarginBottom = 3f;
		_widget_3.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_3.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_3.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_3.MarginTop = 10f;
		_widget_3.StackLayout.LayoutMethod = LayoutMethod.HorizontalLeftToRight;
		_widget_3_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_3_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_3_0.SuggestedWidth = 30f;
		_widget_3_0.SuggestedHeight = 34f;
		_widget_3_0.Sprite = base.Context.SpriteData.GetSprite("MPIntermission\\thumb");
		_widget_3_0.Color = new Color(41f / 51f, 0.482353f, 0.227451f);
		_widget_3_1.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_3_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_3_1.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_3_1.MarginLeft = 10f;
		_widget_3_1.Brush = base.Context.GetBrush("MPIntermission.Voted.Count.Text");
		_widget_3_1.Brush.FontSize = 48;
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget_1.PropertyChanged -= PropertyChangedListenerOf_widget_1;
			_widget_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1;
			_widget_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1;
			_widget_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1;
			_widget_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1;
			_widget_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1;
			_widget_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_1;
			_widget_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1;
			_widget_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1;
			_widget_2.EventFire -= EventListenerOf_widget_2;
			_widget_2.PropertyChanged -= PropertyChangedListenerOf_widget_2;
			_widget_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2;
			_widget_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2;
			_widget_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2;
			_widget_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2;
			_widget_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2;
			_widget_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_2;
			_widget_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2;
			_widget_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2;
			_widget_2_0.PropertyChanged -= PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2_0;
			_widget_2_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2_0;
			_widget_3_1.PropertyChanged -= PropertyChangedListenerOf_widget_3_1;
			_widget_3_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_3_1;
			_widget_3_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_3_1;
			_widget_3_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_3_1;
			_widget_3_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_3_1;
			_widget_3_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_3_1;
			_widget_3_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_3_1;
			_widget_3_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_3_1;
			_widget_3_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_3_1;
			_datasource_Root = null;
		}
	}

	public void SetDataSource(MPIntermissionMapItemVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void EventListenerOf_widget_2(Widget widget, string commandName, object[] args)
	{
		if (commandName == "Click")
		{
			_datasource_Root.ExecuteVote();
		}
	}

	private void PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_1(string propertyName)
	{
		if (propertyName == "Text")
		{
			_datasource_Root.MapName = _widget_1.Text;
		}
	}

	private void PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_2(string propertyName)
	{
		if (propertyName == "IsSelected")
		{
			_datasource_Root.IsSelected = _widget_2.IsSelected;
		}
	}

	private void PropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_2_0(string propertyName)
	{
		if (propertyName == "MapID")
		{
			_datasource_Root.MapID = _widget_2_0.MapID;
		}
	}

	private void PropertyChangedListenerOf_widget_3_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_3_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_3_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_3_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_3_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_3_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_3_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_3_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_3_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_3_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_3_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_3_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_3_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_3_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_3_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_3_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_3_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_3_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_3_1(string propertyName)
	{
		if (propertyName == "IntText")
		{
			_datasource_Root.Votes = _widget_3_1.IntText;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		switch (propertyName)
		{
		case "MapName":
			_widget_1.Text = _datasource_Root.MapName;
			break;
		case "IsSelected":
			_widget_2.IsSelected = _datasource_Root.IsSelected;
			break;
		case "MapID":
			_widget_2_0.MapID = _datasource_Root.MapID;
			break;
		case "Votes":
			_widget_3_1.IntText = _datasource_Root.Votes;
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(MPIntermissionMapItemVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget_1.PropertyChanged -= PropertyChangedListenerOf_widget_1;
			_widget_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1;
			_widget_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1;
			_widget_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1;
			_widget_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1;
			_widget_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1;
			_widget_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_1;
			_widget_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1;
			_widget_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1;
			_widget_2.EventFire -= EventListenerOf_widget_2;
			_widget_2.PropertyChanged -= PropertyChangedListenerOf_widget_2;
			_widget_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2;
			_widget_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2;
			_widget_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2;
			_widget_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2;
			_widget_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2;
			_widget_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_2;
			_widget_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2;
			_widget_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2;
			_widget_2_0.PropertyChanged -= PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2_0;
			_widget_2_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2_0;
			_widget_3_1.PropertyChanged -= PropertyChangedListenerOf_widget_3_1;
			_widget_3_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_3_1;
			_widget_3_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_3_1;
			_widget_3_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_3_1;
			_widget_3_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_3_1;
			_widget_3_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_3_1;
			_widget_3_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_3_1;
			_widget_3_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_3_1;
			_widget_3_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_3_1;
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget_1.Text = _datasource_Root.MapName;
			_widget_1.PropertyChanged += PropertyChangedListenerOf_widget_1;
			_widget_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1;
			_widget_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1;
			_widget_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1;
			_widget_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1;
			_widget_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1;
			_widget_1.intPropertyChanged += intPropertyChangedListenerOf_widget_1;
			_widget_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1;
			_widget_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1;
			_widget_2.IsSelected = _datasource_Root.IsSelected;
			_widget_2.EventFire += EventListenerOf_widget_2;
			_widget_2.PropertyChanged += PropertyChangedListenerOf_widget_2;
			_widget_2.boolPropertyChanged += boolPropertyChangedListenerOf_widget_2;
			_widget_2.floatPropertyChanged += floatPropertyChangedListenerOf_widget_2;
			_widget_2.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_2;
			_widget_2.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_2;
			_widget_2.doublePropertyChanged += doublePropertyChangedListenerOf_widget_2;
			_widget_2.intPropertyChanged += intPropertyChangedListenerOf_widget_2;
			_widget_2.uintPropertyChanged += uintPropertyChangedListenerOf_widget_2;
			_widget_2.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_2;
			_widget_2_0.MapID = _datasource_Root.MapID;
			_widget_2_0.PropertyChanged += PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_2_0;
			_widget_2_0.intPropertyChanged += intPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_2_0;
			_widget_3_1.IntText = _datasource_Root.Votes;
			_widget_3_1.PropertyChanged += PropertyChangedListenerOf_widget_3_1;
			_widget_3_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_3_1;
			_widget_3_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_3_1;
			_widget_3_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_3_1;
			_widget_3_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_3_1;
			_widget_3_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_3_1;
			_widget_3_1.intPropertyChanged += intPropertyChangedListenerOf_widget_3_1;
			_widget_3_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_3_1;
			_widget_3_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_3_1;
		}
	}
}
