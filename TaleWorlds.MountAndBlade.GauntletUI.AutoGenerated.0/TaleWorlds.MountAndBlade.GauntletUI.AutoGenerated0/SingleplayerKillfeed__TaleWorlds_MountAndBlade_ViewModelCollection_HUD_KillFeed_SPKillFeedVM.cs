using System.ComponentModel;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Mission.KillFeed.General;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Mission.KillFeed.Personal;
using TaleWorlds.MountAndBlade.ViewModelCollection.HUD.KillFeed;
using TaleWorlds.MountAndBlade.ViewModelCollection.HUD.KillFeed.General;
using TaleWorlds.MountAndBlade.ViewModelCollection.HUD.KillFeed.Personal;

namespace TaleWorlds.MountAndBlade.GauntletUI.AutoGenerated0;

public class SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM : Widget, IGeneratedGauntletMovieRoot
{
	private Widget _widget;

	private SingleplayerGeneralKillFeedWidget _widget_0;

	private SingleplayerPersonalKillFeedWidget _widget_1;

	private SPKillFeedVM _datasource_Root;

	private SPGeneralKillNotificationVM _datasource_Root_GeneralCasualty;

	private MBBindingList<SPGeneralKillNotificationItemVM> _datasource_Root_GeneralCasualty_NotificationList;

	private SPPersonalKillNotificationVM _datasource_Root_PersonalFeed;

	private MBBindingList<SPPersonalKillNotificationItemVM> _datasource_Root_PersonalFeed_NotificationList;

	public SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new SingleplayerGeneralKillFeedWidget(base.Context);
		_widget.AddChild(_widget_0);
		_widget_1 = new SingleplayerPersonalKillFeedWidget(base.Context);
		_widget.AddChild(_widget_1);
	}

	public void SetIds()
	{
	}

	public void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.StretchToParent;
		base.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0.DoNotAcceptEvents = true;
		_widget_0.DoNotPassEventsToChildren = true;
		_widget_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_0.MarginTop = 20f;
		_widget_0.MarginRight = 20f;
		_widget_1.DoNotAcceptEvents = true;
		_widget_1.DoNotPassEventsToChildren = true;
		_widget_1.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_1.MarginBottom = 150f;
	}

	public void RefreshBindingWithChildren()
	{
		SPKillFeedVM datasource_Root = _datasource_Root;
		SetDataSource(null);
		SetDataSource(datasource_Root);
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		if (_datasource_Root_GeneralCasualty != null)
		{
			_datasource_Root_GeneralCasualty.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_GeneralCasualty;
			if (_datasource_Root_GeneralCasualty_NotificationList != null)
			{
				_datasource_Root_GeneralCasualty_NotificationList.ListChanged -= OnList_datasource_Root_GeneralCasualty_NotificationListChanged;
				for (int num = _widget_0.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_0.GetChild(num);
					((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
					((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate)_widget_0.GetChild(num)).DestroyDataSource();
				}
				_datasource_Root_GeneralCasualty_NotificationList = null;
			}
			_datasource_Root_GeneralCasualty = null;
		}
		if (_datasource_Root_PersonalFeed != null)
		{
			_datasource_Root_PersonalFeed.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_PersonalFeed;
			_datasource_Root_PersonalFeed.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_PersonalFeed;
			_datasource_Root_PersonalFeed.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_PersonalFeed;
			_datasource_Root_PersonalFeed.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_PersonalFeed;
			_datasource_Root_PersonalFeed.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_PersonalFeed;
			_datasource_Root_PersonalFeed.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_PersonalFeed;
			_datasource_Root_PersonalFeed.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_PersonalFeed;
			_datasource_Root_PersonalFeed.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_PersonalFeed;
			_datasource_Root_PersonalFeed.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_PersonalFeed;
			if (_datasource_Root_PersonalFeed_NotificationList != null)
			{
				_datasource_Root_PersonalFeed_NotificationList.ListChanged -= OnList_datasource_Root_PersonalFeed_NotificationListChanged;
				for (int num2 = _widget_1.ChildCount - 1; num2 >= 0; num2--)
				{
					Widget child2 = _widget_1.GetChild(num2);
					((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate)child2).OnBeforeRemovedChild(child2);
					((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate)_widget_1.GetChild(num2)).DestroyDataSource();
				}
				_datasource_Root_PersonalFeed_NotificationList = null;
			}
			_datasource_Root_PersonalFeed = null;
		}
		_datasource_Root = null;
	}

	public void SetDataSource(SPKillFeedVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		if (propertyName == "GeneralCasualty")
		{
			RefreshDataSource_datasource_Root_GeneralCasualty(_datasource_Root.GeneralCasualty);
		}
		else if (propertyName == "PersonalFeed")
		{
			RefreshDataSource_datasource_Root_PersonalFeed(_datasource_Root.PersonalFeed);
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root_GeneralCasualty(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_GeneralCasualty(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root_GeneralCasualty(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_GeneralCasualty(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_GeneralCasualty(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_GeneralCasualty(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_GeneralCasualty(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_GeneralCasualty(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_GeneralCasualty(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_GeneralCasualty(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_GeneralCasualty(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_GeneralCasualty(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_GeneralCasualty(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_GeneralCasualty(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_GeneralCasualty(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_GeneralCasualty(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_GeneralCasualty(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_GeneralCasualty(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root_GeneralCasualty(string propertyName)
	{
		if (propertyName == "NotificationList")
		{
			RefreshDataSource_datasource_Root_GeneralCasualty_NotificationList(_datasource_Root_GeneralCasualty.NotificationList);
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root_PersonalFeed(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PersonalFeed(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root_PersonalFeed(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PersonalFeed(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_PersonalFeed(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PersonalFeed(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_PersonalFeed(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PersonalFeed(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_PersonalFeed(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PersonalFeed(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_PersonalFeed(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PersonalFeed(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_PersonalFeed(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PersonalFeed(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_PersonalFeed(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PersonalFeed(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_PersonalFeed(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_PersonalFeed(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root_PersonalFeed(string propertyName)
	{
		if (propertyName == "NotificationList")
		{
			RefreshDataSource_datasource_Root_PersonalFeed_NotificationList(_datasource_Root_PersonalFeed.NotificationList);
		}
	}

	public void OnList_datasource_Root_GeneralCasualty_NotificationListChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_0.GetChild(num);
				((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_0.GetChild(num);
				((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate)child4).SetDataSource(null);
				_widget_0.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_GeneralCasualty_NotificationList.Count; i++)
			{
				SPGeneralKillNotificationItemVM bindingObject = _datasource_Root_GeneralCasualty_NotificationList[i];
				_widget_0.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate = new SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate);
			SPGeneralKillNotificationItemVM dataSource = (SPGeneralKillNotificationItemVM)(generatedWidgetData.Data = _datasource_Root_GeneralCasualty_NotificationList[e.NewIndex]);
			singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_0.AddChildAtIndex(singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate, e.NewIndex);
			singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.CreateWidgets();
			singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.SetIds();
			singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.SetAttributes();
			singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_0.GetChild(e.NewIndex);
			((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_0.GetChild(e.NewIndex);
			((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate)child).SetDataSource(null);
			_widget_0.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	public void OnList_datasource_Root_PersonalFeed_NotificationListChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_1.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_1.GetChild(num);
				((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_1.GetChild(num);
				((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate)child4).SetDataSource(null);
				_widget_1.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_PersonalFeed_NotificationList.Count; i++)
			{
				SPPersonalKillNotificationItemVM bindingObject = _datasource_Root_PersonalFeed_NotificationList[i];
				_widget_1.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate = new SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate);
			SPPersonalKillNotificationItemVM dataSource = (SPPersonalKillNotificationItemVM)(generatedWidgetData.Data = _datasource_Root_PersonalFeed_NotificationList[e.NewIndex]);
			singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_1.AddChildAtIndex(singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate, e.NewIndex);
			singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.CreateWidgets();
			singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.SetIds();
			singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.SetAttributes();
			singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_1.GetChild(e.NewIndex);
			((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_1.GetChild(e.NewIndex);
			((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate)child).SetDataSource(null);
			_widget_1.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(SPKillFeedVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			if (_datasource_Root_GeneralCasualty != null)
			{
				_datasource_Root_GeneralCasualty.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_GeneralCasualty;
				_datasource_Root_GeneralCasualty.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_GeneralCasualty;
				_datasource_Root_GeneralCasualty.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_GeneralCasualty;
				_datasource_Root_GeneralCasualty.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_GeneralCasualty;
				_datasource_Root_GeneralCasualty.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_GeneralCasualty;
				_datasource_Root_GeneralCasualty.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_GeneralCasualty;
				_datasource_Root_GeneralCasualty.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_GeneralCasualty;
				_datasource_Root_GeneralCasualty.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_GeneralCasualty;
				_datasource_Root_GeneralCasualty.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_GeneralCasualty;
				if (_datasource_Root_GeneralCasualty_NotificationList != null)
				{
					_datasource_Root_GeneralCasualty_NotificationList.ListChanged -= OnList_datasource_Root_GeneralCasualty_NotificationListChanged;
					for (int num = _widget_0.ChildCount - 1; num >= 0; num--)
					{
						Widget child = _widget_0.GetChild(num);
						((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
						Widget child2 = _widget_0.GetChild(num);
						((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate)child2).SetDataSource(null);
						_widget_0.RemoveChild(child2);
					}
					_datasource_Root_GeneralCasualty_NotificationList = null;
				}
				_datasource_Root_GeneralCasualty = null;
			}
			if (_datasource_Root_PersonalFeed != null)
			{
				_datasource_Root_PersonalFeed.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_PersonalFeed;
				_datasource_Root_PersonalFeed.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_PersonalFeed;
				_datasource_Root_PersonalFeed.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_PersonalFeed;
				_datasource_Root_PersonalFeed.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_PersonalFeed;
				_datasource_Root_PersonalFeed.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_PersonalFeed;
				_datasource_Root_PersonalFeed.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_PersonalFeed;
				_datasource_Root_PersonalFeed.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_PersonalFeed;
				_datasource_Root_PersonalFeed.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_PersonalFeed;
				_datasource_Root_PersonalFeed.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_PersonalFeed;
				if (_datasource_Root_PersonalFeed_NotificationList != null)
				{
					_datasource_Root_PersonalFeed_NotificationList.ListChanged -= OnList_datasource_Root_PersonalFeed_NotificationListChanged;
					for (int num2 = _widget_1.ChildCount - 1; num2 >= 0; num2--)
					{
						Widget child3 = _widget_1.GetChild(num2);
						((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate)child3).OnBeforeRemovedChild(child3);
						Widget child4 = _widget_1.GetChild(num2);
						((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate)child4).SetDataSource(null);
						_widget_1.RemoveChild(child4);
					}
					_datasource_Root_PersonalFeed_NotificationList = null;
				}
				_datasource_Root_PersonalFeed = null;
			}
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_datasource_Root_GeneralCasualty = _datasource_Root.GeneralCasualty;
		if (_datasource_Root_GeneralCasualty != null)
		{
			_datasource_Root_GeneralCasualty.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty_NotificationList = _datasource_Root_GeneralCasualty.NotificationList;
			if (_datasource_Root_GeneralCasualty_NotificationList != null)
			{
				_datasource_Root_GeneralCasualty_NotificationList.ListChanged += OnList_datasource_Root_GeneralCasualty_NotificationListChanged;
				for (int i = 0; i < _datasource_Root_GeneralCasualty_NotificationList.Count; i++)
				{
					SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate = new SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate(base.Context);
					GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate);
					SPGeneralKillNotificationItemVM dataSource = (SPGeneralKillNotificationItemVM)(generatedWidgetData.Data = _datasource_Root_GeneralCasualty_NotificationList[i]);
					singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
					_widget_0.AddChildAtIndex(singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate, i);
					singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.CreateWidgets();
					singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.SetIds();
					singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.SetAttributes();
					singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.SetDataSource(dataSource);
				}
			}
		}
		_datasource_Root_PersonalFeed = _datasource_Root.PersonalFeed;
		if (_datasource_Root_PersonalFeed == null)
		{
			return;
		}
		_datasource_Root_PersonalFeed.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root_PersonalFeed;
		_datasource_Root_PersonalFeed.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root_PersonalFeed;
		_datasource_Root_PersonalFeed.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_PersonalFeed;
		_datasource_Root_PersonalFeed.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_PersonalFeed;
		_datasource_Root_PersonalFeed.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_PersonalFeed;
		_datasource_Root_PersonalFeed.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_PersonalFeed;
		_datasource_Root_PersonalFeed.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_PersonalFeed;
		_datasource_Root_PersonalFeed.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_PersonalFeed;
		_datasource_Root_PersonalFeed.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_PersonalFeed;
		_datasource_Root_PersonalFeed_NotificationList = _datasource_Root_PersonalFeed.NotificationList;
		if (_datasource_Root_PersonalFeed_NotificationList != null)
		{
			_datasource_Root_PersonalFeed_NotificationList.ListChanged += OnList_datasource_Root_PersonalFeed_NotificationListChanged;
			for (int j = 0; j < _datasource_Root_PersonalFeed_NotificationList.Count; j++)
			{
				SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate = new SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData2 = new GeneratedWidgetData(singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate);
				SPPersonalKillNotificationItemVM dataSource2 = (SPPersonalKillNotificationItemVM)(generatedWidgetData2.Data = _datasource_Root_PersonalFeed_NotificationList[j]);
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.AddComponent(generatedWidgetData2);
				_widget_1.AddChildAtIndex(singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate, j);
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.CreateWidgets();
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.SetIds();
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.SetAttributes();
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.SetDataSource(dataSource2);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_GeneralCasualty_NotificationList(MBBindingList<SPGeneralKillNotificationItemVM> newDataSource)
	{
		if (_datasource_Root_GeneralCasualty_NotificationList != null)
		{
			_datasource_Root_GeneralCasualty_NotificationList.ListChanged -= OnList_datasource_Root_GeneralCasualty_NotificationListChanged;
			for (int num = _widget_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_0.GetChild(num);
				((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_0.GetChild(num);
				((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate)child2).SetDataSource(null);
				_widget_0.RemoveChild(child2);
			}
			_datasource_Root_GeneralCasualty_NotificationList = null;
		}
		_datasource_Root_GeneralCasualty_NotificationList = newDataSource;
		_datasource_Root_GeneralCasualty_NotificationList = _datasource_Root_GeneralCasualty.NotificationList;
		if (_datasource_Root_GeneralCasualty_NotificationList != null)
		{
			_datasource_Root_GeneralCasualty_NotificationList.ListChanged += OnList_datasource_Root_GeneralCasualty_NotificationListChanged;
			for (int i = 0; i < _datasource_Root_GeneralCasualty_NotificationList.Count; i++)
			{
				SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate = new SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate);
				SPGeneralKillNotificationItemVM dataSource = (SPGeneralKillNotificationItemVM)(generatedWidgetData.Data = _datasource_Root_GeneralCasualty_NotificationList[i]);
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0.AddChildAtIndex(singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate, i);
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.CreateWidgets();
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.SetIds();
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.SetAttributes();
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_PersonalFeed_NotificationList(MBBindingList<SPPersonalKillNotificationItemVM> newDataSource)
	{
		if (_datasource_Root_PersonalFeed_NotificationList != null)
		{
			_datasource_Root_PersonalFeed_NotificationList.ListChanged -= OnList_datasource_Root_PersonalFeed_NotificationListChanged;
			for (int num = _widget_1.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_1.GetChild(num);
				((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_1.GetChild(num);
				((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate)child2).SetDataSource(null);
				_widget_1.RemoveChild(child2);
			}
			_datasource_Root_PersonalFeed_NotificationList = null;
		}
		_datasource_Root_PersonalFeed_NotificationList = newDataSource;
		_datasource_Root_PersonalFeed_NotificationList = _datasource_Root_PersonalFeed.NotificationList;
		if (_datasource_Root_PersonalFeed_NotificationList != null)
		{
			_datasource_Root_PersonalFeed_NotificationList.ListChanged += OnList_datasource_Root_PersonalFeed_NotificationListChanged;
			for (int i = 0; i < _datasource_Root_PersonalFeed_NotificationList.Count; i++)
			{
				SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate = new SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate);
				SPPersonalKillNotificationItemVM dataSource = (SPPersonalKillNotificationItemVM)(generatedWidgetData.Data = _datasource_Root_PersonalFeed_NotificationList[i]);
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_1.AddChildAtIndex(singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate, i);
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.CreateWidgets();
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.SetIds();
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.SetAttributes();
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_GeneralCasualty(SPGeneralKillNotificationVM newDataSource)
	{
		if (_datasource_Root_GeneralCasualty != null)
		{
			_datasource_Root_GeneralCasualty.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_GeneralCasualty;
			_datasource_Root_GeneralCasualty.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_GeneralCasualty;
			if (_datasource_Root_GeneralCasualty_NotificationList != null)
			{
				_datasource_Root_GeneralCasualty_NotificationList.ListChanged -= OnList_datasource_Root_GeneralCasualty_NotificationListChanged;
				for (int num = _widget_0.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_0.GetChild(num);
					((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_0.GetChild(num);
					((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate)child2).SetDataSource(null);
					_widget_0.RemoveChild(child2);
				}
				_datasource_Root_GeneralCasualty_NotificationList = null;
			}
			_datasource_Root_GeneralCasualty = null;
		}
		_datasource_Root_GeneralCasualty = newDataSource;
		_datasource_Root_GeneralCasualty = _datasource_Root.GeneralCasualty;
		if (_datasource_Root_GeneralCasualty == null)
		{
			return;
		}
		_datasource_Root_GeneralCasualty.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root_GeneralCasualty;
		_datasource_Root_GeneralCasualty.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root_GeneralCasualty;
		_datasource_Root_GeneralCasualty.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_GeneralCasualty;
		_datasource_Root_GeneralCasualty.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_GeneralCasualty;
		_datasource_Root_GeneralCasualty.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_GeneralCasualty;
		_datasource_Root_GeneralCasualty.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_GeneralCasualty;
		_datasource_Root_GeneralCasualty.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_GeneralCasualty;
		_datasource_Root_GeneralCasualty.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_GeneralCasualty;
		_datasource_Root_GeneralCasualty.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_GeneralCasualty;
		_datasource_Root_GeneralCasualty_NotificationList = _datasource_Root_GeneralCasualty.NotificationList;
		if (_datasource_Root_GeneralCasualty_NotificationList != null)
		{
			_datasource_Root_GeneralCasualty_NotificationList.ListChanged += OnList_datasource_Root_GeneralCasualty_NotificationListChanged;
			for (int i = 0; i < _datasource_Root_GeneralCasualty_NotificationList.Count; i++)
			{
				SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate = new SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate);
				SPGeneralKillNotificationItemVM dataSource = (SPGeneralKillNotificationItemVM)(generatedWidgetData.Data = _datasource_Root_GeneralCasualty_NotificationList[i]);
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0.AddChildAtIndex(singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate, i);
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.CreateWidgets();
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.SetIds();
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.SetAttributes();
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_PersonalFeed(SPPersonalKillNotificationVM newDataSource)
	{
		if (_datasource_Root_PersonalFeed != null)
		{
			_datasource_Root_PersonalFeed.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_PersonalFeed;
			_datasource_Root_PersonalFeed.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_PersonalFeed;
			_datasource_Root_PersonalFeed.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_PersonalFeed;
			_datasource_Root_PersonalFeed.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_PersonalFeed;
			_datasource_Root_PersonalFeed.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_PersonalFeed;
			_datasource_Root_PersonalFeed.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_PersonalFeed;
			_datasource_Root_PersonalFeed.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_PersonalFeed;
			_datasource_Root_PersonalFeed.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_PersonalFeed;
			_datasource_Root_PersonalFeed.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_PersonalFeed;
			if (_datasource_Root_PersonalFeed_NotificationList != null)
			{
				_datasource_Root_PersonalFeed_NotificationList.ListChanged -= OnList_datasource_Root_PersonalFeed_NotificationListChanged;
				for (int num = _widget_1.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_1.GetChild(num);
					((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_1.GetChild(num);
					((SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate)child2).SetDataSource(null);
					_widget_1.RemoveChild(child2);
				}
				_datasource_Root_PersonalFeed_NotificationList = null;
			}
			_datasource_Root_PersonalFeed = null;
		}
		_datasource_Root_PersonalFeed = newDataSource;
		_datasource_Root_PersonalFeed = _datasource_Root.PersonalFeed;
		if (_datasource_Root_PersonalFeed == null)
		{
			return;
		}
		_datasource_Root_PersonalFeed.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root_PersonalFeed;
		_datasource_Root_PersonalFeed.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root_PersonalFeed;
		_datasource_Root_PersonalFeed.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_PersonalFeed;
		_datasource_Root_PersonalFeed.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_PersonalFeed;
		_datasource_Root_PersonalFeed.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_PersonalFeed;
		_datasource_Root_PersonalFeed.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_PersonalFeed;
		_datasource_Root_PersonalFeed.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_PersonalFeed;
		_datasource_Root_PersonalFeed.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_PersonalFeed;
		_datasource_Root_PersonalFeed.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_PersonalFeed;
		_datasource_Root_PersonalFeed_NotificationList = _datasource_Root_PersonalFeed.NotificationList;
		if (_datasource_Root_PersonalFeed_NotificationList != null)
		{
			_datasource_Root_PersonalFeed_NotificationList.ListChanged += OnList_datasource_Root_PersonalFeed_NotificationListChanged;
			for (int i = 0; i < _datasource_Root_PersonalFeed_NotificationList.Count; i++)
			{
				SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate = new SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate);
				SPPersonalKillNotificationItemVM dataSource = (SPPersonalKillNotificationItemVM)(generatedWidgetData.Data = _datasource_Root_PersonalFeed_NotificationList[i]);
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_1.AddChildAtIndex(singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate, i);
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.CreateWidgets();
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.SetIds();
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.SetAttributes();
				singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_2_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}
}
