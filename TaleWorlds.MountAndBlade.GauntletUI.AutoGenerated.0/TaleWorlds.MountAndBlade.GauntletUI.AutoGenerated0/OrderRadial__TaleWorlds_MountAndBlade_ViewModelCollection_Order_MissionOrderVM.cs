using System.ComponentModel;
using System.Numerics;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.GauntletUI.ExtraWidgets;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Order;
using TaleWorlds.MountAndBlade.ViewModelCollection.Input;
using TaleWorlds.MountAndBlade.ViewModelCollection.Order;

namespace TaleWorlds.MountAndBlade.GauntletUI.AutoGenerated0;

public class OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM : Widget, IGeneratedGauntletMovieRoot
{
	private Widget _widget;

	private OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_3_Siege__DependendPrefab _widget_0;

	private Widget _widget_1;

	private Widget _widget_1_0;

	private ListPanel _widget_1_0_0;

	private ListPanel _widget_1_1;

	private ListPanel _widget_1_1_0;

	private OrderReturnButtonWidget _widget_1_1_1;

	private Widget _widget_1_1_1_0;

	private Widget _widget_1_1_1_1;

	private InputKeyVisualWidget _widget_1_1_1_1_0;

	private TextWidget _widget_1_1_1_2;

	private OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_4_OrderTransferPopup__DependendPrefab _widget_2;

	private MissionOrderVM _datasource_Root;

	private MBBindingList<OrderSetVM> _datasource_Root_OrderSets;

	private InputKeyItemVM _datasource_Root_CancelInputKey;

	private MissionOrderTroopControllerVM _datasource_Root_TroopController;

	private MBBindingList<OrderTroopItemVM> _datasource_Root_TroopController_TroopList;

	public OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_3_Siege__DependendPrefab(base.Context);
		_widget.AddChild(_widget_0);
		_widget_0.CreateWidgets();
		_widget_1 = new Widget(base.Context);
		_widget.AddChild(_widget_1);
		_widget_1_0 = new Widget(base.Context);
		_widget_1.AddChild(_widget_1_0);
		_widget_1_0_0 = new ListPanel(base.Context);
		_widget_1_0.AddChild(_widget_1_0_0);
		_widget_1_1 = new ListPanel(base.Context);
		_widget_1.AddChild(_widget_1_1);
		_widget_1_1_0 = new ListPanel(base.Context);
		_widget_1_1.AddChild(_widget_1_1_0);
		_widget_1_1_1 = new OrderReturnButtonWidget(base.Context);
		_widget_1_1.AddChild(_widget_1_1_1);
		_widget_1_1_1_0 = new Widget(base.Context);
		_widget_1_1_1.AddChild(_widget_1_1_1_0);
		_widget_1_1_1_1 = new Widget(base.Context);
		_widget_1_1_1.AddChild(_widget_1_1_1_1);
		_widget_1_1_1_1_0 = new InputKeyVisualWidget(base.Context);
		_widget_1_1_1_1.AddChild(_widget_1_1_1_1_0);
		_widget_1_1_1_2 = new TextWidget(base.Context);
		_widget_1_1_1.AddChild(_widget_1_1_1_2);
		_widget_2 = new OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_4_OrderTransferPopup__DependendPrefab(base.Context);
		_widget.AddChild(_widget_2);
		_widget_2.CreateWidgets();
	}

	public void SetIds()
	{
		_widget_0.SetIds();
		_widget_1_1_1_0.Id = "Icon";
		_widget_1_1_1_1.Id = "InputVisualParent";
		_widget_2.SetIds();
	}

	public void SetAttributes()
	{
		base.DoNotAcceptEvents = true;
		base.WidthSizePolicy = SizePolicy.StretchToParent;
		base.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0.SetAttributes();
		_widget_1.DoNotAcceptEvents = true;
		_widget_1.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_1.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_1_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_1_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_0.VerticalAlignment = VerticalAlignment.Top;
		_widget_1_0.MarginTop = 25f;
		_widget_1_0_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_1_0_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_1_1.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_1_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_1_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_1.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_1_1.MarginBottom = 60f;
		_widget_1_1_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_1_1_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_1_1_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_1_1_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_1_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1_1_1.SuggestedWidth = 62f;
		_widget_1_1_1.SuggestedHeight = 62f;
		_widget_1_1_1.Brush = base.Context.GetBrush("Order.Item.Background");
		_widget_1_1_1.VerticalAlignment = VerticalAlignment.Center;
		_widget_1_1_1.IconWidget = _widget_1_1_1_0;
		_widget_1_1_1.InputVisualParent = _widget_1_1_1_1;
		_widget_1_1_1.OrderIconID = "Return";
		_widget_1_1_1_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_1_1_1_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_1_1_0.MarginTop = 15f;
		_widget_1_1_1_0.MarginBottom = 15f;
		_widget_1_1_1_0.MarginLeft = 15f;
		_widget_1_1_1_0.MarginRight = 15f;
		_widget_1_1_1_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_1_1_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1_1_1_1.SuggestedWidth = 55f;
		_widget_1_1_1_1.SuggestedHeight = 55f;
		_widget_1_1_1_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_1_1_1.VerticalAlignment = VerticalAlignment.Top;
		_widget_1_1_1_1.PositionYOffset = -30f;
		_widget_1_1_1_1_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_1_1_1_1_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_1_1_1_0.HideIfNone = true;
		_widget_1_1_1_2.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_1_1_2.SuggestedWidth = 100f;
		_widget_1_1_1_2.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1_1_1_2.SuggestedHeight = 25f;
		_widget_1_1_1_2.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_1_1_1_2.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_1_1_2.PositionYOffset = 10f;
		_widget_1_1_1_2.Brush = base.Context.GetBrush("Order.Item.DescriptionText.Radial");
		_widget_2.SetAttributes();
	}

	public void RefreshBindingWithChildren()
	{
		MissionOrderVM datasource_Root = _datasource_Root;
		SetDataSource(null);
		SetDataSource(datasource_Root);
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root == null)
		{
			return;
		}
		_widget_0.DestroyDataSource();
		_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_1.PropertyChanged -= PropertyChangedListenerOf_widget_1;
		_widget_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1;
		_widget_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1;
		_widget_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1;
		_widget_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1;
		_widget_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1;
		_widget_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_1;
		_widget_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1;
		_widget_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1;
		_widget_1_0.PropertyChanged -= PropertyChangedListenerOf_widget_1_0;
		_widget_1_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_0;
		_widget_1_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_0;
		_widget_1_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_0;
		_widget_1_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_0;
		_widget_1_1_1.PropertyChanged -= PropertyChangedListenerOf_widget_1_1_1;
		_widget_1_1_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_1_1;
		_widget_1_1_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_1_1;
		_widget_1_1_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_1_1;
		_widget_1_1_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_1_1;
		_widget_1_1_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_1_1;
		_widget_1_1_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_1_1;
		_widget_1_1_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_1_1;
		_widget_1_1_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_1_1;
		_widget_1_1_1_2.PropertyChanged -= PropertyChangedListenerOf_widget_1_1_1_2;
		_widget_1_1_1_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_1_1_2;
		_widget_1_1_1_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_1_1_2;
		_widget_1_1_1_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_1_1_2;
		_widget_1_1_1_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_1_1_2;
		_widget_1_1_1_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_1_1_2;
		_widget_1_1_1_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_1_1_2;
		_widget_1_1_1_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_1_1_2;
		_widget_1_1_1_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_1_1_2;
		if (_datasource_Root_OrderSets != null)
		{
			_datasource_Root_OrderSets.ListChanged -= OnList_datasource_Root_OrderSetsChanged;
			for (int num = _widget_1_1_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_1_1_0.GetChild(num);
				((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate)child).OnBeforeRemovedChild(child);
				((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate)_widget_1_1_0.GetChild(num)).DestroyDataSource();
			}
			_datasource_Root_OrderSets = null;
		}
		if (_datasource_Root_CancelInputKey != null)
		{
			_datasource_Root_CancelInputKey.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_CancelInputKey;
			_widget_1_1_1_1_0.PropertyChanged -= PropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_1_1_1_0;
			_datasource_Root_CancelInputKey = null;
		}
		if (_datasource_Root_TroopController != null)
		{
			_widget_2.DestroyDataSource();
			_datasource_Root_TroopController.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_TroopController;
			if (_datasource_Root_TroopController_TroopList != null)
			{
				_datasource_Root_TroopController_TroopList.ListChanged -= OnList_datasource_Root_TroopController_TroopListChanged;
				for (int num2 = _widget_1_0_0.ChildCount - 1; num2 >= 0; num2--)
				{
					Widget child2 = _widget_1_0_0.GetChild(num2);
					((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate)child2).OnBeforeRemovedChild(child2);
					((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate)_widget_1_0_0.GetChild(num2)).DestroyDataSource();
				}
				_datasource_Root_TroopController_TroopList = null;
			}
			_datasource_Root_TroopController = null;
		}
		_datasource_Root = null;
	}

	public void SetDataSource(MissionOrderVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_1(string propertyName)
	{
		if (propertyName == "IsVisible")
		{
			_datasource_Root.IsToggleOrderShown = _widget_1.IsVisible;
		}
	}

	private void PropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_1_0(string propertyName)
	{
		if (propertyName == "IsVisible")
		{
			_datasource_Root.IsTroopListShown = _widget_1_0.IsVisible;
		}
	}

	private void PropertyChangedListenerOf_widget_1_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_1_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_1_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_1_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_1_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_1_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_1_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_1_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_1_1_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_1_1_1(string propertyName)
	{
		switch (propertyName)
		{
		case "IsDeployment":
			_datasource_Root.IsDeployment = _widget_1_1_1.IsDeployment;
			break;
		case "CanUseShortcuts":
			_datasource_Root.CanUseShortcuts = _widget_1_1_1.CanUseShortcuts;
			break;
		case "IsHolding":
			_datasource_Root.IsHolding = _widget_1_1_1.IsHolding;
			break;
		case "IsAnyOrderSetActive":
			_datasource_Root.IsAnyOrderSetActive = _widget_1_1_1.IsAnyOrderSetActive;
			break;
		}
	}

	private void PropertyChangedListenerOf_widget_1_1_1_2(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1_2(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_1_1_1_2(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1_2(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_1_1_1_2(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1_2(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_1_1_1_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1_2(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_1_1_1_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1_2(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_1_1_1_2(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1_2(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_1_1_1_2(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1_2(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_1_1_1_2(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1_2(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_1_1_1_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1_2(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_1_1_1_2(string propertyName)
	{
		if (propertyName == "Text")
		{
			_datasource_Root.ReturnText = _widget_1_1_1_2.Text;
		}
	}

	private void PropertyChangedListenerOf_widget_1_1_1_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1_1_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_1_1_1_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1_1_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_1_1_1_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1_1_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_1_1_1_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1_1_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_1_1_1_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1_1_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_1_1_1_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1_1_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_1_1_1_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1_1_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_1_1_1_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1_1_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_1_1_1_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_1_1_1_1_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_1_1_1_1_0(string propertyName)
	{
		if (propertyName == "KeyID")
		{
			_datasource_Root_CancelInputKey.KeyID = _widget_1_1_1_1_0.KeyID;
		}
		else if (propertyName == "IsVisible")
		{
			_datasource_Root_CancelInputKey.IsVisible = _widget_1_1_1_1_0.IsVisible;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		switch (propertyName)
		{
		case "OrderSets":
			RefreshDataSource_datasource_Root_OrderSets(_datasource_Root.OrderSets);
			break;
		case "CancelInputKey":
			RefreshDataSource_datasource_Root_CancelInputKey(_datasource_Root.CancelInputKey);
			break;
		case "TroopController":
			RefreshDataSource_datasource_Root_TroopController(_datasource_Root.TroopController);
			break;
		case "IsToggleOrderShown":
			_widget_1.IsVisible = _datasource_Root.IsToggleOrderShown;
			break;
		case "IsTroopListShown":
			_widget_1_0.IsVisible = _datasource_Root.IsTroopListShown;
			break;
		case "IsDeployment":
			_widget_1_1_1.IsDeployment = _datasource_Root.IsDeployment;
			break;
		case "CanUseShortcuts":
			_widget_1_1_1.CanUseShortcuts = _datasource_Root.CanUseShortcuts;
			break;
		case "IsHolding":
			_widget_1_1_1.IsHolding = _datasource_Root.IsHolding;
			break;
		case "IsAnyOrderSetActive":
			_widget_1_1_1.IsAnyOrderSetActive = _datasource_Root.IsAnyOrderSetActive;
			break;
		case "ReturnText":
			_widget_1_1_1_2.Text = _datasource_Root.ReturnText;
			break;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root_CancelInputKey(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_CancelInputKey(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root_CancelInputKey(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_CancelInputKey(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_CancelInputKey(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_CancelInputKey(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_CancelInputKey(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_CancelInputKey(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_CancelInputKey(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_CancelInputKey(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_CancelInputKey(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_CancelInputKey(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_CancelInputKey(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_CancelInputKey(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_CancelInputKey(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_CancelInputKey(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_CancelInputKey(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_CancelInputKey(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root_CancelInputKey(string propertyName)
	{
		if (propertyName == "KeyID")
		{
			_widget_1_1_1_1_0.KeyID = _datasource_Root_CancelInputKey.KeyID;
		}
		else if (propertyName == "IsVisible")
		{
			_widget_1_1_1_1_0.IsVisible = _datasource_Root_CancelInputKey.IsVisible;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root_TroopController(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_TroopController(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root_TroopController(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_TroopController(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_TroopController(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_TroopController(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_TroopController(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_TroopController(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_TroopController(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_TroopController(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_TroopController(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_TroopController(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_TroopController(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_TroopController(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_TroopController(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_TroopController(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_TroopController(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root_TroopController(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root_TroopController(string propertyName)
	{
		if (propertyName == "TroopList")
		{
			RefreshDataSource_datasource_Root_TroopController_TroopList(_datasource_Root_TroopController.TroopList);
		}
	}

	public void OnList_datasource_Root_TroopController_TroopListChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_1_0_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_1_0_0.GetChild(num);
				((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_1_0_0.GetChild(num);
				((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate)child4).SetDataSource(null);
				_widget_1_0_0.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_TroopController_TroopList.Count; i++)
			{
				OrderTroopItemVM bindingObject = _datasource_Root_TroopController_TroopList[i];
				_widget_1_0_0.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate = new OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate);
			OrderTroopItemVM dataSource = (OrderTroopItemVM)(generatedWidgetData.Data = _datasource_Root_TroopController_TroopList[e.NewIndex]);
			orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_1_0_0.AddChildAtIndex(orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate, e.NewIndex);
			orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.CreateWidgets();
			orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.SetIds();
			orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.SetAttributes();
			orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_1_0_0.GetChild(e.NewIndex);
			((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_1_0_0.GetChild(e.NewIndex);
			((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate)child).SetDataSource(null);
			_widget_1_0_0.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	public void OnList_datasource_Root_OrderSetsChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_1_1_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_1_1_0.GetChild(num);
				((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_1_1_0.GetChild(num);
				((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate)child4).SetDataSource(null);
				_widget_1_1_0.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_OrderSets.Count; i++)
			{
				OrderSetVM bindingObject = _datasource_Root_OrderSets[i];
				_widget_1_1_0.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate = new OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate);
			OrderSetVM dataSource = (OrderSetVM)(generatedWidgetData.Data = _datasource_Root_OrderSets[e.NewIndex]);
			orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_1_1_0.AddChildAtIndex(orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate, e.NewIndex);
			orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate.CreateWidgets();
			orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate.SetIds();
			orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate.SetAttributes();
			orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_1_1_0.GetChild(e.NewIndex);
			((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_1_1_0.GetChild(e.NewIndex);
			((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate)child).SetDataSource(null);
			_widget_1_1_0.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(MissionOrderVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_widget_0.SetDataSource(null);
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget_1.PropertyChanged -= PropertyChangedListenerOf_widget_1;
			_widget_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1;
			_widget_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1;
			_widget_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1;
			_widget_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1;
			_widget_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1;
			_widget_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_1;
			_widget_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1;
			_widget_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1;
			_widget_1_0.PropertyChanged -= PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_0;
			_widget_1_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_0;
			_widget_1_1_1.PropertyChanged -= PropertyChangedListenerOf_widget_1_1_1;
			_widget_1_1_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_1_1;
			_widget_1_1_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_1_1;
			_widget_1_1_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_1_1;
			_widget_1_1_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_1_1;
			_widget_1_1_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_1_1;
			_widget_1_1_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_1_1;
			_widget_1_1_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_1_1;
			_widget_1_1_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_1_1;
			_widget_1_1_1_2.PropertyChanged -= PropertyChangedListenerOf_widget_1_1_1_2;
			_widget_1_1_1_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_1_1_2;
			_widget_1_1_1_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_1_1_2;
			_widget_1_1_1_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_1_1_2;
			_widget_1_1_1_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_1_1_2;
			_widget_1_1_1_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_1_1_2;
			_widget_1_1_1_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_1_1_2;
			_widget_1_1_1_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_1_1_2;
			_widget_1_1_1_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_1_1_2;
			if (_datasource_Root_OrderSets != null)
			{
				_datasource_Root_OrderSets.ListChanged -= OnList_datasource_Root_OrderSetsChanged;
				for (int num = _widget_1_1_0.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_1_1_0.GetChild(num);
					((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_1_1_0.GetChild(num);
					((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate)child2).SetDataSource(null);
					_widget_1_1_0.RemoveChild(child2);
				}
				_datasource_Root_OrderSets = null;
			}
			if (_datasource_Root_CancelInputKey != null)
			{
				_datasource_Root_CancelInputKey.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_CancelInputKey;
				_datasource_Root_CancelInputKey.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_CancelInputKey;
				_datasource_Root_CancelInputKey.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_CancelInputKey;
				_datasource_Root_CancelInputKey.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_CancelInputKey;
				_datasource_Root_CancelInputKey.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_CancelInputKey;
				_datasource_Root_CancelInputKey.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_CancelInputKey;
				_datasource_Root_CancelInputKey.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_CancelInputKey;
				_datasource_Root_CancelInputKey.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_CancelInputKey;
				_datasource_Root_CancelInputKey.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_CancelInputKey;
				_widget_1_1_1_1_0.PropertyChanged -= PropertyChangedListenerOf_widget_1_1_1_1_0;
				_widget_1_1_1_1_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_1_1_1_0;
				_widget_1_1_1_1_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_1_1_1_0;
				_widget_1_1_1_1_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_1_1_1_0;
				_widget_1_1_1_1_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_1_1_1_0;
				_widget_1_1_1_1_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_1_1_1_0;
				_widget_1_1_1_1_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_1_1_1_0;
				_widget_1_1_1_1_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_1_1_1_0;
				_widget_1_1_1_1_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_1_1_1_0;
				_datasource_Root_CancelInputKey = null;
			}
			if (_datasource_Root_TroopController != null)
			{
				_widget_2.SetDataSource(null);
				_datasource_Root_TroopController.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_TroopController;
				_datasource_Root_TroopController.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_TroopController;
				_datasource_Root_TroopController.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_TroopController;
				_datasource_Root_TroopController.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_TroopController;
				_datasource_Root_TroopController.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_TroopController;
				_datasource_Root_TroopController.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_TroopController;
				_datasource_Root_TroopController.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_TroopController;
				_datasource_Root_TroopController.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_TroopController;
				_datasource_Root_TroopController.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_TroopController;
				if (_datasource_Root_TroopController_TroopList != null)
				{
					_datasource_Root_TroopController_TroopList.ListChanged -= OnList_datasource_Root_TroopController_TroopListChanged;
					for (int num2 = _widget_1_0_0.ChildCount - 1; num2 >= 0; num2--)
					{
						Widget child3 = _widget_1_0_0.GetChild(num2);
						((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate)child3).OnBeforeRemovedChild(child3);
						Widget child4 = _widget_1_0_0.GetChild(num2);
						((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate)child4).SetDataSource(null);
						_widget_1_0_0.RemoveChild(child4);
					}
					_datasource_Root_TroopController_TroopList = null;
				}
				_datasource_Root_TroopController = null;
			}
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_1.IsVisible = _datasource_Root.IsToggleOrderShown;
		_widget_1.PropertyChanged += PropertyChangedListenerOf_widget_1;
		_widget_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1;
		_widget_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1;
		_widget_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1;
		_widget_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1;
		_widget_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1;
		_widget_1.intPropertyChanged += intPropertyChangedListenerOf_widget_1;
		_widget_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1;
		_widget_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1;
		_widget_1_0.IsVisible = _datasource_Root.IsTroopListShown;
		_widget_1_0.PropertyChanged += PropertyChangedListenerOf_widget_1_0;
		_widget_1_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1_0;
		_widget_1_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1_0;
		_widget_1_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1_0;
		_widget_1_0.intPropertyChanged += intPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1_0;
		_widget_1_1_1.IsDeployment = _datasource_Root.IsDeployment;
		_widget_1_1_1.CanUseShortcuts = _datasource_Root.CanUseShortcuts;
		_widget_1_1_1.IsHolding = _datasource_Root.IsHolding;
		_widget_1_1_1.IsAnyOrderSetActive = _datasource_Root.IsAnyOrderSetActive;
		_widget_1_1_1.PropertyChanged += PropertyChangedListenerOf_widget_1_1_1;
		_widget_1_1_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1_1_1;
		_widget_1_1_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1_1_1;
		_widget_1_1_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1_1_1;
		_widget_1_1_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1_1_1;
		_widget_1_1_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1_1_1;
		_widget_1_1_1.intPropertyChanged += intPropertyChangedListenerOf_widget_1_1_1;
		_widget_1_1_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1_1_1;
		_widget_1_1_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1_1_1;
		_widget_1_1_1_2.Text = _datasource_Root.ReturnText;
		_widget_1_1_1_2.PropertyChanged += PropertyChangedListenerOf_widget_1_1_1_2;
		_widget_1_1_1_2.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1_1_1_2;
		_widget_1_1_1_2.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1_1_1_2;
		_widget_1_1_1_2.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1_1_1_2;
		_widget_1_1_1_2.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1_1_1_2;
		_widget_1_1_1_2.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1_1_1_2;
		_widget_1_1_1_2.intPropertyChanged += intPropertyChangedListenerOf_widget_1_1_1_2;
		_widget_1_1_1_2.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1_1_1_2;
		_widget_1_1_1_2.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1_1_1_2;
		_datasource_Root_OrderSets = _datasource_Root.OrderSets;
		if (_datasource_Root_OrderSets != null)
		{
			_datasource_Root_OrderSets.ListChanged += OnList_datasource_Root_OrderSetsChanged;
			for (int i = 0; i < _datasource_Root_OrderSets.Count; i++)
			{
				OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate = new OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate);
				OrderSetVM dataSource = (OrderSetVM)(generatedWidgetData.Data = _datasource_Root_OrderSets[i]);
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_1_1_0.AddChildAtIndex(orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate, i);
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate.CreateWidgets();
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate.SetIds();
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate.SetAttributes();
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate.SetDataSource(dataSource);
			}
		}
		_datasource_Root_CancelInputKey = _datasource_Root.CancelInputKey;
		if (_datasource_Root_CancelInputKey != null)
		{
			_datasource_Root_CancelInputKey.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_CancelInputKey;
			_widget_1_1_1_1_0.KeyID = _datasource_Root_CancelInputKey.KeyID;
			_widget_1_1_1_1_0.IsVisible = _datasource_Root_CancelInputKey.IsVisible;
			_widget_1_1_1_1_0.PropertyChanged += PropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.intPropertyChanged += intPropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1_1_1_1_0;
		}
		_datasource_Root_TroopController = _datasource_Root.TroopController;
		if (_datasource_Root_TroopController != null)
		{
			_datasource_Root_TroopController.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController_TroopList = _datasource_Root_TroopController.TroopList;
			if (_datasource_Root_TroopController_TroopList != null)
			{
				_datasource_Root_TroopController_TroopList.ListChanged += OnList_datasource_Root_TroopController_TroopListChanged;
				for (int j = 0; j < _datasource_Root_TroopController_TroopList.Count; j++)
				{
					OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate = new OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate(base.Context);
					GeneratedWidgetData generatedWidgetData2 = new GeneratedWidgetData(orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate);
					OrderTroopItemVM dataSource2 = (OrderTroopItemVM)(generatedWidgetData2.Data = _datasource_Root_TroopController_TroopList[j]);
					orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData2);
					_widget_1_0_0.AddChildAtIndex(orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate, j);
					orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.CreateWidgets();
					orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.SetIds();
					orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.SetAttributes();
					orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.SetDataSource(dataSource2);
				}
			}
			_widget_2.SetDataSource(_datasource_Root_TroopController);
		}
		_widget_0.SetDataSource(_datasource_Root);
	}

	private void RefreshDataSource_datasource_Root_TroopController_TroopList(MBBindingList<OrderTroopItemVM> newDataSource)
	{
		if (_datasource_Root_TroopController_TroopList != null)
		{
			_datasource_Root_TroopController_TroopList.ListChanged -= OnList_datasource_Root_TroopController_TroopListChanged;
			for (int num = _widget_1_0_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_1_0_0.GetChild(num);
				((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_1_0_0.GetChild(num);
				((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate)child2).SetDataSource(null);
				_widget_1_0_0.RemoveChild(child2);
			}
			_datasource_Root_TroopController_TroopList = null;
		}
		_datasource_Root_TroopController_TroopList = newDataSource;
		_datasource_Root_TroopController_TroopList = _datasource_Root_TroopController.TroopList;
		if (_datasource_Root_TroopController_TroopList != null)
		{
			_datasource_Root_TroopController_TroopList.ListChanged += OnList_datasource_Root_TroopController_TroopListChanged;
			for (int i = 0; i < _datasource_Root_TroopController_TroopList.Count; i++)
			{
				OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate = new OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate);
				OrderTroopItemVM dataSource = (OrderTroopItemVM)(generatedWidgetData.Data = _datasource_Root_TroopController_TroopList[i]);
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_1_0_0.AddChildAtIndex(orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate, i);
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.CreateWidgets();
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.SetIds();
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.SetAttributes();
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_OrderSets(MBBindingList<OrderSetVM> newDataSource)
	{
		if (_datasource_Root_OrderSets != null)
		{
			_datasource_Root_OrderSets.ListChanged -= OnList_datasource_Root_OrderSetsChanged;
			for (int num = _widget_1_1_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_1_1_0.GetChild(num);
				((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_1_1_0.GetChild(num);
				((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate)child2).SetDataSource(null);
				_widget_1_1_0.RemoveChild(child2);
			}
			_datasource_Root_OrderSets = null;
		}
		_datasource_Root_OrderSets = newDataSource;
		_datasource_Root_OrderSets = _datasource_Root.OrderSets;
		if (_datasource_Root_OrderSets != null)
		{
			_datasource_Root_OrderSets.ListChanged += OnList_datasource_Root_OrderSetsChanged;
			for (int i = 0; i < _datasource_Root_OrderSets.Count; i++)
			{
				OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate = new OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate);
				OrderSetVM dataSource = (OrderSetVM)(generatedWidgetData.Data = _datasource_Root_OrderSets[i]);
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_1_1_0.AddChildAtIndex(orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate, i);
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate.CreateWidgets();
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate.SetIds();
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate.SetAttributes();
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_2_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_CancelInputKey(InputKeyItemVM newDataSource)
	{
		if (_datasource_Root_CancelInputKey != null)
		{
			_datasource_Root_CancelInputKey.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_CancelInputKey;
			_widget_1_1_1_1_0.PropertyChanged -= PropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_1_1_1_0;
			_datasource_Root_CancelInputKey = null;
		}
		_datasource_Root_CancelInputKey = newDataSource;
		_datasource_Root_CancelInputKey = _datasource_Root.CancelInputKey;
		if (_datasource_Root_CancelInputKey != null)
		{
			_datasource_Root_CancelInputKey.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_CancelInputKey;
			_datasource_Root_CancelInputKey.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_CancelInputKey;
			_widget_1_1_1_1_0.KeyID = _datasource_Root_CancelInputKey.KeyID;
			_widget_1_1_1_1_0.IsVisible = _datasource_Root_CancelInputKey.IsVisible;
			_widget_1_1_1_1_0.PropertyChanged += PropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.intPropertyChanged += intPropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1_1_1_1_0;
			_widget_1_1_1_1_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1_1_1_1_0;
		}
	}

	private void RefreshDataSource_datasource_Root_TroopController(MissionOrderTroopControllerVM newDataSource)
	{
		if (_datasource_Root_TroopController != null)
		{
			_widget_2.SetDataSource(null);
			_datasource_Root_TroopController.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_TroopController;
			_datasource_Root_TroopController.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_TroopController;
			if (_datasource_Root_TroopController_TroopList != null)
			{
				_datasource_Root_TroopController_TroopList.ListChanged -= OnList_datasource_Root_TroopController_TroopListChanged;
				for (int num = _widget_1_0_0.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_1_0_0.GetChild(num);
					((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_1_0_0.GetChild(num);
					((OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate)child2).SetDataSource(null);
					_widget_1_0_0.RemoveChild(child2);
				}
				_datasource_Root_TroopController_TroopList = null;
			}
			_datasource_Root_TroopController = null;
		}
		_datasource_Root_TroopController = newDataSource;
		_datasource_Root_TroopController = _datasource_Root.TroopController;
		if (_datasource_Root_TroopController == null)
		{
			return;
		}
		_datasource_Root_TroopController.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root_TroopController;
		_datasource_Root_TroopController.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root_TroopController;
		_datasource_Root_TroopController.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root_TroopController;
		_datasource_Root_TroopController.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root_TroopController;
		_datasource_Root_TroopController.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root_TroopController;
		_datasource_Root_TroopController.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root_TroopController;
		_datasource_Root_TroopController.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root_TroopController;
		_datasource_Root_TroopController.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root_TroopController;
		_datasource_Root_TroopController.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root_TroopController;
		_datasource_Root_TroopController_TroopList = _datasource_Root_TroopController.TroopList;
		if (_datasource_Root_TroopController_TroopList != null)
		{
			_datasource_Root_TroopController_TroopList.ListChanged += OnList_datasource_Root_TroopController_TroopListChanged;
			for (int i = 0; i < _datasource_Root_TroopController_TroopList.Count; i++)
			{
				OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate = new OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate);
				OrderTroopItemVM dataSource = (OrderTroopItemVM)(generatedWidgetData.Data = _datasource_Root_TroopController_TroopList[i]);
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_1_0_0.AddChildAtIndex(orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate, i);
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.CreateWidgets();
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.SetIds();
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.SetAttributes();
				orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM_Dependency_1_ItemTemplate.SetDataSource(dataSource);
			}
		}
		_widget_2.SetDataSource(_datasource_Root_TroopController);
	}
}
