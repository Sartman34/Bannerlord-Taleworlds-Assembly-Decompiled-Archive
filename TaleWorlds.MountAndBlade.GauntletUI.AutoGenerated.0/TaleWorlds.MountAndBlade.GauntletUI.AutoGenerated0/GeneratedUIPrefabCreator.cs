using System.Collections.Generic;
using TaleWorlds.Core.ViewModelCollection.Information;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.GauntletUI.PrefabSystem;
using TaleWorlds.MountAndBlade.ViewModelCollection.Credits;
using TaleWorlds.MountAndBlade.ViewModelCollection.HUD;
using TaleWorlds.MountAndBlade.ViewModelCollection.HUD.KillFeed;
using TaleWorlds.MountAndBlade.ViewModelCollection.Inquiries;
using TaleWorlds.MountAndBlade.ViewModelCollection.Multiplayer;
using TaleWorlds.MountAndBlade.ViewModelCollection.Order;

namespace TaleWorlds.MountAndBlade.GauntletUI.AutoGenerated0;

public class GeneratedUIPrefabCreator : IGeneratedUIPrefabCreator
{
	public GeneratedPrefabInstantiationResult CreateSPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM(UIContext context, Dictionary<string, object> data)
	{
		SPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM sPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM = new SPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM(context);
		sPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM.CreateWidgets();
		sPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM.SetIds();
		sPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(sPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("SPChatLog", sPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM);
		object obj = data["DataSource"];
		sPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM.SetDataSource((MPChatVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateOrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM(UIContext context, Dictionary<string, object> data)
	{
		OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM = new OrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM(context);
		orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM.CreateWidgets();
		orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM.SetIds();
		orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("OrderRadial", orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM);
		object obj = data["DataSource"];
		orderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM.SetDataSource((MissionOrderVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateOrderBar__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM(UIContext context, Dictionary<string, object> data)
	{
		OrderBar__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM orderBar__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM = new OrderBar__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM(context);
		orderBar__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM.CreateWidgets();
		orderBar__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM.SetIds();
		orderBar__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(orderBar__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("OrderBar", orderBar__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM);
		object obj = data["DataSource"];
		orderBar__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM.SetDataSource((MissionOrderVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateCreditsScreen__TaleWorlds_MountAndBlade_ViewModelCollection_Credits_CreditsVM(UIContext context, Dictionary<string, object> data)
	{
		CreditsScreen__TaleWorlds_MountAndBlade_ViewModelCollection_Credits_CreditsVM creditsScreen__TaleWorlds_MountAndBlade_ViewModelCollection_Credits_CreditsVM = new CreditsScreen__TaleWorlds_MountAndBlade_ViewModelCollection_Credits_CreditsVM(context);
		creditsScreen__TaleWorlds_MountAndBlade_ViewModelCollection_Credits_CreditsVM.CreateWidgets();
		creditsScreen__TaleWorlds_MountAndBlade_ViewModelCollection_Credits_CreditsVM.SetIds();
		creditsScreen__TaleWorlds_MountAndBlade_ViewModelCollection_Credits_CreditsVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(creditsScreen__TaleWorlds_MountAndBlade_ViewModelCollection_Credits_CreditsVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("CreditsScreen", creditsScreen__TaleWorlds_MountAndBlade_ViewModelCollection_Credits_CreditsVM);
		object obj = data["DataSource"];
		creditsScreen__TaleWorlds_MountAndBlade_ViewModelCollection_Credits_CreditsVM.SetDataSource((CreditsVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateSingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM(UIContext context, Dictionary<string, object> data)
	{
		SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM = new SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM(context);
		singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM.CreateWidgets();
		singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM.SetIds();
		singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("SingleplayerKillfeed", singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM);
		object obj = data["DataSource"];
		singleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM.SetDataSource((SPKillFeedVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM(UIContext context, Dictionary<string, object> data)
	{
		MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM = new MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM(context);
		mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM.CreateWidgets();
		mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM.SetIds();
		mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MainAgentCheerBarkController", mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM);
		object obj = data["DataSource"];
		mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM.SetDataSource((MissionMainAgentCheerBarkControllerVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreatePropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM(UIContext context, Dictionary<string, object> data)
	{
		PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM = new PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM(context);
		propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM.CreateWidgets();
		propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM.SetIds();
		propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("PropertyBasedTooltip", propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM);
		object obj = data["DataSource"];
		propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM.SetDataSource((PropertyBasedTooltipVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateTextQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_TextQueryPopUpVM(UIContext context, Dictionary<string, object> data)
	{
		TextQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_TextQueryPopUpVM textQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_TextQueryPopUpVM = new TextQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_TextQueryPopUpVM(context);
		textQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_TextQueryPopUpVM.CreateWidgets();
		textQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_TextQueryPopUpVM.SetIds();
		textQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_TextQueryPopUpVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(textQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_TextQueryPopUpVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("TextQueryPopup", textQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_TextQueryPopUpVM);
		object obj = data["DataSource"];
		textQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_TextQueryPopUpVM.SetDataSource((TextQueryPopUpVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMultiSelectionQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_MultiSelectionQueryPopUpVM(UIContext context, Dictionary<string, object> data)
	{
		MultiSelectionQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_MultiSelectionQueryPopUpVM multiSelectionQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_MultiSelectionQueryPopUpVM = new MultiSelectionQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_MultiSelectionQueryPopUpVM(context);
		multiSelectionQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_MultiSelectionQueryPopUpVM.CreateWidgets();
		multiSelectionQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_MultiSelectionQueryPopUpVM.SetIds();
		multiSelectionQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_MultiSelectionQueryPopUpVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(multiSelectionQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_MultiSelectionQueryPopUpVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MultiSelectionQueryPopup", multiSelectionQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_MultiSelectionQueryPopUpVM);
		object obj = data["DataSource"];
		multiSelectionQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_MultiSelectionQueryPopUpVM.SetDataSource((MultiSelectionQueryPopUpVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public GeneratedPrefabInstantiationResult CreateMainAgentControllerEquipDrop__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentControllerEquipDropVM(UIContext context, Dictionary<string, object> data)
	{
		MainAgentControllerEquipDrop__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentControllerEquipDropVM mainAgentControllerEquipDrop__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentControllerEquipDropVM = new MainAgentControllerEquipDrop__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentControllerEquipDropVM(context);
		mainAgentControllerEquipDrop__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentControllerEquipDropVM.CreateWidgets();
		mainAgentControllerEquipDrop__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentControllerEquipDropVM.SetIds();
		mainAgentControllerEquipDrop__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentControllerEquipDropVM.SetAttributes();
		GeneratedPrefabInstantiationResult generatedPrefabInstantiationResult = new GeneratedPrefabInstantiationResult(mainAgentControllerEquipDrop__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentControllerEquipDropVM);
		GeneratedGauntletMovie data2 = new GeneratedGauntletMovie("MainAgentControllerEquipDrop", mainAgentControllerEquipDrop__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentControllerEquipDropVM);
		object obj = data["DataSource"];
		mainAgentControllerEquipDrop__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentControllerEquipDropVM.SetDataSource((MissionMainAgentControllerEquipDropVM)obj);
		generatedPrefabInstantiationResult.AddData("Movie", data2);
		return generatedPrefabInstantiationResult;
	}

	public void CollectGeneratedPrefabDefinitions(GeneratedPrefabContext generatedPrefabContext)
	{
		generatedPrefabContext.AddGeneratedPrefab("SPChatLog", "TaleWorlds.MountAndBlade.ViewModelCollection.Multiplayer.MPChatVM", CreateSPChatLog__TaleWorlds_MountAndBlade_ViewModelCollection_Multiplayer_MPChatVM);
		generatedPrefabContext.AddGeneratedPrefab("OrderRadial", "TaleWorlds.MountAndBlade.ViewModelCollection.Order.MissionOrderVM", CreateOrderRadial__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM);
		generatedPrefabContext.AddGeneratedPrefab("OrderBar", "TaleWorlds.MountAndBlade.ViewModelCollection.Order.MissionOrderVM", CreateOrderBar__TaleWorlds_MountAndBlade_ViewModelCollection_Order_MissionOrderVM);
		generatedPrefabContext.AddGeneratedPrefab("CreditsScreen", "TaleWorlds.MountAndBlade.ViewModelCollection.Credits.CreditsVM", CreateCreditsScreen__TaleWorlds_MountAndBlade_ViewModelCollection_Credits_CreditsVM);
		generatedPrefabContext.AddGeneratedPrefab("SingleplayerKillfeed", "TaleWorlds.MountAndBlade.ViewModelCollection.HUD.KillFeed.SPKillFeedVM", CreateSingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM);
		generatedPrefabContext.AddGeneratedPrefab("MainAgentCheerBarkController", "TaleWorlds.MountAndBlade.ViewModelCollection.HUD.MissionMainAgentCheerBarkControllerVM", CreateMainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM);
		generatedPrefabContext.AddGeneratedPrefab("PropertyBasedTooltip", "TaleWorlds.Core.ViewModelCollection.Information.PropertyBasedTooltipVM", CreatePropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM);
		generatedPrefabContext.AddGeneratedPrefab("TextQueryPopup", "TaleWorlds.MountAndBlade.ViewModelCollection.Inquiries.TextQueryPopUpVM", CreateTextQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_TextQueryPopUpVM);
		generatedPrefabContext.AddGeneratedPrefab("MultiSelectionQueryPopup", "TaleWorlds.MountAndBlade.ViewModelCollection.Inquiries.MultiSelectionQueryPopUpVM", CreateMultiSelectionQueryPopup__TaleWorlds_MountAndBlade_ViewModelCollection_Inquiries_MultiSelectionQueryPopUpVM);
		generatedPrefabContext.AddGeneratedPrefab("MainAgentControllerEquipDrop", "TaleWorlds.MountAndBlade.ViewModelCollection.HUD.MissionMainAgentControllerEquipDropVM", CreateMainAgentControllerEquipDrop__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentControllerEquipDropVM);
	}
}
