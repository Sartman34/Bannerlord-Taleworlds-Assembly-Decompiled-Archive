using System.ComponentModel;
using System.Numerics;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Mission.KillFeed.General;
using TaleWorlds.MountAndBlade.ViewModelCollection.HUD.KillFeed.General;

namespace TaleWorlds.MountAndBlade.GauntletUI.AutoGenerated0;

public class SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate : SingleplayerGeneralKillFeedItemWidget
{
	private SingleplayerGeneralKillFeedItemWidget _widget;

	private Widget _widget_0;

	private ListPanel _widget_0_0;

	private Widget _widget_0_0_0;

	private Widget _widget_0_0_0_0;

	private AutoHideTextWidget _widget_0_0_1;

	private Widget _widget_0_0_2;

	private AutoHideTextWidget _widget_0_0_3;

	private Widget _widget_0_0_4;

	private Widget _widget_0_0_4_0;

	private SPGeneralKillNotificationItemVM _datasource_Root;

	public SingleplayerKillfeed__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_KillFeed_SPKillFeedVM_Dependency_1_ItemTemplate(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new Widget(base.Context);
		_widget.AddChild(_widget_0);
		_widget_0_0 = new ListPanel(base.Context);
		_widget_0.AddChild(_widget_0_0);
		_widget_0_0_0 = new Widget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_0);
		_widget_0_0_0_0 = new Widget(base.Context);
		_widget_0_0_0.AddChild(_widget_0_0_0_0);
		_widget_0_0_1 = new AutoHideTextWidget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_1);
		_widget_0_0_2 = new Widget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_2);
		_widget_0_0_3 = new AutoHideTextWidget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_3);
		_widget_0_0_4 = new Widget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_4);
		_widget_0_0_4_0 = new Widget(base.Context);
		_widget_0_0_4.AddChild(_widget_0_0_4_0);
	}

	public void SetIds()
	{
		_widget_0.Id = "BackgroundWidget";
		_widget_0_0.Id = "ItemContainer";
		_widget_0_0_0.Id = "MurdererTypeBackgroundWidget";
		_widget_0_0_0_0.Id = "MurdererTypeWidget";
		_widget_0_0_1.Id = "MurdererNameWidget";
		_widget_0_0_2.Id = "ActionIconWidget";
		_widget_0_0_3.Id = "VictimNameWidget";
		_widget_0_0_4.Id = "VictimTypeBackgroundWidget";
		_widget_0_0_4_0.Id = "VictimTypeWidget";
	}

	public void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.CoverChildren;
		base.HeightSizePolicy = SizePolicy.Fixed;
		base.SuggestedHeight = 29f;
		base.HorizontalAlignment = HorizontalAlignment.Right;
		base.VictimTypeWidget = _widget_0_0_4;
		base.MurdererTypeWidget = _widget_0_0_0;
		base.ActionIconWidget = _widget_0_0_2;
		base.BackgroundWidget = _widget_0;
		base.VictimNameWidget = _widget_0_0_3;
		base.MurdererNameWidget = _widget_0_0_1;
		_widget_0.Sprite = base.Context.SpriteData.GetSprite("BlankWhiteSquare");
		_widget_0.AlphaFactor = 0.5f;
		_widget_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0.SuggestedHeight = 29f;
		_widget_0.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_0.Sprite = base.Context.SpriteData.GetSprite("MPHud\\class_icon_bg");
		_widget_0_0_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0.SuggestedHeight = 38f;
		_widget_0_0_0.SuggestedWidth = 38f;
		_widget_0_0_0.AlphaFactor = 0.5f;
		_widget_0_0_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0_0.MarginLeft = 10f;
		_widget_0_0_0.MarginRight = 10f;
		_widget_0_0_0_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0_0.SuggestedHeight = 38f;
		_widget_0_0_0_0.SuggestedWidth = 38f;
		_widget_0_0_0_0.AlphaFactor = 0.9f;
		_widget_0_0_0_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_0_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0_0_0.MarginLeft = 10f;
		_widget_0_0_0_0.MarginRight = 10f;
		_widget_0_0_1.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_1.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_1.Brush = base.Context.GetBrush("SPHUD.KillFeed.Text");
		_widget_0_0_2.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_2.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_2.SuggestedHeight = 27f;
		_widget_0_0_2.SuggestedWidth = 29f;
		_widget_0_0_2.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_2.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0_2.MarginLeft = 10f;
		_widget_0_0_2.MarginRight = 10f;
		_widget_0_0_2.Sprite = base.Context.SpriteData.GetSprite("General\\Mission\\PersonalKillfeed\\kill_feed_skull");
		_widget_0_0_3.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_3.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_3.Brush = base.Context.GetBrush("SPHUD.KillFeed.Text");
		_widget_0_0_4.Sprite = base.Context.SpriteData.GetSprite("MPHud\\class_icon_bg");
		_widget_0_0_4.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_4.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_4.SuggestedHeight = 38f;
		_widget_0_0_4.SuggestedWidth = 38f;
		_widget_0_0_4.AlphaFactor = 0.5f;
		_widget_0_0_4.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_4.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0_4.MarginLeft = 10f;
		_widget_0_0_4.MarginRight = 10f;
		_widget_0_0_4_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_4_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_4_0.SuggestedHeight = 38f;
		_widget_0_0_4_0.SuggestedWidth = 38f;
		_widget_0_0_4_0.AlphaFactor = 0.9f;
		_widget_0_0_4_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_4_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0_4_0.MarginLeft = 10f;
		_widget_0_0_4_0.MarginRight = 10f;
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.EventFire -= EventListenerOf_widget;
			_widget.PropertyChanged -= PropertyChangedListenerOf_widget;
			_widget.boolPropertyChanged -= boolPropertyChangedListenerOf_widget;
			_widget.floatPropertyChanged -= floatPropertyChangedListenerOf_widget;
			_widget.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget;
			_widget.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget;
			_widget.doublePropertyChanged -= doublePropertyChangedListenerOf_widget;
			_widget.intPropertyChanged -= intPropertyChangedListenerOf_widget;
			_widget.uintPropertyChanged -= uintPropertyChangedListenerOf_widget;
			_widget.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget;
			_datasource_Root = null;
		}
	}

	public void SetDataSource(SPGeneralKillNotificationItemVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void EventListenerOf_widget(Widget widget, string commandName, object[] args)
	{
		if (commandName == "OnRemove")
		{
			_datasource_Root.ExecuteRemove();
		}
	}

	private void PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void intPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget(string propertyName)
	{
		if (propertyName == "Message")
		{
			_datasource_Root.Message = _widget.Message;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		if (propertyName == "Message")
		{
			_widget.Message = _datasource_Root.Message;
		}
	}

	private void RefreshDataSource_datasource_Root(SPGeneralKillNotificationItemVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.EventFire -= EventListenerOf_widget;
			_widget.PropertyChanged -= PropertyChangedListenerOf_widget;
			_widget.boolPropertyChanged -= boolPropertyChangedListenerOf_widget;
			_widget.floatPropertyChanged -= floatPropertyChangedListenerOf_widget;
			_widget.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget;
			_widget.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget;
			_widget.doublePropertyChanged -= doublePropertyChangedListenerOf_widget;
			_widget.intPropertyChanged -= intPropertyChangedListenerOf_widget;
			_widget.uintPropertyChanged -= uintPropertyChangedListenerOf_widget;
			_widget.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget;
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.Message = _datasource_Root.Message;
			_widget.EventFire += EventListenerOf_widget;
			_widget.PropertyChanged += PropertyChangedListenerOf_widget;
			_widget.boolPropertyChanged += boolPropertyChangedListenerOf_widget;
			_widget.floatPropertyChanged += floatPropertyChangedListenerOf_widget;
			_widget.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget;
			_widget.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget;
			_widget.doublePropertyChanged += doublePropertyChangedListenerOf_widget;
			_widget.intPropertyChanged += intPropertyChangedListenerOf_widget;
			_widget.uintPropertyChanged += uintPropertyChangedListenerOf_widget;
			_widget.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget;
		}
	}
}
