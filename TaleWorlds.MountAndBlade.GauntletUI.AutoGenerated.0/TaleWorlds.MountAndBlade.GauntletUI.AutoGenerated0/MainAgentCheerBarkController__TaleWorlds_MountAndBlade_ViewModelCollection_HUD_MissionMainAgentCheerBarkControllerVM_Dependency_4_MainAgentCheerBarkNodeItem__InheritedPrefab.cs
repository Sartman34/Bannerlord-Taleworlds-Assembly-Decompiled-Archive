using System.ComponentModel;
using System.Numerics;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Mission.Radial;
using TaleWorlds.MountAndBlade.ViewModelCollection.HUD;

namespace TaleWorlds.MountAndBlade.GauntletUI.AutoGenerated0;

public class MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_4_MainAgentCheerBarkNodeItem__InheritedPrefab : Widget
{
	private Widget _widget;

	private Widget _widget_0;

	private Widget _widget_0_0;

	private Widget _widget_0_0_0;

	private MissionRadialCircleActionSelectorWidget _widget_0_0_1;

	private TextWidget _widget_0_0_2;

	private MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_6_MainAgentCheerBarkNodeCircle__DependendPrefab _widget_1;

	private CheerBarkNodeItemVM _datasource_Root;

	private MBBindingList<CheerBarkNodeItemVM> _datasource_Root_SubNodes;

	public MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_4_MainAgentCheerBarkNodeItem__InheritedPrefab(UIContext context)
		: base(context)
	{
	}

	private VisualDefinition CreateVisualDefinitionCircleBackground()
	{
		VisualDefinition visualDefinition = new VisualDefinition("CircleBackground", 0.15f, 0f, easeIn: false);
		visualDefinition.AddVisualState(new VisualState("DisabledSelected")
		{
			SuggestedHeight = 84f,
			SuggestedWidth = 85f
		});
		visualDefinition.AddVisualState(new VisualState("Selected")
		{
			SuggestedHeight = 84f,
			SuggestedWidth = 85f
		});
		visualDefinition.AddVisualState(new VisualState("Default")
		{
			SuggestedHeight = 74f,
			SuggestedWidth = 75f
		});
		visualDefinition.AddVisualState(new VisualState("Pressed")
		{
			SuggestedHeight = 74f,
			SuggestedWidth = 75f
		});
		visualDefinition.AddVisualState(new VisualState("Hovered")
		{
			SuggestedHeight = 74f,
			SuggestedWidth = 75f
		});
		visualDefinition.AddVisualState(new VisualState("Disabled")
		{
			SuggestedHeight = 74f,
			SuggestedWidth = 75f
		});
		return visualDefinition;
	}

	private VisualDefinition CreateVisualDefinitionCircleGlow()
	{
		VisualDefinition visualDefinition = new VisualDefinition("CircleGlow", 0.15f, 0f, easeIn: false);
		visualDefinition.AddVisualState(new VisualState("DisabledSelected")
		{
			SuggestedHeight = 125f,
			SuggestedWidth = 127f
		});
		visualDefinition.AddVisualState(new VisualState("Selected")
		{
			SuggestedHeight = 125f,
			SuggestedWidth = 127f
		});
		visualDefinition.AddVisualState(new VisualState("Default")
		{
			SuggestedHeight = 115f,
			SuggestedWidth = 117f
		});
		visualDefinition.AddVisualState(new VisualState("Pressed")
		{
			SuggestedHeight = 115f,
			SuggestedWidth = 117f
		});
		visualDefinition.AddVisualState(new VisualState("Hovered")
		{
			SuggestedHeight = 115f,
			SuggestedWidth = 117f
		});
		visualDefinition.AddVisualState(new VisualState("Disabled")
		{
			SuggestedHeight = 115f,
			SuggestedWidth = 117f
		});
		return visualDefinition;
	}

	public virtual void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new Widget(base.Context);
		_widget.AddChild(_widget_0);
		_widget_0_0 = new Widget(base.Context);
		_widget_0.AddChild(_widget_0_0);
		_widget_0_0_0 = new Widget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_0);
		_widget_0_0_1 = new MissionRadialCircleActionSelectorWidget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_1);
		_widget_0_0_2 = new TextWidget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_2);
		_widget_1 = new MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_6_MainAgentCheerBarkNodeCircle__DependendPrefab(base.Context);
		_widget.AddChild(_widget_1);
		_widget_1.CreateWidgets();
	}

	public virtual void SetIds()
	{
		_widget_0_0.Id = "ActionContainer";
		_widget_1.SetIds();
	}

	public virtual void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.StretchToParent;
		base.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_0.PositionYOffset = -230f;
		_widget_0_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0.SuggestedWidth = 200f;
		_widget_0_0.SuggestedHeight = 200f;
		_widget_0_0_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_0.SuggestedWidth = 459f;
		_widget_0_0_0.SuggestedHeight = 459f;
		_widget_0_0_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0_0.Sprite = base.Context.SpriteData.GetSprite("RadialMenu\\radial_menu_bg");
		_widget_0_0_0.Color = new Color(0f, 0f, 0f, 0.4666667f);
		_widget_0_0_1.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_1.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_1.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_0_0_1.DistanceFromCenterModifier = 160f;
		_widget_0_0_2.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_2.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_2.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_2.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0_2.Brush = base.Context.GetBrush("Mission.CheerBark.Item.Text");
		_widget_0_0_2.PositionYOffset = 20f;
		_widget_0_0_2.ClipContents = false;
		_widget_1.SetAttributes();
		_widget_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1.VerticalAlignment = VerticalAlignment.Bottom;
	}

	public virtual void DestroyDataSource()
	{
		if (_datasource_Root == null)
		{
			return;
		}
		_widget_1.DestroyDataSource();
		_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_0.PropertyChanged -= PropertyChangedListenerOf_widget_0;
		_widget_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0;
		_widget_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0;
		_widget_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0;
		_widget_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0;
		_widget_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0;
		_widget_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0;
		_widget_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0;
		_widget_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0;
		_widget_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0;
		_widget_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0;
		_widget_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0;
		_widget_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0;
		_widget_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0;
		_widget_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0;
		_widget_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0;
		_widget_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0;
		_widget_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0;
		_widget_0_0_2.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_2;
		_widget_0_0_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_2;
		_widget_0_0_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_2;
		_widget_0_0_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_2;
		_widget_0_0_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_2;
		_widget_0_0_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_2;
		_widget_0_0_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_2;
		_widget_0_0_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_2;
		_widget_0_0_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_2;
		if (_datasource_Root_SubNodes != null)
		{
			_datasource_Root_SubNodes.ListChanged -= OnList_datasource_Root_SubNodesChanged;
			for (int num = _widget_0_0_1.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_0_0_1.GetChild(num);
				((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate)child).OnBeforeRemovedChild(child);
				((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate)_widget_0_0_1.GetChild(num)).DestroyDataSource();
			}
			_datasource_Root_SubNodes = null;
		}
		_datasource_Root = null;
	}

	public virtual void SetDataSource(CheerBarkNodeItemVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0(string propertyName)
	{
		if (propertyName == "IsVisible")
		{
			_datasource_Root.IsSelected = _widget_0.IsVisible;
		}
	}

	private void PropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_0(string propertyName)
	{
		if (propertyName == "IsVisible")
		{
			_datasource_Root.HasSubNodes = _widget_0_0.IsVisible;
		}
	}

	private void PropertyChangedListenerOf_widget_0_0_2(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_2(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_0_0_2(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_2(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_0_0_2(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_2(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_0_0_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_2(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_0_0_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_2(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_0_0_2(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_2(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_0_0_2(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_2(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_0_0_2(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_2(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_0_0_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_0_0_2(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_0_0_2(string propertyName)
	{
		_ = propertyName == "Text";
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		switch (propertyName)
		{
		case "SubNodes":
			RefreshDataSource_datasource_Root_SubNodes(_datasource_Root.SubNodes);
			break;
		case "IsSelected":
			_widget_0.IsVisible = _datasource_Root.IsSelected;
			break;
		case "HasSubNodes":
			_widget_0_0.IsVisible = _datasource_Root.HasSubNodes;
			break;
		default:
			_ = propertyName == "SelectedCheerText";
			break;
		}
	}

	public void OnList_datasource_Root_SubNodesChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_0_0_1.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_0_0_1.GetChild(num);
				((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_0_0_1.GetChild(num);
				((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate)child4).SetDataSource(null);
				_widget_0_0_1.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_SubNodes.Count; i++)
			{
				CheerBarkNodeItemVM bindingObject = _datasource_Root_SubNodes[i];
				_widget_0_0_1.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate = new MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate);
			CheerBarkNodeItemVM dataSource = (CheerBarkNodeItemVM)(generatedWidgetData.Data = _datasource_Root_SubNodes[e.NewIndex]);
			mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_0_0_1.AddChildAtIndex(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate, e.NewIndex);
			mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate.CreateWidgets();
			mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate.SetIds();
			mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate.SetAttributes();
			mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_0_0_1.GetChild(e.NewIndex);
			((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_0_0_1.GetChild(e.NewIndex);
			((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate)child).SetDataSource(null);
			_widget_0_0_1.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(CheerBarkNodeItemVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_widget_1.SetDataSource(null);
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget_0.PropertyChanged -= PropertyChangedListenerOf_widget_0;
			_widget_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0;
			_widget_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0;
			_widget_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0;
			_widget_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0;
			_widget_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0;
			_widget_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0;
			_widget_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0;
			_widget_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0;
			_widget_0_0.PropertyChanged -= PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0;
			_widget_0_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0;
			_widget_0_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0;
			_widget_0_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0;
			_widget_0_0_2.PropertyChanged -= PropertyChangedListenerOf_widget_0_0_2;
			_widget_0_0_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_0_0_2;
			_widget_0_0_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_0_0_2;
			_widget_0_0_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_0_0_2;
			_widget_0_0_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_0_0_2;
			_widget_0_0_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_0_0_2;
			_widget_0_0_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_0_0_2;
			_widget_0_0_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_0_0_2;
			_widget_0_0_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_0_0_2;
			if (_datasource_Root_SubNodes != null)
			{
				_datasource_Root_SubNodes.ListChanged -= OnList_datasource_Root_SubNodesChanged;
				for (int num = _widget_0_0_1.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_0_0_1.GetChild(num);
					((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_0_0_1.GetChild(num);
					((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate)child2).SetDataSource(null);
					_widget_0_0_1.RemoveChild(child2);
				}
				_datasource_Root_SubNodes = null;
			}
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_0.IsVisible = _datasource_Root.IsSelected;
		_widget_0.PropertyChanged += PropertyChangedListenerOf_widget_0;
		_widget_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0;
		_widget_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0;
		_widget_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0;
		_widget_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0;
		_widget_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0;
		_widget_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0;
		_widget_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0;
		_widget_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0;
		_widget_0_0.IsVisible = _datasource_Root.HasSubNodes;
		_widget_0_0.PropertyChanged += PropertyChangedListenerOf_widget_0_0;
		_widget_0_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0;
		_widget_0_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0;
		_widget_0_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0;
		_widget_0_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0;
		_widget_0_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0;
		_widget_0_0.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0;
		_widget_0_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0;
		_widget_0_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0;
		_widget_0_0_2.PropertyChanged += PropertyChangedListenerOf_widget_0_0_2;
		_widget_0_0_2.boolPropertyChanged += boolPropertyChangedListenerOf_widget_0_0_2;
		_widget_0_0_2.floatPropertyChanged += floatPropertyChangedListenerOf_widget_0_0_2;
		_widget_0_0_2.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_0_0_2;
		_widget_0_0_2.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_0_0_2;
		_widget_0_0_2.doublePropertyChanged += doublePropertyChangedListenerOf_widget_0_0_2;
		_widget_0_0_2.intPropertyChanged += intPropertyChangedListenerOf_widget_0_0_2;
		_widget_0_0_2.uintPropertyChanged += uintPropertyChangedListenerOf_widget_0_0_2;
		_widget_0_0_2.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_0_0_2;
		_datasource_Root_SubNodes = _datasource_Root.SubNodes;
		if (_datasource_Root_SubNodes != null)
		{
			_datasource_Root_SubNodes.ListChanged += OnList_datasource_Root_SubNodesChanged;
			for (int i = 0; i < _datasource_Root_SubNodes.Count; i++)
			{
				MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate = new MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate);
				CheerBarkNodeItemVM dataSource = (CheerBarkNodeItemVM)(generatedWidgetData.Data = _datasource_Root_SubNodes[i]);
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0_0_1.AddChildAtIndex(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate, i);
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate.CreateWidgets();
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate.SetIds();
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate.SetAttributes();
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate.SetDataSource(dataSource);
			}
		}
		_widget_1.SetDataSource(_datasource_Root);
	}

	private void RefreshDataSource_datasource_Root_SubNodes(MBBindingList<CheerBarkNodeItemVM> newDataSource)
	{
		if (_datasource_Root_SubNodes != null)
		{
			_datasource_Root_SubNodes.ListChanged -= OnList_datasource_Root_SubNodesChanged;
			for (int num = _widget_0_0_1.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_0_0_1.GetChild(num);
				((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_0_0_1.GetChild(num);
				((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate)child2).SetDataSource(null);
				_widget_0_0_1.RemoveChild(child2);
			}
			_datasource_Root_SubNodes = null;
		}
		_datasource_Root_SubNodes = newDataSource;
		_datasource_Root_SubNodes = _datasource_Root.SubNodes;
		if (_datasource_Root_SubNodes != null)
		{
			_datasource_Root_SubNodes.ListChanged += OnList_datasource_Root_SubNodesChanged;
			for (int i = 0; i < _datasource_Root_SubNodes.Count; i++)
			{
				MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate = new MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate);
				CheerBarkNodeItemVM dataSource = (CheerBarkNodeItemVM)(generatedWidgetData.Data = _datasource_Root_SubNodes[i]);
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0_0_1.AddChildAtIndex(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate, i);
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate.CreateWidgets();
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate.SetIds();
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate.SetAttributes();
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_5_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}
}
