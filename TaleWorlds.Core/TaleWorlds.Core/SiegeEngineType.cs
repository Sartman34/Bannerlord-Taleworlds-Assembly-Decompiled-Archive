using System;
using System.Collections.Generic;
using System.Xml;
using TaleWorlds.Localization;
using TaleWorlds.ObjectSystem;

namespace TaleWorlds.Core;

public sealed class SiegeEngineType : MBObjectBase
{
	public int Difficulty { get; private set; }

	public int BaseHitPoints { get; private set; }

	public int ToolCost { get; private set; }

	public float HitChance { get; private set; }

	public bool IsAntiPersonnel { get; private set; }

	public float AntiPersonnelHitChance { get; private set; }

	public bool IsConstructible { get; private set; }

	public bool IsRanged { get; private set; }

	public int Damage { get; private set; }

	public int ManDayCost { get; private set; }

	public float CampaignRateOfFirePerDay { get; private set; }

	public float MovementSpeed { get; private set; }

	public float ProjectileSpeed { get; private set; }

	public TextObject Name { get; private set; }

	public TextObject Description { get; private set; }

	internal static void AutoGeneratedStaticCollectObjectsSiegeEngineType(object o, List<object> collectedObjects)
	{
		((SiegeEngineType)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
	}

	protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
	{
		base.AutoGeneratedInstanceCollectObjects(collectedObjects);
	}

	public override string ToString()
	{
		return Name.ToString();
	}

	public override void Deserialize(MBObjectManager objectManager, XmlNode node)
	{
		base.Deserialize(objectManager, node);
		Name = new TextObject(node.Attributes["name"].InnerText);
		Description = new TextObject(node.Attributes["description"].InnerText);
		XmlAttribute xmlAttribute = node.Attributes["max_hit_points"];
		if (xmlAttribute != null)
		{
			BaseHitPoints = Convert.ToInt32(xmlAttribute.Value);
		}
		else
		{
			BaseHitPoints = 1;
		}
		Difficulty = Convert.ToInt32(node.Attributes["difficulty"]?.Value);
		ToolCost = Convert.ToInt32(node.Attributes["tool_cost"].Value);
		HitChance = (float)Convert.ToDouble(node.Attributes["hit_chance"].Value);
		IsAntiPersonnel = Convert.ToBoolean(node.Attributes["is_anti_personnel"].Value);
		AntiPersonnelHitChance = (IsAntiPersonnel ? ((float)Convert.ToDouble(node.Attributes["anti_personnel_hit_chance"].Value)) : 0f);
		IsConstructible = Convert.ToBoolean(node.Attributes["is_constructible"].Value);
		IsRanged = Convert.ToBoolean(node.Attributes["is_ranged"].Value);
		Damage = Convert.ToInt32(node.Attributes["damage"].Value);
		ManDayCost = Convert.ToInt32(node.Attributes["man_day_cost"].Value);
		CampaignRateOfFirePerDay = (float)Convert.ToDouble(node.Attributes["campaign_rate_of_fire_per_day"].Value);
		MovementSpeed = (float)Convert.ToDouble(node.Attributes["movement_speed"].Value);
		ProjectileSpeed = (float)Convert.ToDouble(node.Attributes["projectile_speed"].Value);
	}
}
