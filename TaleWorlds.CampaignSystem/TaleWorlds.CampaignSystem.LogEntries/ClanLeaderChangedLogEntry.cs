using System.Collections.Generic;
using Helpers;
using TaleWorlds.Localization;
using TaleWorlds.ObjectSystem;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.LogEntries;

public class ClanLeaderChangedLogEntry : LogEntry, IEncyclopediaLog
{
	[SaveableField(160)]
	public readonly Hero OldLeader;

	[SaveableField(161)]
	public readonly Hero NewLeader;

	internal static void AutoGeneratedStaticCollectObjectsClanLeaderChangedLogEntry(object o, List<object> collectedObjects)
	{
		((ClanLeaderChangedLogEntry)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
	}

	protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
	{
		base.AutoGeneratedInstanceCollectObjects(collectedObjects);
		collectedObjects.Add(OldLeader);
		collectedObjects.Add(NewLeader);
	}

	internal static object AutoGeneratedGetMemberValueOldLeader(object o)
	{
		return ((ClanLeaderChangedLogEntry)o).OldLeader;
	}

	internal static object AutoGeneratedGetMemberValueNewLeader(object o)
	{
		return ((ClanLeaderChangedLogEntry)o).NewLeader;
	}

	public ClanLeaderChangedLogEntry(Hero oldLeader, Hero newLeader)
	{
		OldLeader = oldLeader;
		NewLeader = newLeader;
	}

	public override string ToString()
	{
		return GetEncyclopediaText().ToString();
	}

	public bool IsVisibleInEncyclopediaPageOf<T>(T obj) where T : MBObjectBase
	{
		if (obj != OldLeader && obj != NewLeader)
		{
			return obj == NewLeader.Clan;
		}
		return true;
	}

	public TextObject GetEncyclopediaText()
	{
		TextObject textObject = new TextObject("{=o69PZuce}{OLD_LEADER.LINK} is no longer the head of the {CLAN_NAME}. {NEW_LEADER.LINK} has taken over as ruler of the clan.");
		textObject.SetTextVariable("CLAN_NAME", NewLeader.Clan.EncyclopediaLinkWithName);
		StringHelpers.SetCharacterProperties("OLD_LEADER", OldLeader.CharacterObject, textObject);
		StringHelpers.SetCharacterProperties("NEW_LEADER", NewLeader.CharacterObject, textObject);
		return textObject;
	}
}
