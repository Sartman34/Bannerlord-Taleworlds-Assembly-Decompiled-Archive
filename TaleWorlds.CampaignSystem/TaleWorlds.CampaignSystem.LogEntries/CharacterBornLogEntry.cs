using System.Collections.Generic;
using Helpers;
using TaleWorlds.Core;
using TaleWorlds.Localization;
using TaleWorlds.ObjectSystem;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.LogEntries;

public class CharacterBornLogEntry : LogEntry, IEncyclopediaLog, IChatNotification
{
	[SaveableField(100)]
	public readonly Hero BornCharacter;

	public bool IsVisibleNotification => true;

	public override CampaignTime KeepInHistoryTime => CampaignTime.Years(Campaign.Current.Models.AgeModel.BecomeOldAge / 2);

	public override ChatNotificationType NotificationType => PoliticalNotification(BornCharacter.Clan);

	internal static void AutoGeneratedStaticCollectObjectsCharacterBornLogEntry(object o, List<object> collectedObjects)
	{
		((CharacterBornLogEntry)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
	}

	protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
	{
		base.AutoGeneratedInstanceCollectObjects(collectedObjects);
		collectedObjects.Add(BornCharacter);
	}

	internal static object AutoGeneratedGetMemberValueBornCharacter(object o)
	{
		return ((CharacterBornLogEntry)o).BornCharacter;
	}

	public CharacterBornLogEntry(Hero bornCharacter)
	{
		BornCharacter = bornCharacter;
	}

	public override string ToString()
	{
		return GetEncyclopediaText().ToString();
	}

	public TextObject GetNotificationText()
	{
		return GetEncyclopediaText();
	}

	public bool IsVisibleInEncyclopediaPageOf<T>(T obj) where T : MBObjectBase
	{
		return obj == BornCharacter;
	}

	public TextObject GetEncyclopediaText()
	{
		TextObject textObject = GameTexts.FindText("str_notification_character_born");
		StringHelpers.SetCharacterProperties("HERO", BornCharacter.CharacterObject, textObject);
		StringHelpers.SetCharacterProperties("MOTHER", BornCharacter.Mother.CharacterObject, textObject);
		StringHelpers.SetCharacterProperties("FATHER", BornCharacter.Father.CharacterObject, textObject);
		return textObject;
	}
}
