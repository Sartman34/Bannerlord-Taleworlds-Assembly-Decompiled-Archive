using System.Collections.Generic;
using System.Xml;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.Localization;
using TaleWorlds.ObjectSystem;

namespace TaleWorlds.CampaignSystem;

public class Concept : MBObjectBase
{
	public TextObject Title { get; set; }

	public TextObject Description { get; set; }

	public string FilterGroup { get; set; }

	public string LinkID { get; private set; }

	public static MBReadOnlyList<Concept> All => Campaign.Current.Concepts;

	public string EncyclopediaLink => Campaign.Current.EncyclopediaManager.GetIdentifier(typeof(Concept)) + "-" + base.StringId;

	public TextObject EncyclopediaLinkWithName => HyperlinkTexts.GetConceptHyperlinkText(EncyclopediaLink, Title);

	internal static void AutoGeneratedStaticCollectObjectsConcept(object o, List<object> collectedObjects)
	{
		((Concept)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
	}

	protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
	{
		base.AutoGeneratedInstanceCollectObjects(collectedObjects);
	}

	public override void Deserialize(MBObjectManager objectManager, XmlNode node)
	{
		base.Deserialize(objectManager, node);
		Title = new TextObject(node.Attributes["title"].Value);
		Description = new TextObject(node.Attributes["text"].Value);
		FilterGroup = ((node.Attributes["group"] != null) ? node.Attributes["group"].Value : "");
		LinkID = node.Attributes["link_id"].Value;
	}

	public static bool IsGroupMember(string groupName, Concept c)
	{
		return c.FilterGroup == groupName;
	}

	public static void SetConceptTextLinks()
	{
		foreach (Concept item in All)
		{
			MBTextManager.SetTextVariable(item.LinkID, item.EncyclopediaLinkWithName);
		}
	}
}
