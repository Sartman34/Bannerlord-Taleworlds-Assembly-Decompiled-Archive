using System.Collections.Generic;
using TaleWorlds.Core;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.MapNotificationTypes;

public class KingdomDestroyedMapNotification : InformationData
{
	public override TextObject TitleText => new TextObject("{=QFKK1H4U}Kingdom Destroyed");

	public override string SoundEventPath => string.Empty;

	[SaveableProperty(1)]
	public Kingdom DestroyedKingdom { get; private set; }

	[SaveableProperty(2)]
	public CampaignTime CreationTime { get; private set; }

	internal static void AutoGeneratedStaticCollectObjectsKingdomDestroyedMapNotification(object o, List<object> collectedObjects)
	{
		((KingdomDestroyedMapNotification)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
	}

	protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
	{
		base.AutoGeneratedInstanceCollectObjects(collectedObjects);
		collectedObjects.Add(DestroyedKingdom);
		CampaignTime.AutoGeneratedStaticCollectObjectsCampaignTime(CreationTime, collectedObjects);
	}

	internal static object AutoGeneratedGetMemberValueDestroyedKingdom(object o)
	{
		return ((KingdomDestroyedMapNotification)o).DestroyedKingdom;
	}

	internal static object AutoGeneratedGetMemberValueCreationTime(object o)
	{
		return ((KingdomDestroyedMapNotification)o).CreationTime;
	}

	public KingdomDestroyedMapNotification(Kingdom destroyedKingdom, CampaignTime creationTime)
		: base(new TextObject("{=b5paUJjG}{NAME} is no more").SetTextVariable("NAME", destroyedKingdom.Name))
	{
		DestroyedKingdom = destroyedKingdom;
		CreationTime = creationTime;
	}
}
