using System.Collections.Generic;
using TaleWorlds.Core;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.MapNotificationTypes;

public class MarriageMapNotification : InformationData
{
	public override TextObject TitleText => new TextObject("{=bJZJI867}Marriage");

	public override string SoundEventPath => "event:/ui/notification/marriage";

	[SaveableProperty(1)]
	public Hero Suitor { get; private set; }

	[SaveableProperty(2)]
	public Hero Maiden { get; private set; }

	[SaveableProperty(3)]
	public CampaignTime CreationTime { get; private set; }

	internal static void AutoGeneratedStaticCollectObjectsMarriageMapNotification(object o, List<object> collectedObjects)
	{
		((MarriageMapNotification)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
	}

	protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
	{
		base.AutoGeneratedInstanceCollectObjects(collectedObjects);
		collectedObjects.Add(Suitor);
		collectedObjects.Add(Maiden);
		CampaignTime.AutoGeneratedStaticCollectObjectsCampaignTime(CreationTime, collectedObjects);
	}

	internal static object AutoGeneratedGetMemberValueSuitor(object o)
	{
		return ((MarriageMapNotification)o).Suitor;
	}

	internal static object AutoGeneratedGetMemberValueMaiden(object o)
	{
		return ((MarriageMapNotification)o).Maiden;
	}

	internal static object AutoGeneratedGetMemberValueCreationTime(object o)
	{
		return ((MarriageMapNotification)o).CreationTime;
	}

	public MarriageMapNotification(Hero firstHero, Hero secondHero, TextObject descriptionText, CampaignTime creationTime)
		: base(descriptionText)
	{
		Suitor = (firstHero.IsFemale ? secondHero : firstHero);
		Maiden = (firstHero.IsFemale ? firstHero : secondHero);
		CreationTime = creationTime;
	}
}
