using System.Collections.Generic;
using TaleWorlds.CampaignSystem.Party;
using TaleWorlds.CampaignSystem.Settlements;
using TaleWorlds.CampaignSystem.Siege;
using TaleWorlds.Core;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.MapNotificationTypes;

public class SettlementUnderSiegeMapNotification : InformationData
{
	public override TextObject TitleText => new TextObject("{=siegeevent}Siege");

	public override string SoundEventPath => "event:/ui/notification/settlement_under_siege";

	[SaveableProperty(10)]
	public MobileParty BesiegerParty { get; private set; }

	[SaveableProperty(20)]
	public Settlement BesiegedSettlement { get; private set; }

	internal static void AutoGeneratedStaticCollectObjectsSettlementUnderSiegeMapNotification(object o, List<object> collectedObjects)
	{
		((SettlementUnderSiegeMapNotification)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
	}

	protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
	{
		base.AutoGeneratedInstanceCollectObjects(collectedObjects);
		collectedObjects.Add(BesiegerParty);
		collectedObjects.Add(BesiegedSettlement);
	}

	internal static object AutoGeneratedGetMemberValueBesiegerParty(object o)
	{
		return ((SettlementUnderSiegeMapNotification)o).BesiegerParty;
	}

	internal static object AutoGeneratedGetMemberValueBesiegedSettlement(object o)
	{
		return ((SettlementUnderSiegeMapNotification)o).BesiegedSettlement;
	}

	public SettlementUnderSiegeMapNotification(SiegeEvent siegeEvent, TextObject descriptionText)
		: base(descriptionText)
	{
		BesiegerParty = siegeEvent.BesiegerCamp.LeaderParty;
		BesiegedSettlement = siegeEvent.BesiegedSettlement;
	}
}
