using System;
using System.Collections.Generic;
using System.Linq;
using System.Xml;
using TaleWorlds.Core;
using TaleWorlds.ObjectSystem;

namespace TaleWorlds.CampaignSystem.CharacterDevelopment;

public class CharacterPerks : PropertyOwner<PerkObject>
{
	internal static void AutoGeneratedStaticCollectObjectsCharacterPerks(object o, List<object> collectedObjects)
	{
		((CharacterPerks)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
	}

	protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
	{
		base.AutoGeneratedInstanceCollectObjects(collectedObjects);
	}

	public CharacterPerks()
	{
	}

	public CharacterPerks(CharacterPerks perks)
		: base((PropertyOwner<PerkObject>)perks)
	{
	}

	public void ClearChangedPerks(Hero owner)
	{
		foreach (PerkObject item in _attributes.Keys.ToList())
		{
			if (item == null || item.IsTrash || (float)owner.GetSkillValue(item.Skill) < item.RequiredSkillValue)
			{
				SetPropertyValue(item, 0);
			}
		}
	}

	public override void Deserialize(MBObjectManager objectManager, XmlNode node)
	{
		Initialize();
		foreach (XmlNode childNode in node.ChildNodes)
		{
			if (childNode.NodeType != XmlNodeType.Comment)
			{
				XmlAttributeCollection attributes = childNode.Attributes;
				string value = attributes["id"].Value;
				string value2 = attributes["value"].Value;
				PerkObject @object = Game.Current.ObjectManager.GetObject<PerkObject>(value);
				if (@object != null)
				{
					int value3 = ((value2 == null) ? 1 : Convert.ToInt32(value2));
					SetPropertyValue(@object, value3);
				}
			}
		}
		foreach (XmlNode childNode2 in node.ChildNodes)
		{
			string text = childNode2.Name;
			int value4 = 1;
			if (text == "Perk")
			{
				text = null;
				if (childNode2.Attributes != null)
				{
					XmlAttribute xmlAttribute = childNode2.Attributes["id"];
					if (xmlAttribute != null)
					{
						text = xmlAttribute.InnerText;
					}
				}
			}
			if (text == null)
			{
				continue;
			}
			PerkObject object2 = Game.Current.ObjectManager.GetObject<PerkObject>(text);
			if (object2 != null)
			{
				XmlAttribute xmlAttribute2 = childNode2.Attributes["value"];
				if (xmlAttribute2 != null)
				{
					string value5 = xmlAttribute2.Value;
					value4 = ((value5 == null) ? 1 : Convert.ToInt32(value5));
				}
				SetPropertyValue(object2, value4);
			}
		}
	}
}
