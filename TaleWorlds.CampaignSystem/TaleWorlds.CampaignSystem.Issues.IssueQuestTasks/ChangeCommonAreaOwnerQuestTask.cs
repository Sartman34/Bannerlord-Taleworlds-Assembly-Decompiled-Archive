using System;
using System.Collections.Generic;
using TaleWorlds.CampaignSystem.Settlements;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Issues.IssueQuestTasks;

public class ChangeCommonAreaOwnerQuestTask : QuestTaskBase
{
	[SaveableField(20)]
	private readonly Alley _alley;

	[SaveableField(21)]
	private readonly Hero _newOwner;

	private readonly Action _onAlleyCapturedByPlayer;

	private readonly Action _onAlleyClearedButNotGivenToQuestGiver;

	private readonly Action _onAlleyGivenToTarget;

	internal static void AutoGeneratedStaticCollectObjectsChangeCommonAreaOwnerQuestTask(object o, List<object> collectedObjects)
	{
		((ChangeCommonAreaOwnerQuestTask)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
	}

	protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
	{
		base.AutoGeneratedInstanceCollectObjects(collectedObjects);
		collectedObjects.Add(_alley);
		collectedObjects.Add(_newOwner);
	}

	internal static object AutoGeneratedGetMemberValue_alley(object o)
	{
		return ((ChangeCommonAreaOwnerQuestTask)o)._alley;
	}

	internal static object AutoGeneratedGetMemberValue_newOwner(object o)
	{
		return ((ChangeCommonAreaOwnerQuestTask)o)._newOwner;
	}

	public ChangeCommonAreaOwnerQuestTask(Alley alley, Hero newOwner, Action onSucceededAction, Action onFailedAction, Action onCanceledAction, Action onAlleyCapturedByPlayer, Action onAlleyClearedButNotGivenToQuestGiver, DialogFlow dialogFlow = null)
		: base(dialogFlow, onSucceededAction, onFailedAction, onCanceledAction)
	{
		_alley = alley;
		_newOwner = newOwner;
		_onAlleyCapturedByPlayer = onAlleyCapturedByPlayer;
		_onAlleyClearedButNotGivenToQuestGiver = onAlleyClearedButNotGivenToQuestGiver;
		_onAlleyGivenToTarget = onSucceededAction;
	}

	public void OnCommonAreaOwnerChanged(Alley alley, Hero newOwner, Hero oldOwner)
	{
		if (_alley == alley)
		{
			if (_newOwner == newOwner && newOwner == Hero.MainHero)
			{
				Finish(FinishStates.Success);
			}
			else if (newOwner == Hero.MainHero && _onAlleyCapturedByPlayer != null)
			{
				_onAlleyCapturedByPlayer();
			}
		}
	}

	public override void SetReferences()
	{
		CampaignEvents.AlleyOwnerChanged.AddNonSerializedListener(this, OnCommonAreaOwnerChanged);
	}
}
