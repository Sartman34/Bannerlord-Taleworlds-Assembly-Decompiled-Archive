using System;
using System.Collections.Generic;
using System.Xml;
using TaleWorlds.Library;
using TaleWorlds.ObjectSystem;

namespace TaleWorlds.CampaignSystem.Party;

public sealed class PartyTemplateObject : MBObjectBase
{
	public MBList<PartyTemplateStack> Stacks;

	internal static void AutoGeneratedStaticCollectObjectsPartyTemplateObject(object o, List<object> collectedObjects)
	{
		((PartyTemplateObject)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
	}

	protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
	{
		base.AutoGeneratedInstanceCollectObjects(collectedObjects);
	}

	public override void Deserialize(MBObjectManager objectManager, XmlNode node)
	{
		Stacks = new MBList<PartyTemplateStack>();
		base.Deserialize(objectManager, node);
		foreach (XmlNode childNode in node.ChildNodes)
		{
			if (!(childNode.Name == "stacks"))
			{
				continue;
			}
			foreach (XmlNode childNode2 in childNode.ChildNodes)
			{
				if (childNode2.Name == "PartyTemplateStack")
				{
					PartyTemplateStack item = new PartyTemplateStack((CharacterObject)objectManager.ReadObjectReferenceFromXml("troop", typeof(CharacterObject), childNode2), Convert.ToInt32(childNode2.Attributes["min_value"].Value), Convert.ToInt32(childNode2.Attributes["max_value"].Value));
					Stacks.Add(item);
				}
			}
		}
	}
}
