using System.Collections.Generic;
using TaleWorlds.Core;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.CampaignBehaviors;

public class OrderOfBattleCampaignBehavior : CampaignBehaviorBase
{
	public class OrderOfBattleFormationData
	{
		[SaveableField(1)]
		public readonly Hero Commander;

		[SaveableField(2)]
		public readonly DeploymentFormationClass FormationClass;

		[SaveableField(3)]
		public readonly int PrimaryClassWeight;

		[SaveableField(4)]
		public readonly int SecondaryClassWeight;

		[SaveableField(5)]
		public readonly Dictionary<FormationFilterType, bool> Filters;

		[SaveableField(6)]
		public readonly Hero[] HeroTroops;

		public OrderOfBattleFormationData(Hero commander, List<Hero> heroTroops, DeploymentFormationClass formationClass, int primaryWeight, int secondaryWeight, Dictionary<FormationFilterType, bool> filters)
		{
			Commander = commander;
			HeroTroops = heroTroops.ToArray();
			FormationClass = formationClass;
			PrimaryClassWeight = primaryWeight;
			SecondaryClassWeight = secondaryWeight;
			Filters = new Dictionary<FormationFilterType, bool>();
			foreach (FormationFilterType key in filters.Keys)
			{
				Filters.Add(key, filters[key]);
			}
		}

		internal static void AutoGeneratedStaticCollectObjectsOrderOfBattleFormationData(object o, List<object> collectedObjects)
		{
			((OrderOfBattleFormationData)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			collectedObjects.Add(Commander);
			collectedObjects.Add(Filters);
			collectedObjects.Add(HeroTroops);
		}

		internal static object AutoGeneratedGetMemberValueCommander(object o)
		{
			return ((OrderOfBattleFormationData)o).Commander;
		}

		internal static object AutoGeneratedGetMemberValueFormationClass(object o)
		{
			return ((OrderOfBattleFormationData)o).FormationClass;
		}

		internal static object AutoGeneratedGetMemberValuePrimaryClassWeight(object o)
		{
			return ((OrderOfBattleFormationData)o).PrimaryClassWeight;
		}

		internal static object AutoGeneratedGetMemberValueSecondaryClassWeight(object o)
		{
			return ((OrderOfBattleFormationData)o).SecondaryClassWeight;
		}

		internal static object AutoGeneratedGetMemberValueFilters(object o)
		{
			return ((OrderOfBattleFormationData)o).Filters;
		}

		internal static object AutoGeneratedGetMemberValueHeroTroops(object o)
		{
			return ((OrderOfBattleFormationData)o).HeroTroops;
		}
	}

	private List<OrderOfBattleFormationData> _siegeFormationInfos;

	private List<OrderOfBattleFormationData> _fieldBattleFormationInfos;

	public OrderOfBattleCampaignBehavior()
	{
		_siegeFormationInfos = new List<OrderOfBattleFormationData>();
		_fieldBattleFormationInfos = new List<OrderOfBattleFormationData>();
	}

	public override void RegisterEvents()
	{
	}

	public override void SyncData(IDataStore dataStore)
	{
		if (dataStore.SyncData("_siegeFormationInfos", ref _siegeFormationInfos) && _siegeFormationInfos == null)
		{
			_siegeFormationInfos = new List<OrderOfBattleFormationData>();
		}
		if (dataStore.SyncData("_formationInfos", ref _fieldBattleFormationInfos) && _fieldBattleFormationInfos == null)
		{
			_fieldBattleFormationInfos = new List<OrderOfBattleFormationData>();
		}
	}

	public OrderOfBattleFormationData GetFormationDataAtIndex(int formationIndex, bool isSiegeBattle)
	{
		if (isSiegeBattle)
		{
			if (_siegeFormationInfos.Count > formationIndex)
			{
				return _siegeFormationInfos[formationIndex];
			}
			return null;
		}
		if (_fieldBattleFormationInfos.Count > formationIndex)
		{
			return _fieldBattleFormationInfos[formationIndex];
		}
		return null;
	}

	public void SetFormationInfos(List<OrderOfBattleFormationData> formationInfos, bool isSiegeBattle)
	{
		if (isSiegeBattle)
		{
			_siegeFormationInfos = new List<OrderOfBattleFormationData>(formationInfos);
		}
		else
		{
			_fieldBattleFormationInfos = new List<OrderOfBattleFormationData>(formationInfos);
		}
	}
}
