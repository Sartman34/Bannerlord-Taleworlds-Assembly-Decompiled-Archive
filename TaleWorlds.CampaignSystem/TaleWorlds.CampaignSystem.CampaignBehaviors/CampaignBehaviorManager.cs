using System.Collections.Generic;
using System.Linq;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.CampaignBehaviors;

public class CampaignBehaviorManager : ICampaignBehaviorManager
{
	private List<CampaignBehaviorBase> _campaignBehaviors;

	[SaveableField(1)]
	private readonly CampaignBehaviorDataStore _campaignBehaviorDataStore;

	public CampaignBehaviorManager(IEnumerable<CampaignBehaviorBase> inputComponents)
	{
		SetBehaviors(inputComponents);
		_campaignBehaviorDataStore = new CampaignBehaviorDataStore();
		CampaignEvents.OnBeforeSaveEvent.AddNonSerializedListener(this, OnBeforeSave);
	}

	public void InitializeCampaignBehaviors(IEnumerable<CampaignBehaviorBase> inputComponents)
	{
		SetBehaviors(inputComponents);
		CampaignEvents.OnBeforeSaveEvent.AddNonSerializedListener(this, OnBeforeSave);
	}

	private void SetBehaviors(IEnumerable<CampaignBehaviorBase> inputComponents)
	{
		_campaignBehaviors = inputComponents.ToList();
	}

	public void RegisterEvents()
	{
		foreach (CampaignBehaviorBase campaignBehavior in _campaignBehaviors)
		{
			campaignBehavior.RegisterEvents();
		}
	}

	private void OnBeforeSave()
	{
		_campaignBehaviorDataStore.ClearBehaviorData();
		foreach (CampaignBehaviorBase campaignBehavior in _campaignBehaviors)
		{
			_campaignBehaviorDataStore.SaveBehaviorData(campaignBehavior);
		}
	}

	public void LoadBehaviorData()
	{
		foreach (CampaignBehaviorBase campaignBehavior in _campaignBehaviors)
		{
			_campaignBehaviorDataStore.LoadBehaviorData(campaignBehavior);
		}
		_campaignBehaviorDataStore.ClearBehaviorData();
	}

	public T GetBehavior<T>()
	{
		return _campaignBehaviors.OfType<T>().FirstOrDefault();
	}

	public IEnumerable<T> GetBehaviors<T>()
	{
		return _campaignBehaviors.OfType<T>();
	}

	public void AddBehavior(CampaignBehaviorBase campaignBehavior)
	{
		_campaignBehaviors.Add(campaignBehavior);
		campaignBehavior.RegisterEvents();
	}

	public void RemoveBehavior<T>() where T : CampaignBehaviorBase
	{
		for (int num = _campaignBehaviors.Count - 1; num >= 0; num--)
		{
			if (_campaignBehaviors[num] is T val)
			{
				_campaignBehaviors.Remove(val);
				CampaignEventDispatcher.Instance.RemoveListeners(val);
				break;
			}
		}
	}

	public void ClearBehaviors()
	{
		_campaignBehaviors.Clear();
	}

	internal static void AutoGeneratedStaticCollectObjectsCampaignBehaviorManager(object o, List<object> collectedObjects)
	{
		((CampaignBehaviorManager)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
	}

	protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
	{
		collectedObjects.Add(_campaignBehaviorDataStore);
	}

	internal static object AutoGeneratedGetMemberValue_campaignBehaviorDataStore(object o)
	{
		return ((CampaignBehaviorManager)o)._campaignBehaviorDataStore;
	}
}
