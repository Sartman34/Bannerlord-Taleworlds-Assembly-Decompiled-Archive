using System.Collections.Generic;
using TaleWorlds.CampaignSystem.CharacterDevelopment;
using TaleWorlds.CampaignSystem.Extensions;
using TaleWorlds.CampaignSystem.Settlements;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Party.PartyComponents;

public class VillagerPartyComponent : PartyComponent
{
	[CachedData]
	private TextObject _cachedName;

	[SaveableProperty(1)]
	public Village Village { get; private set; }

	public override Hero PartyOwner => Village.Settlement.OwnerClan.Leader;

	public override TextObject Name
	{
		get
		{
			if (_cachedName == null)
			{
				_cachedName = GameTexts.FindText("str_villagers_of_VILLAGE_NAME");
				_cachedName.SetTextVariable("VILLAGE_NAME", Village.Name);
			}
			return _cachedName;
		}
	}

	public override Settlement HomeSettlement => Village.Settlement;

	internal static void AutoGeneratedStaticCollectObjectsVillagerPartyComponent(object o, List<object> collectedObjects)
	{
		((VillagerPartyComponent)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
	}

	protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
	{
		base.AutoGeneratedInstanceCollectObjects(collectedObjects);
		collectedObjects.Add(Village);
	}

	internal static object AutoGeneratedGetMemberValueVillage(object o)
	{
		return ((VillagerPartyComponent)o).Village;
	}

	public static MobileParty CreateVillagerParty(string stringId, Village village, int villagerPartySize)
	{
		return MobileParty.CreateParty(stringId, new VillagerPartyComponent(village), delegate(MobileParty mobileParty)
		{
			(mobileParty.PartyComponent as VillagerPartyComponent).InitializeVillagerPartyProperties(villagerPartySize);
		});
	}

	protected internal VillagerPartyComponent(Village village)
	{
		Village = village;
	}

	protected override void OnInitialize()
	{
		Village.VillagerPartyComponent = this;
	}

	protected override void OnFinalize()
	{
		Village.VillagerPartyComponent = null;
	}

	public override void ClearCachedName()
	{
		_cachedName = null;
	}

	private void InitializeVillagerPartyProperties(int villagerPartySize)
	{
		PartyTemplateObject villagerPartyTemplate = Village.Settlement.Culture.VillagerPartyTemplate;
		base.Party.MobileParty.Aggressiveness = 0f;
		if (Village.Bound?.Town?.Governor != null && Village.Bound.Town.Governor.GetPerkValue(DefaultPerks.Scouting.VillageNetwork))
		{
			villagerPartySize = MathF.Round((float)villagerPartySize * (1f + DefaultPerks.Scouting.VillageNetwork.SecondaryBonus));
		}
		if ((float)villagerPartySize > Village.Hearth)
		{
			villagerPartySize = (int)Village.Hearth;
		}
		Village.Hearth -= (villagerPartySize + 1) / 2;
		base.Party.MobileParty.InitializeMobilePartyAroundPosition(villagerPartyTemplate, Village.Owner.Settlement.Position2D, 1f, 0f, villagerPartySize);
		base.Party.SetVisualAsDirty();
		base.Party.MobileParty.InitializePartyTrade(0);
		float num = 10000f;
		ItemObject itemObject = null;
		foreach (ItemObject item in Items.All)
		{
			if (item.ItemCategory == DefaultItemCategories.PackAnimal && (float)item.Value < num && item.Value > 40)
			{
				itemObject = item;
				num = item.Value;
			}
		}
		if (itemObject != null)
		{
			int amount = (int)(0.5f * (float)villagerPartySize);
			base.MobileParty.ItemRoster.Add(new ItemRosterElement(itemObject, amount));
		}
	}
}
