using System.Collections.Generic;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Conversation.Persuasion;

public class PersuasionAttempt
{
	[SaveableField(2)]
	public readonly int ReservationType;

	[SaveableField(3)]
	public readonly Hero PersuadedHero;

	[SaveableField(4)]
	public readonly CampaignTime GameTime;

	[SaveableField(5)]
	public readonly PersuasionOptionArgs Args;

	[SaveableField(6)]
	public readonly PersuasionOptionResult Result;

	internal static void AutoGeneratedStaticCollectObjectsPersuasionAttempt(object o, List<object> collectedObjects)
	{
		((PersuasionAttempt)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
	}

	protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
	{
		collectedObjects.Add(PersuadedHero);
		CampaignTime.AutoGeneratedStaticCollectObjectsCampaignTime(GameTime, collectedObjects);
		collectedObjects.Add(Args);
	}

	internal static object AutoGeneratedGetMemberValueReservationType(object o)
	{
		return ((PersuasionAttempt)o).ReservationType;
	}

	internal static object AutoGeneratedGetMemberValuePersuadedHero(object o)
	{
		return ((PersuasionAttempt)o).PersuadedHero;
	}

	internal static object AutoGeneratedGetMemberValueGameTime(object o)
	{
		return ((PersuasionAttempt)o).GameTime;
	}

	internal static object AutoGeneratedGetMemberValueArgs(object o)
	{
		return ((PersuasionAttempt)o).Args;
	}

	internal static object AutoGeneratedGetMemberValueResult(object o)
	{
		return ((PersuasionAttempt)o).Result;
	}

	public PersuasionAttempt(Hero persuadedHero, CampaignTime gameTime, PersuasionOptionArgs args, PersuasionOptionResult result, int reservationType)
	{
		PersuadedHero = persuadedHero;
		GameTime = gameTime;
		Args = args;
		Result = result;
		ReservationType = reservationType;
	}

	public bool IsSuccesful()
	{
		if (Result != PersuasionOptionResult.Success)
		{
			return Result == PersuasionOptionResult.CriticalSuccess;
		}
		return true;
	}

	public bool Matches(Hero targetHero, int reservationType)
	{
		if (PersuadedHero == targetHero)
		{
			return ReservationType == reservationType;
		}
		return false;
	}
}
