using System.ComponentModel;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.GauntletUI.GamepadNavigation;
using TaleWorlds.GauntletUI.Layout;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets;
using TaleWorlds.MountAndBlade.ViewModelCollection.FaceGenerator;

namespace TaleWorlds.MountAndBlade.GauntletUI.AutoGenerated1;

public class FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_5_FaceGenNose__DependendPrefab : Widget
{
	private Widget _widget;

	private ScrollablePanel _widget_0;

	private Widget _widget_0_0;

	private NavigationScopeTargeter _widget_0_0_0;

	private ListPanel _widget_0_0_1;

	private NavigatableListPanel _widget_0_0_1_0;

	private Widget _widget_0_1;

	private Widget _widget_0_2;

	private ScrollbarWidget _widget_1;

	private Widget _widget_1_0;

	private ImageWidget _widget_1_1;

	private FaceGenVM _datasource_Root;

	private MBBindingList<FaceGenPropertyVM> _datasource_Root_NoseProperties;

	public FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_5_FaceGenNose__DependendPrefab(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new ScrollablePanel(base.Context);
		_widget.AddChild(_widget_0);
		_widget_0_0 = new Widget(base.Context);
		_widget_0.AddChild(_widget_0_0);
		_widget_0_0_0 = new NavigationScopeTargeter(base.Context);
		_widget_0_0.AddChild(_widget_0_0_0);
		_widget_0_0_1 = new ListPanel(base.Context);
		_widget_0_0.AddChild(_widget_0_0_1);
		_widget_0_0_1_0 = new NavigatableListPanel(base.Context);
		_widget_0_0_1.AddChild(_widget_0_0_1_0);
		_widget_0_1 = new Widget(base.Context);
		_widget_0.AddChild(_widget_0_1);
		_widget_0_2 = new Widget(base.Context);
		_widget_0.AddChild(_widget_0_2);
		_widget_1 = new ScrollbarWidget(base.Context);
		_widget.AddChild(_widget_1);
		_widget_1_0 = new Widget(base.Context);
		_widget_1.AddChild(_widget_1_0);
		_widget_1_1 = new ImageWidget(base.Context);
		_widget_1.AddChild(_widget_1_1);
	}

	public void SetIds()
	{
		_widget_0_0.Id = "ClipRect";
		_widget_0_0_1.Id = "InnerList";
		_widget_1.Id = "VerticalScrollbar";
		_widget_1_1.Id = "VerticalScrollbarHandle";
	}

	public void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.StretchToParent;
		base.HeightSizePolicy = SizePolicy.StretchToParent;
		base.MarginTop = 0f;
		_widget_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0.AutoHideScrollBars = true;
		_widget_0.ClipRect = _widget_0_0;
		_widget_0.InnerPanel = _widget_0_0_1;
		_widget_0.VerticalScrollbar = _widget_1;
		_widget_0_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0.ClipContents = true;
		_widget_0_0_0.ScopeID = "NoseScope";
		_widget_0_0_0.ScopeParent = _widget_0_0_1;
		_widget_0_0_0.ScopeMovements = GamepadNavigationTypes.Vertical;
		_widget_0_0_0.HasCircularMovement = true;
		_widget_0_0_1.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_1.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		_widget_0_0_1.MarginTop = 25f;
		_widget_0_0_1_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_1_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_1_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_1_0.MarginRight = 10f;
		_widget_0_0_1_0.MarginTop = 10f;
		_widget_0_0_1_0.MarginBottom = 80f;
		_widget_0_0_1_0.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		_widget_0_0_1_0.MinIndex = 1000;
		_widget_0_0_1_0.MaxIndex = 10000;
		_widget_0_1.DoNotAcceptEvents = true;
		_widget_0_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_1.SuggestedWidth = 576f;
		_widget_0_1.SuggestedHeight = 57f;
		_widget_0_1.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_0_1.VerticalAlignment = VerticalAlignment.Top;
		_widget_0_1.VerticalFlip = true;
		_widget_0_1.Sprite = base.Context.SpriteData.GetSprite("General\\CharacterCreation\\character_creation_scroll_gradient");
		_widget_0_2.DoNotAcceptEvents = true;
		_widget_0_2.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_2.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_2.SuggestedWidth = 576f;
		_widget_0_2.SuggestedHeight = 57f;
		_widget_0_2.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_0_2.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_0_2.Sprite = base.Context.SpriteData.GetSprite("General\\CharacterCreation\\character_creation_scroll_gradient");
		_widget_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1.SuggestedWidth = 8f;
		_widget_1.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_1.VerticalAlignment = VerticalAlignment.Center;
		_widget_1.MarginTop = 15f;
		_widget_1.MarginBottom = 15f;
		_widget_1.AlignmentAxis = AlignmentAxis.Vertical;
		_widget_1.Handle = _widget_1_1;
		_widget_1.MaxValue = 100f;
		_widget_1.MinValue = 0f;
		_widget_1_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_1_0.SuggestedWidth = 4f;
		_widget_1_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_0.Sprite = base.Context.SpriteData.GetSprite("BlankWhiteSquare_9");
		_widget_1_0.Color = new Color(0.3529412f, 0.2509804f, 0.2f);
		_widget_1_0.AlphaFactor = 0.2f;
		_widget_1_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_1_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_1_1.SuggestedHeight = 10f;
		_widget_1_1.SuggestedWidth = 8f;
		_widget_1_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_1.Brush = base.Context.GetBrush("FaceGen.Scrollbar.Handle");
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		if (_datasource_Root_NoseProperties != null)
		{
			_datasource_Root_NoseProperties.ListChanged -= OnList_datasource_Root_NosePropertiesChanged;
			for (int num = _widget_0_0_1_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_0_0_1_0.GetChild(num);
				((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate)child).OnBeforeRemovedChild(child);
				((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate)_widget_0_0_1_0.GetChild(num)).DestroyDataSource();
			}
			_datasource_Root_NoseProperties = null;
		}
		_datasource_Root = null;
	}

	public void SetDataSource(FaceGenVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		if (propertyName == "NoseProperties")
		{
			RefreshDataSource_datasource_Root_NoseProperties(_datasource_Root.NoseProperties);
		}
	}

	public void OnList_datasource_Root_NosePropertiesChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_0_0_1_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_0_0_1_0.GetChild(num);
				((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_0_0_1_0.GetChild(num);
				((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate)child4).SetDataSource(null);
				_widget_0_0_1_0.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_NoseProperties.Count; i++)
			{
				FaceGenPropertyVM bindingObject = _datasource_Root_NoseProperties[i];
				_widget_0_0_1_0.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate = new FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate);
			FaceGenPropertyVM dataSource = (FaceGenPropertyVM)(generatedWidgetData.Data = _datasource_Root_NoseProperties[e.NewIndex]);
			faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_0_0_1_0.AddChildAtIndex(faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate, e.NewIndex);
			faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate.CreateWidgets();
			faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate.SetIds();
			faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate.SetAttributes();
			faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_0_0_1_0.GetChild(e.NewIndex);
			((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_0_0_1_0.GetChild(e.NewIndex);
			((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate)child).SetDataSource(null);
			_widget_0_0_1_0.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(FaceGenVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			if (_datasource_Root_NoseProperties != null)
			{
				_datasource_Root_NoseProperties.ListChanged -= OnList_datasource_Root_NosePropertiesChanged;
				for (int num = _widget_0_0_1_0.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_0_0_1_0.GetChild(num);
					((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_0_0_1_0.GetChild(num);
					((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate)child2).SetDataSource(null);
					_widget_0_0_1_0.RemoveChild(child2);
				}
				_datasource_Root_NoseProperties = null;
			}
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_datasource_Root_NoseProperties = _datasource_Root.NoseProperties;
		if (_datasource_Root_NoseProperties != null)
		{
			_datasource_Root_NoseProperties.ListChanged += OnList_datasource_Root_NosePropertiesChanged;
			for (int i = 0; i < _datasource_Root_NoseProperties.Count; i++)
			{
				FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate = new FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate);
				FaceGenPropertyVM dataSource = (FaceGenPropertyVM)(generatedWidgetData.Data = _datasource_Root_NoseProperties[i]);
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0_0_1_0.AddChildAtIndex(faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate, i);
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate.CreateWidgets();
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate.SetIds();
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate.SetAttributes();
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_NoseProperties(MBBindingList<FaceGenPropertyVM> newDataSource)
	{
		if (_datasource_Root_NoseProperties != null)
		{
			_datasource_Root_NoseProperties.ListChanged -= OnList_datasource_Root_NosePropertiesChanged;
			for (int num = _widget_0_0_1_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_0_0_1_0.GetChild(num);
				((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_0_0_1_0.GetChild(num);
				((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate)child2).SetDataSource(null);
				_widget_0_0_1_0.RemoveChild(child2);
			}
			_datasource_Root_NoseProperties = null;
		}
		_datasource_Root_NoseProperties = newDataSource;
		_datasource_Root_NoseProperties = _datasource_Root.NoseProperties;
		if (_datasource_Root_NoseProperties != null)
		{
			_datasource_Root_NoseProperties.ListChanged += OnList_datasource_Root_NosePropertiesChanged;
			for (int i = 0; i < _datasource_Root_NoseProperties.Count; i++)
			{
				FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate = new FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate);
				FaceGenPropertyVM dataSource = (FaceGenPropertyVM)(generatedWidgetData.Data = _datasource_Root_NoseProperties[i]);
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0_0_1_0.AddChildAtIndex(faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate, i);
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate.CreateWidgets();
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate.SetIds();
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate.SetAttributes();
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_14_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}
}
