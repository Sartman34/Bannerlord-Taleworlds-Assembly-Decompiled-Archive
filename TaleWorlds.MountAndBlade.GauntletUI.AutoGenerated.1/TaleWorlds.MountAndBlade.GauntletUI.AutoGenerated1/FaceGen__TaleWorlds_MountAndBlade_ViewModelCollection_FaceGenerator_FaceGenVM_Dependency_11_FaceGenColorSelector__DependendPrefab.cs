using System.ComponentModel;
using System.Numerics;
using TaleWorlds.Core.ViewModelCollection.Selector;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets;

namespace TaleWorlds.MountAndBlade.GauntletUI.AutoGenerated1;

public class FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_11_FaceGenColorSelector__DependendPrefab : SelectorWidget
{
	private SelectorWidget _widget;

	private NavigatableGridWidget _widget_0;

	private SelectorVM<SelectorItemVM> _datasource_Root;

	private MBBindingList<SelectorItemVM> _datasource_Root_ItemList;

	public FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_11_FaceGenColorSelector__DependendPrefab(UIContext context)
		: base(context)
	{
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new NavigatableGridWidget(base.Context);
		_widget.AddChild(_widget_0);
	}

	public void SetIds()
	{
		_widget_0.Id = "ColorGrid";
	}

	public void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.CoverChildren;
		base.HeightSizePolicy = SizePolicy.CoverChildren;
		base.HorizontalAlignment = HorizontalAlignment.Center;
		base.VerticalAlignment = VerticalAlignment.Center;
		base.Container = _widget_0;
		_widget_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0.ColumnCount = 12;
		_widget_0.DefaultCellHeight = 45f;
		_widget_0.DefaultCellWidth = 45f;
		_widget_0.MinIndex = 1003;
		_widget_0.MaxIndex = 1100;
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget.PropertyChanged -= PropertyChangedListenerOf_widget;
		_widget.boolPropertyChanged -= boolPropertyChangedListenerOf_widget;
		_widget.floatPropertyChanged -= floatPropertyChangedListenerOf_widget;
		_widget.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget;
		_widget.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget;
		_widget.doublePropertyChanged -= doublePropertyChangedListenerOf_widget;
		_widget.intPropertyChanged -= intPropertyChangedListenerOf_widget;
		_widget.uintPropertyChanged -= uintPropertyChangedListenerOf_widget;
		_widget.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget;
		if (_datasource_Root_ItemList != null)
		{
			_datasource_Root_ItemList.ListChanged -= OnList_datasource_Root_ItemListChanged;
			for (int num = _widget_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_0.GetChild(num);
				((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate)child).OnBeforeRemovedChild(child);
				((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate)_widget_0.GetChild(num)).DestroyDataSource();
			}
			_datasource_Root_ItemList = null;
		}
		_datasource_Root = null;
	}

	public void SetDataSource(SelectorVM<SelectorItemVM> dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void intPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget(string propertyName)
	{
		if (propertyName == "CurrentSelectedIndex")
		{
			_datasource_Root.SelectedIndex = _widget.CurrentSelectedIndex;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		if (propertyName == "ItemList")
		{
			RefreshDataSource_datasource_Root_ItemList(_datasource_Root.ItemList);
		}
		else if (propertyName == "SelectedIndex")
		{
			_widget.CurrentSelectedIndex = _datasource_Root.SelectedIndex;
		}
	}

	public void OnList_datasource_Root_ItemListChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_0.GetChild(num);
				((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_0.GetChild(num);
				((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate)child4).SetDataSource(null);
				_widget_0.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_ItemList.Count; i++)
			{
				SelectorItemVM bindingObject = _datasource_Root_ItemList[i];
				_widget_0.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate = new FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate);
			SelectorItemVM dataSource = (SelectorItemVM)(generatedWidgetData.Data = _datasource_Root_ItemList[e.NewIndex]);
			faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_0.AddChildAtIndex(faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate, e.NewIndex);
			faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate.CreateWidgets();
			faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate.SetIds();
			faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate.SetAttributes();
			faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_0.GetChild(e.NewIndex);
			((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_0.GetChild(e.NewIndex);
			((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate)child).SetDataSource(null);
			_widget_0.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(SelectorVM<SelectorItemVM> newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget.PropertyChanged -= PropertyChangedListenerOf_widget;
			_widget.boolPropertyChanged -= boolPropertyChangedListenerOf_widget;
			_widget.floatPropertyChanged -= floatPropertyChangedListenerOf_widget;
			_widget.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget;
			_widget.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget;
			_widget.doublePropertyChanged -= doublePropertyChangedListenerOf_widget;
			_widget.intPropertyChanged -= intPropertyChangedListenerOf_widget;
			_widget.uintPropertyChanged -= uintPropertyChangedListenerOf_widget;
			_widget.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget;
			if (_datasource_Root_ItemList != null)
			{
				_datasource_Root_ItemList.ListChanged -= OnList_datasource_Root_ItemListChanged;
				for (int num = _widget_0.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_0.GetChild(num);
					((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_0.GetChild(num);
					((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate)child2).SetDataSource(null);
					_widget_0.RemoveChild(child2);
				}
				_datasource_Root_ItemList = null;
			}
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget.CurrentSelectedIndex = _datasource_Root.SelectedIndex;
		_widget.PropertyChanged += PropertyChangedListenerOf_widget;
		_widget.boolPropertyChanged += boolPropertyChangedListenerOf_widget;
		_widget.floatPropertyChanged += floatPropertyChangedListenerOf_widget;
		_widget.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget;
		_widget.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget;
		_widget.doublePropertyChanged += doublePropertyChangedListenerOf_widget;
		_widget.intPropertyChanged += intPropertyChangedListenerOf_widget;
		_widget.uintPropertyChanged += uintPropertyChangedListenerOf_widget;
		_widget.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget;
		_datasource_Root_ItemList = _datasource_Root.ItemList;
		if (_datasource_Root_ItemList != null)
		{
			_datasource_Root_ItemList.ListChanged += OnList_datasource_Root_ItemListChanged;
			for (int i = 0; i < _datasource_Root_ItemList.Count; i++)
			{
				FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate = new FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate);
				SelectorItemVM dataSource = (SelectorItemVM)(generatedWidgetData.Data = _datasource_Root_ItemList[i]);
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0.AddChildAtIndex(faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate, i);
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate.CreateWidgets();
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate.SetIds();
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate.SetAttributes();
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_ItemList(MBBindingList<SelectorItemVM> newDataSource)
	{
		if (_datasource_Root_ItemList != null)
		{
			_datasource_Root_ItemList.ListChanged -= OnList_datasource_Root_ItemListChanged;
			for (int num = _widget_0.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_0.GetChild(num);
				((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_0.GetChild(num);
				((FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate)child2).SetDataSource(null);
				_widget_0.RemoveChild(child2);
			}
			_datasource_Root_ItemList = null;
		}
		_datasource_Root_ItemList = newDataSource;
		_datasource_Root_ItemList = _datasource_Root.ItemList;
		if (_datasource_Root_ItemList != null)
		{
			_datasource_Root_ItemList.ListChanged += OnList_datasource_Root_ItemListChanged;
			for (int i = 0; i < _datasource_Root_ItemList.Count; i++)
			{
				FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate = new FaceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate);
				SelectorItemVM dataSource = (SelectorItemVM)(generatedWidgetData.Data = _datasource_Root_ItemList[i]);
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0.AddChildAtIndex(faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate, i);
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate.CreateWidgets();
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate.SetIds();
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate.SetAttributes();
				faceGen__TaleWorlds_MountAndBlade_ViewModelCollection_FaceGenerator_FaceGenVM_Dependency_21_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}
}
