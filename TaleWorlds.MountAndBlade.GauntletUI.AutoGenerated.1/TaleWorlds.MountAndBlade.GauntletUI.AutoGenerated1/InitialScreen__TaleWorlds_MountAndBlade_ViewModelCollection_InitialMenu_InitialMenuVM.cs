using System.ComponentModel;
using System.Numerics;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.GauntletUI.GamepadNavigation;
using TaleWorlds.GauntletUI.Layout;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets;
using TaleWorlds.MountAndBlade.ViewModelCollection.InitialMenu;

namespace TaleWorlds.MountAndBlade.GauntletUI.AutoGenerated1;

public class InitialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM : Widget, IGeneratedGauntletMovieRoot
{
	private Widget _widget;

	private Widget _widget_0;

	private Widget _widget_0_0;

	private InitialMenuAnimControllerWidget _widget_0_0_0;

	private Widget _widget_0_0_1;

	private Widget _widget_0_0_2;

	private ScrollablePanel _widget_0_0_2_0;

	private Widget _widget_0_0_2_0_0;

	private NavigationScopeTargeter _widget_0_0_2_0_0_0;

	private NavigatableListPanel _widget_0_0_2_0_0_1;

	private ScrollbarWidget _widget_0_0_2_1;

	private Widget _widget_0_0_2_1_0;

	private ImageWidget _widget_0_0_2_1_1;

	private ListPanel _widget_1;

	private TextWidget _widget_1_0;

	private Widget _widget_2;

	private TextWidget _widget_2_0;

	private TextWidget _widget_3;

	private InitialMenuVM _datasource_Root;

	private MBBindingList<InitialMenuOptionVM> _datasource_Root_MenuOptions;

	public InitialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM(UIContext context)
		: base(context)
	{
	}

	private VisualDefinition CreateVisualDefinitionMainMenu()
	{
		VisualDefinition visualDefinition = new VisualDefinition("MainMenu", 0.4f, 0f, easeIn: true);
		visualDefinition.AddVisualState(new VisualState("Default")
		{
			PositionYOffset = 0f
		});
		visualDefinition.AddVisualState(new VisualState("Activated")
		{
			PositionYOffset = 0f
		});
		return visualDefinition;
	}

	private VisualDefinition CreateVisualDefinitionOptionFadeIn()
	{
		VisualDefinition visualDefinition = new VisualDefinition("OptionFadeIn", 0.3f, 0f, easeIn: true);
		visualDefinition.AddVisualState(new VisualState("Default")
		{
			PositionXOffset = -20f
		});
		visualDefinition.AddVisualState(new VisualState("Activated")
		{
			PositionXOffset = 0f
		});
		return visualDefinition;
	}

	public void CreateWidgets()
	{
		_widget = this;
		_widget_0 = new Widget(base.Context);
		_widget.AddChild(_widget_0);
		_widget_0_0 = new Widget(base.Context);
		_widget_0.AddChild(_widget_0_0);
		_widget_0_0_0 = new InitialMenuAnimControllerWidget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_0);
		_widget_0_0_1 = new Widget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_1);
		_widget_0_0_2 = new Widget(base.Context);
		_widget_0_0.AddChild(_widget_0_0_2);
		_widget_0_0_2_0 = new ScrollablePanel(base.Context);
		_widget_0_0_2.AddChild(_widget_0_0_2_0);
		_widget_0_0_2_0_0 = new Widget(base.Context);
		_widget_0_0_2_0.AddChild(_widget_0_0_2_0_0);
		_widget_0_0_2_0_0_0 = new NavigationScopeTargeter(base.Context);
		_widget_0_0_2_0_0.AddChild(_widget_0_0_2_0_0_0);
		_widget_0_0_2_0_0_1 = new NavigatableListPanel(base.Context);
		_widget_0_0_2_0_0.AddChild(_widget_0_0_2_0_0_1);
		_widget_0_0_2_1 = new ScrollbarWidget(base.Context);
		_widget_0_0_2.AddChild(_widget_0_0_2_1);
		_widget_0_0_2_1_0 = new Widget(base.Context);
		_widget_0_0_2_1.AddChild(_widget_0_0_2_1_0);
		_widget_0_0_2_1_1 = new ImageWidget(base.Context);
		_widget_0_0_2_1.AddChild(_widget_0_0_2_1_1);
		_widget_1 = new ListPanel(base.Context);
		_widget.AddChild(_widget_1);
		_widget_1_0 = new TextWidget(base.Context);
		_widget_1.AddChild(_widget_1_0);
		_widget_2 = new Widget(base.Context);
		_widget.AddChild(_widget_2);
		_widget_2_0 = new TextWidget(base.Context);
		_widget_2.AddChild(_widget_2_0);
		_widget_3 = new TextWidget(base.Context);
		_widget.AddChild(_widget_3);
	}

	public void SetIds()
	{
		_widget_0_0_2.Id = "MenuItemsParent";
		_widget_0_0_2_0.Id = "ScrollablePanel";
		_widget_0_0_2_0_0.Id = "ClipRect";
		_widget_0_0_2_0_0_1.Id = "MenuItems";
		_widget_0_0_2_1.Id = "VerticalScrollbar";
		_widget_0_0_2_1_1.Id = "VerticalScrollbarHandle";
	}

	public void SetAttributes()
	{
		base.WidthSizePolicy = SizePolicy.StretchToParent;
		base.HeightSizePolicy = SizePolicy.StretchToParent;
		base.DoNotAcceptEvents = true;
		_widget_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0.SuggestedWidth = 445f;
		_widget_0.MarginLeft = 85f;
		_widget_0.Sprite = base.Context.SpriteData.GetSprite("General\\InitialMenu\\main_menu_texture");
		_widget_0_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0.VerticalAlignment = VerticalAlignment.Center;
		_widget_0_0_0.OptionsList = _widget_0_0.FindChild(new BindingPath("ScrollablePanel\\ClipRect\\MenuItems"));
		_widget_0_0_0.InitialWaitTime = 0.2f;
		_widget_0_0_0.WaitTimeBetweenOptions = 0.1f;
		_widget_0_0_0.OptionFadeInTime = 0.2f;
		_widget_0_0_0.IsAnimEnabled = false;
		_widget_0_0_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_1.SuggestedWidth = 380f;
		_widget_0_0_1.SuggestedHeight = 103f;
		_widget_0_0_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_1.VerticalAlignment = VerticalAlignment.Top;
		_widget_0_0_1.MarginTop = 100f;
		_widget_0_0_1.Sprite = base.Context.SpriteData.GetSprite("General\\InitialMenu\\main_menu_logo");
		_widget_0_0_2.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_2.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_2.MarginTop = 280f;
		_widget_0_0_2.MarginBottom = 30f;
		_widget_0_0_2.MarginLeft = 10f;
		_widget_0_0_2.MarginRight = 10f;
		_widget_0_0_2_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_2_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_2_0.AutoHideScrollBars = true;
		_widget_0_0_2_0.ClipRect = _widget_0_0_2_0_0;
		_widget_0_0_2_0.InnerPanel = _widget_0_0_2_0_0_1;
		_widget_0_0_2_0.VerticalScrollbar = _widget_0_0_2_1;
		_widget_0_0_2_0_0.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_2_0_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_2_0_0.ClipContents = true;
		_widget_0_0_2_0_0_0.ScopeID = "InitialScreen";
		_widget_0_0_2_0_0_0.ScopeParent = _widget_0_0_2_0_0_1;
		_widget_0_0_2_0_0_0.ScopeMovements = GamepadNavigationTypes.Vertical;
		_widget_0_0_2_0_0_0.HasCircularMovement = true;
		_widget_0_0_2_0_0_1.WidthSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_2_0_0_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_0_0_2_0_0_1.MinHeight = 630f;
		_widget_0_0_2_0_0_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_2_0_0_1.VerticalAlignment = VerticalAlignment.Top;
		_widget_0_0_2_0_0_1.MarginLeft = 20f;
		_widget_0_0_2_0_0_1.MarginRight = 20f;
		_widget_0_0_2_0_0_1.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
		_widget_0_0_2_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_2_1.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_2_1.SuggestedWidth = 8f;
		_widget_0_0_2_1.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_0_0_2_1.VerticalAlignment = VerticalAlignment.Top;
		_widget_0_0_2_1.MarginTop = 10f;
		_widget_0_0_2_1.MarginBottom = 10f;
		_widget_0_0_2_1.MarginRight = 10f;
		_widget_0_0_2_1.AlignmentAxis = AlignmentAxis.Vertical;
		_widget_0_0_2_1.Handle = _widget_0_0_2_1_1;
		_widget_0_0_2_1.MaxValue = 100f;
		_widget_0_0_2_1.MinValue = 0f;
		_widget_0_0_2_1_0.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_2_1_0.HeightSizePolicy = SizePolicy.StretchToParent;
		_widget_0_0_2_1_0.SuggestedWidth = 2f;
		_widget_0_0_2_1_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_2_1_0.Sprite = base.Context.SpriteData.GetSprite("BlankWhiteSquare_9");
		_widget_0_0_2_1_0.Color = new Color(0.3529412f, 0.2509804f, 0.2f);
		_widget_0_0_2_1_0.AlphaFactor = 0.2f;
		_widget_0_0_2_1_1.WidthSizePolicy = SizePolicy.Fixed;
		_widget_0_0_2_1_1.HeightSizePolicy = SizePolicy.Fixed;
		_widget_0_0_2_1_1.SuggestedHeight = 10f;
		_widget_0_0_2_1_1.SuggestedWidth = 4f;
		_widget_0_0_2_1_1.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_0_0_2_1_1.Brush = base.Context.GetBrush("FaceGen.Scrollbar.Handle");
		_widget_0_0_2_1_1.Brush.AlphaFactor = 0.7f;
		_widget_1.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_1.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_1.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_1.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_1.MarginBottom = 50f;
		_widget_1.MarginRight = 50f;
		_widget_1.Sprite = base.Context.SpriteData.GetSprite("BlankWhiteSquare_9");
		_widget_1.Color = new Color(0f, 0f, 0f, 2f / 3f);
		_widget_1.AlphaFactor = 0.7f;
		_widget_1_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_1_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_1_0.Brush = base.Context.GetBrush("InitialMenuButtonBrush");
		_widget_1_0.HorizontalAlignment = HorizontalAlignment.Center;
		_widget_1_0.DoNotAcceptEvents = true;
		_widget_1_0.MarginTop = 10f;
		_widget_2.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_2.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_2.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_2.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_2.MarginBottom = 250f;
		_widget_2.MarginRight = 50f;
		_widget_2.Sprite = base.Context.SpriteData.GetSprite("BlankWhiteSquare_9");
		_widget_2.Color = new Color(0f, 0f, 0f, 2f / 3f);
		_widget_2_0.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_2_0.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_2_0.MarginLeft = 10f;
		_widget_2_0.MarginRight = 10f;
		_widget_2_0.MarginTop = 5f;
		_widget_2_0.MarginBottom = 5f;
		_widget_3.WidthSizePolicy = SizePolicy.CoverChildren;
		_widget_3.HeightSizePolicy = SizePolicy.CoverChildren;
		_widget_3.HorizontalAlignment = HorizontalAlignment.Right;
		_widget_3.VerticalAlignment = VerticalAlignment.Bottom;
		_widget_3.MarginBottom = 15f;
		_widget_3.MarginRight = 15f;
		_widget_3.Brush = base.Context.GetBrush("GameVersion.Text");
	}

	public void RefreshBindingWithChildren()
	{
		InitialMenuVM datasource_Root = _datasource_Root;
		SetDataSource(null);
		SetDataSource(datasource_Root);
	}

	public void DestroyDataSource()
	{
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_1.PropertyChanged -= PropertyChangedListenerOf_widget_1;
		_widget_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1;
		_widget_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1;
		_widget_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1;
		_widget_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1;
		_widget_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1;
		_widget_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_1;
		_widget_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1;
		_widget_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1;
		_widget_1_0.PropertyChanged -= PropertyChangedListenerOf_widget_1_0;
		_widget_1_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_0;
		_widget_1_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_0;
		_widget_1_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_0;
		_widget_1_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_0;
		_widget_2.PropertyChanged -= PropertyChangedListenerOf_widget_2;
		_widget_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2;
		_widget_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2;
		_widget_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2;
		_widget_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2;
		_widget_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2;
		_widget_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_2;
		_widget_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2;
		_widget_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2;
		_widget_2_0.PropertyChanged -= PropertyChangedListenerOf_widget_2_0;
		_widget_2_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2_0;
		_widget_2_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2_0;
		_widget_2_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2_0;
		_widget_2_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2_0;
		_widget_2_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2_0;
		_widget_2_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_2_0;
		_widget_2_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2_0;
		_widget_2_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2_0;
		_widget_3.PropertyChanged -= PropertyChangedListenerOf_widget_3;
		_widget_3.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_3;
		_widget_3.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_3;
		_widget_3.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_3;
		_widget_3.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_3;
		_widget_3.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_3;
		_widget_3.intPropertyChanged -= intPropertyChangedListenerOf_widget_3;
		_widget_3.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_3;
		_widget_3.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_3;
		if (_datasource_Root_MenuOptions != null)
		{
			_datasource_Root_MenuOptions.ListChanged -= OnList_datasource_Root_MenuOptionsChanged;
			for (int num = _widget_0_0_2_0_0_1.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_0_0_2_0_0_1.GetChild(num);
				((InitialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
				((InitialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate)_widget_0_0_2_0_0_1.GetChild(num)).DestroyDataSource();
			}
			_datasource_Root_MenuOptions = null;
		}
		_datasource_Root = null;
	}

	public void SetDataSource(InitialMenuVM dataSource)
	{
		RefreshDataSource_datasource_Root(dataSource);
	}

	private void PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_1(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_1(string propertyName)
	{
		if (propertyName == "IsVisible")
		{
			_datasource_Root.IsProfileSelectionEnabled = _widget_1.IsVisible;
		}
	}

	private void PropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_1_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_1_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_1_0(string propertyName)
	{
		if (propertyName == "Text")
		{
			_datasource_Root.ProfileName = _widget_1_0.Text;
		}
	}

	private void PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_2(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_2(string propertyName)
	{
		if (propertyName == "IsVisible")
		{
			_datasource_Root.IsDownloadingContent = _widget_2.IsVisible;
		}
	}

	private void PropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_2_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_2_0(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_2_0(string propertyName)
	{
		if (propertyName == "Text")
		{
			_datasource_Root.DownloadingText = _widget_2_0.Text;
		}
	}

	private void PropertyChangedListenerOf_widget_3(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
	{
		HandleWidgetPropertyChangeOf_widget_3(propertyName);
	}

	private void boolPropertyChangedListenerOf_widget_3(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
	{
		HandleWidgetPropertyChangeOf_widget_3(propertyName);
	}

	private void floatPropertyChangedListenerOf_widget_3(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
	{
		HandleWidgetPropertyChangeOf_widget_3(propertyName);
	}

	private void Vec2PropertyChangedListenerOf_widget_3(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
	{
		HandleWidgetPropertyChangeOf_widget_3(propertyName);
	}

	private void Vector2PropertyChangedListenerOf_widget_3(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
	{
		HandleWidgetPropertyChangeOf_widget_3(propertyName);
	}

	private void doublePropertyChangedListenerOf_widget_3(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
	{
		HandleWidgetPropertyChangeOf_widget_3(propertyName);
	}

	private void intPropertyChangedListenerOf_widget_3(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
	{
		HandleWidgetPropertyChangeOf_widget_3(propertyName);
	}

	private void uintPropertyChangedListenerOf_widget_3(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
	{
		HandleWidgetPropertyChangeOf_widget_3(propertyName);
	}

	private void ColorPropertyChangedListenerOf_widget_3(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
	{
		HandleWidgetPropertyChangeOf_widget_3(propertyName);
	}

	private void HandleWidgetPropertyChangeOf_widget_3(string propertyName)
	{
		if (propertyName == "Text")
		{
			_datasource_Root.GameVersionText = _widget_3.Text;
		}
	}

	private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
	{
		HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
	}

	private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
	{
		switch (propertyName)
		{
		case "MenuOptions":
			RefreshDataSource_datasource_Root_MenuOptions(_datasource_Root.MenuOptions);
			break;
		case "IsProfileSelectionEnabled":
			_widget_1.IsVisible = _datasource_Root.IsProfileSelectionEnabled;
			break;
		case "ProfileName":
			_widget_1_0.Text = _datasource_Root.ProfileName;
			break;
		case "IsDownloadingContent":
			_widget_2.IsVisible = _datasource_Root.IsDownloadingContent;
			break;
		case "DownloadingText":
			_widget_2_0.Text = _datasource_Root.DownloadingText;
			break;
		case "GameVersionText":
			_widget_3.Text = _datasource_Root.GameVersionText;
			break;
		}
	}

	public void OnList_datasource_Root_MenuOptionsChanged(object sender, TaleWorlds.Library.ListChangedEventArgs e)
	{
		switch (e.ListChangedType)
		{
		case TaleWorlds.Library.ListChangedType.Reset:
		{
			for (int num = _widget_0_0_2_0_0_1.ChildCount - 1; num >= 0; num--)
			{
				Widget child3 = _widget_0_0_2_0_0_1.GetChild(num);
				((InitialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				Widget child4 = _widget_0_0_2_0_0_1.GetChild(num);
				((InitialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate)child4).SetDataSource(null);
				_widget_0_0_2_0_0_1.RemoveChild(child4);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.Sorted:
		{
			for (int i = 0; i < _datasource_Root_MenuOptions.Count; i++)
			{
				InitialMenuOptionVM bindingObject = _datasource_Root_MenuOptions[i];
				_widget_0_0_2_0_0_1.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(i);
			}
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemAdded:
		{
			InitialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate = new InitialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate(base.Context);
			GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate);
			InitialMenuOptionVM dataSource = (InitialMenuOptionVM)(generatedWidgetData.Data = _datasource_Root_MenuOptions[e.NewIndex]);
			initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
			_widget_0_0_2_0_0_1.AddChildAtIndex(initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate, e.NewIndex);
			initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate.CreateWidgets();
			initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate.SetIds();
			initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate.SetAttributes();
			initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate.SetDataSource(dataSource);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemBeforeDeleted:
		{
			Widget child2 = _widget_0_0_2_0_0_1.GetChild(e.NewIndex);
			((InitialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate)child2).OnBeforeRemovedChild(child2);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemDeleted:
		{
			Widget child = _widget_0_0_2_0_0_1.GetChild(e.NewIndex);
			((InitialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate)child).SetDataSource(null);
			_widget_0_0_2_0_0_1.RemoveChild(child);
			break;
		}
		case TaleWorlds.Library.ListChangedType.ItemChanged:
			break;
		}
	}

	private void RefreshDataSource_datasource_Root(InitialMenuVM newDataSource)
	{
		if (_datasource_Root != null)
		{
			_datasource_Root.PropertyChanged -= ViewModelPropertyChangedListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithValue -= ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithBoolValue -= ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithIntValue -= ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithFloatValue -= ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithUIntValue -= ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithColorValue -= ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithDoubleValue -= ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
			_datasource_Root.PropertyChangedWithVec2Value -= ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
			_widget_1.PropertyChanged -= PropertyChangedListenerOf_widget_1;
			_widget_1.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1;
			_widget_1.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1;
			_widget_1.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1;
			_widget_1.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1;
			_widget_1.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1;
			_widget_1.intPropertyChanged -= intPropertyChangedListenerOf_widget_1;
			_widget_1.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1;
			_widget_1.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1;
			_widget_1_0.PropertyChanged -= PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_1_0;
			_widget_1_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_1_0;
			_widget_1_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_1_0;
			_widget_1_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_1_0;
			_widget_2.PropertyChanged -= PropertyChangedListenerOf_widget_2;
			_widget_2.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2;
			_widget_2.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2;
			_widget_2.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2;
			_widget_2.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2;
			_widget_2.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2;
			_widget_2.intPropertyChanged -= intPropertyChangedListenerOf_widget_2;
			_widget_2.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2;
			_widget_2.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2;
			_widget_2_0.PropertyChanged -= PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_2_0;
			_widget_2_0.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_2_0;
			_widget_2_0.intPropertyChanged -= intPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_2_0;
			_widget_2_0.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_2_0;
			_widget_3.PropertyChanged -= PropertyChangedListenerOf_widget_3;
			_widget_3.boolPropertyChanged -= boolPropertyChangedListenerOf_widget_3;
			_widget_3.floatPropertyChanged -= floatPropertyChangedListenerOf_widget_3;
			_widget_3.Vec2PropertyChanged -= Vec2PropertyChangedListenerOf_widget_3;
			_widget_3.Vector2PropertyChanged -= Vector2PropertyChangedListenerOf_widget_3;
			_widget_3.doublePropertyChanged -= doublePropertyChangedListenerOf_widget_3;
			_widget_3.intPropertyChanged -= intPropertyChangedListenerOf_widget_3;
			_widget_3.uintPropertyChanged -= uintPropertyChangedListenerOf_widget_3;
			_widget_3.ColorPropertyChanged -= ColorPropertyChangedListenerOf_widget_3;
			if (_datasource_Root_MenuOptions != null)
			{
				_datasource_Root_MenuOptions.ListChanged -= OnList_datasource_Root_MenuOptionsChanged;
				for (int num = _widget_0_0_2_0_0_1.ChildCount - 1; num >= 0; num--)
				{
					Widget child = _widget_0_0_2_0_0_1.GetChild(num);
					((InitialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = _widget_0_0_2_0_0_1.GetChild(num);
					((InitialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate)child2).SetDataSource(null);
					_widget_0_0_2_0_0_1.RemoveChild(child2);
				}
				_datasource_Root_MenuOptions = null;
			}
			_datasource_Root = null;
		}
		_datasource_Root = newDataSource;
		if (_datasource_Root == null)
		{
			return;
		}
		_datasource_Root.PropertyChanged += ViewModelPropertyChangedListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithValue += ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithBoolValue += ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithIntValue += ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithFloatValue += ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithUIntValue += ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithColorValue += ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithDoubleValue += ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
		_datasource_Root.PropertyChangedWithVec2Value += ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
		_widget_1.IsVisible = _datasource_Root.IsProfileSelectionEnabled;
		_widget_1.PropertyChanged += PropertyChangedListenerOf_widget_1;
		_widget_1.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1;
		_widget_1.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1;
		_widget_1.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1;
		_widget_1.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1;
		_widget_1.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1;
		_widget_1.intPropertyChanged += intPropertyChangedListenerOf_widget_1;
		_widget_1.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1;
		_widget_1.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1;
		_widget_1_0.Text = _datasource_Root.ProfileName;
		_widget_1_0.PropertyChanged += PropertyChangedListenerOf_widget_1_0;
		_widget_1_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_1_0;
		_widget_1_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_1_0;
		_widget_1_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_1_0;
		_widget_1_0.intPropertyChanged += intPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_1_0;
		_widget_1_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_1_0;
		_widget_2.IsVisible = _datasource_Root.IsDownloadingContent;
		_widget_2.PropertyChanged += PropertyChangedListenerOf_widget_2;
		_widget_2.boolPropertyChanged += boolPropertyChangedListenerOf_widget_2;
		_widget_2.floatPropertyChanged += floatPropertyChangedListenerOf_widget_2;
		_widget_2.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_2;
		_widget_2.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_2;
		_widget_2.doublePropertyChanged += doublePropertyChangedListenerOf_widget_2;
		_widget_2.intPropertyChanged += intPropertyChangedListenerOf_widget_2;
		_widget_2.uintPropertyChanged += uintPropertyChangedListenerOf_widget_2;
		_widget_2.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_2;
		_widget_2_0.Text = _datasource_Root.DownloadingText;
		_widget_2_0.PropertyChanged += PropertyChangedListenerOf_widget_2_0;
		_widget_2_0.boolPropertyChanged += boolPropertyChangedListenerOf_widget_2_0;
		_widget_2_0.floatPropertyChanged += floatPropertyChangedListenerOf_widget_2_0;
		_widget_2_0.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_2_0;
		_widget_2_0.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_2_0;
		_widget_2_0.doublePropertyChanged += doublePropertyChangedListenerOf_widget_2_0;
		_widget_2_0.intPropertyChanged += intPropertyChangedListenerOf_widget_2_0;
		_widget_2_0.uintPropertyChanged += uintPropertyChangedListenerOf_widget_2_0;
		_widget_2_0.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_2_0;
		_widget_3.Text = _datasource_Root.GameVersionText;
		_widget_3.PropertyChanged += PropertyChangedListenerOf_widget_3;
		_widget_3.boolPropertyChanged += boolPropertyChangedListenerOf_widget_3;
		_widget_3.floatPropertyChanged += floatPropertyChangedListenerOf_widget_3;
		_widget_3.Vec2PropertyChanged += Vec2PropertyChangedListenerOf_widget_3;
		_widget_3.Vector2PropertyChanged += Vector2PropertyChangedListenerOf_widget_3;
		_widget_3.doublePropertyChanged += doublePropertyChangedListenerOf_widget_3;
		_widget_3.intPropertyChanged += intPropertyChangedListenerOf_widget_3;
		_widget_3.uintPropertyChanged += uintPropertyChangedListenerOf_widget_3;
		_widget_3.ColorPropertyChanged += ColorPropertyChangedListenerOf_widget_3;
		_datasource_Root_MenuOptions = _datasource_Root.MenuOptions;
		if (_datasource_Root_MenuOptions != null)
		{
			_datasource_Root_MenuOptions.ListChanged += OnList_datasource_Root_MenuOptionsChanged;
			for (int i = 0; i < _datasource_Root_MenuOptions.Count; i++)
			{
				InitialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate = new InitialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate);
				InitialMenuOptionVM dataSource = (InitialMenuOptionVM)(generatedWidgetData.Data = _datasource_Root_MenuOptions[i]);
				initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0_0_2_0_0_1.AddChildAtIndex(initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate, i);
				initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate.CreateWidgets();
				initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate.SetIds();
				initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate.SetAttributes();
				initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}

	private void RefreshDataSource_datasource_Root_MenuOptions(MBBindingList<InitialMenuOptionVM> newDataSource)
	{
		if (_datasource_Root_MenuOptions != null)
		{
			_datasource_Root_MenuOptions.ListChanged -= OnList_datasource_Root_MenuOptionsChanged;
			for (int num = _widget_0_0_2_0_0_1.ChildCount - 1; num >= 0; num--)
			{
				Widget child = _widget_0_0_2_0_0_1.GetChild(num);
				((InitialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
				Widget child2 = _widget_0_0_2_0_0_1.GetChild(num);
				((InitialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate)child2).SetDataSource(null);
				_widget_0_0_2_0_0_1.RemoveChild(child2);
			}
			_datasource_Root_MenuOptions = null;
		}
		_datasource_Root_MenuOptions = newDataSource;
		_datasource_Root_MenuOptions = _datasource_Root.MenuOptions;
		if (_datasource_Root_MenuOptions != null)
		{
			_datasource_Root_MenuOptions.ListChanged += OnList_datasource_Root_MenuOptionsChanged;
			for (int i = 0; i < _datasource_Root_MenuOptions.Count; i++)
			{
				InitialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate = new InitialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate);
				InitialMenuOptionVM dataSource = (InitialMenuOptionVM)(generatedWidgetData.Data = _datasource_Root_MenuOptions[i]);
				initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
				_widget_0_0_2_0_0_1.AddChildAtIndex(initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate, i);
				initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate.CreateWidgets();
				initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate.SetIds();
				initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate.SetAttributes();
				initialScreen__TaleWorlds_MountAndBlade_ViewModelCollection_InitialMenu_InitialMenuVM_Dependency_1_ItemTemplate.SetDataSource(dataSource);
			}
		}
	}
}
